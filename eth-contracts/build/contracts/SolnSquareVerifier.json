{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currentOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownershipTransfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "pausable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "retrieveCurrentOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownershipTransfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"pausable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"retrieveCurrentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xe29fcc2044a0d3c7571d2404179526a165b2e51d8fd4e134044e723bb6e01d35\",\"urls\":[\"bzz-raw://481ccea8da392fc71ddb9f005a0108120ccf2b57ea07120ceb0896d31b86d996\",\"dweb:/ipfs/QmahnYhP4TZvF8ezsa8aatLunfYK8rKe2DvSgtAV6zBwBh\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x5cb433193f425fa3d5912f0d4eaa18d97d693c15fe8995f3b497caeb839dca5f\",\"urls\":[\"bzz-raw://92f8cb922254b752a5943de5b47ba17a9cd61da3475b658d5aff9afc15120579\",\"dweb:/ipfs/QmUkWrR1y1uFbJgVK2A2uWLFsnn3dUVaynofpbrbDVSHv2\"]},\"project:/contracts/SquareVerifier.sol\":{\"keccak256\":\"0x5fe7b3aa78aeebd64eca2606c0dbdb11e55ac2a232012407ca6fb943691ce24e\",\"urls\":[\"bzz-raw://59f7ca79e63874277fd6540827080d4d78a50c27a5eab1fe476d7199dbce6aa9\",\"dweb:/ipfs/QmXp93Z9pDXhDg6BPiYAkmj9qgbbyiXS8YH1vqZkaGeo21\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280601681526020017f5265616c20457374617465204e465420546f6b656e73000000000000000000008152506040518060400160405280600481526020017f52454e54000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162005051603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ee35ffa528a36037ec23ed4b99d479118464d605ffa951ac0441db66273b33260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200012d92919062000534565b60405180910390a160008060146101000a81548160ff021916908315150217905550620001676301ffc9a760e01b6200047260201b60201c565b6200017f6380ac58cd60e01b6200047260201b60201c565b6200019763780e9d6360e01b6200047260201b60201c565b600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620002315780601f10620002055761010080835404028352916020019162000231565b820191906000526020600020905b8154815290600101906020018083116200021357829003601f168201915b5050505050925060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620002d25780601f10620002a657610100808354040283529160200191620002d2565b820191906000526020600020905b815481529060010190602001808311620002b457829003601f168201915b5050505050915060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620003735780601f10620003475761010080835404028352916020019162000373565b820191906000526020600020905b8154815290600101906020018083116200035557829003601f168201915b5050505050905062000392635b5e139f60e01b6200047260201b60201c565b5050506013604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160001515815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908315150217905550505050620005d1565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620004a657600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6200051d8162000595565b82525050565b6200052e8162000561565b82525050565b60006040820190506200054b600083018562000512565b6200055a602083018462000523565b9392505050565b60006200056e8262000575565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005a282620005a9565b9050919050565b6000620005b682620005bd565b9050919050565b6000620005ca8262000575565b9050919050565b614a7080620005e16000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80634f6ccce7116100de578063aa59c54611610097578063c87b56dd11610071578063c87b56dd146104b9578063d547cfb7146104e9578063e985e9c514610507578063f2fde38b146105375761018e565b8063aa59c54614610461578063b2bdfa7b1461047f578063b88d4fde1461049d5761018e565b80634f6ccce714610367578063621e9ec0146103975780636352211e146103c757806370a08231146103f757806395d89b4114610427578063a22cb465146104455761018e565b8063272870ac1161014b57806338bbfa501161012557806338bbfa50146102e35780633eec14da146102ff57806340c10f191461031b57806342842e0e1461034b5761018e565b8063272870ac1461026757806327dc297e146102975780632f745c59146102b35761018e565b806301ffc9a71461019357806306fdde03146101c3578063081812fc146101e1578063095ea7b31461021157806318160ddd1461022d57806323b872dd1461024b575b600080fd5b6101ad60048036036101a89190810190613ca5565b610553565b6040516101ba9190614488565b60405180910390f35b6101cb6105bb565b6040516101d891906144a3565b60405180910390f35b6101fb60048036036101f69190810190613cf7565b61065d565b60405161020891906143f8565b60405180910390f35b61022b60048036036102269190810190613a7c565b6106e2565b005b61023561087a565b60405161024291906146c5565b60405180910390f35b61026560048036036102609190810190613976565b610887565b005b610281600480360361027c9190810190613ba9565b6108aa565b60405161028e9190614488565b60405180910390f35b6102b160048036036102ac9190810190613bd2565b6109b7565b005b6102cd60048036036102c89190810190613a7c565b6109fa565b6040516102da91906146c5565b60405180910390f35b6102fd60048036036102f89190810190613c26565b610a6d565b005b61031960048036036103149190810190613ab8565b610a72565b005b61033560048036036103309190810190613a7c565b610caa565b6040516103429190614488565b60405180910390f35b61036560048036036103609190810190613976565b610ea5565b005b610381600480360361037c9190810190613cf7565b610ec5565b60405161038e91906146c5565b60405180910390f35b6103b160048036036103ac9190810190613b44565b610ef9565b6040516103be9190614488565b60405180910390f35b6103e160048036036103dc9190810190613cf7565b61112a565b6040516103ee91906143f8565b60405180910390f35b610411600480360361040c9190810190613911565b611167565b60405161041e91906146c5565b60405180910390f35b61042f6111b7565b60405161043c91906144a3565b60405180910390f35b61045f600480360361045a9190810190613a40565b611259565b005b61046961138f565b60405161047691906143f8565b60405180910390f35b6104876113b8565b60405161049491906143f8565b60405180910390f35b6104b760048036036104b291908101906139c5565b6113dd565b005b6104d360048036036104ce9190810190613cf7565b611403565b6040516104e091906144a3565b60405180910390f35b6104f16114ca565b6040516104fe91906144a3565b60405180910390f35b610521600480360361051c919081019061393a565b61156c565b60405161052e9190614488565b60405180910390f35b610551600480360361054c9190810190613911565b611600565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106535780601f1061062857610100808354040283529160200191610653565b820191906000526020600020905b81548152906001019060200180831161063657829003601f168201915b5050505050905090565b60006106688261182b565b6106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90614525565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106ed8261112a565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590614505565b60405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107bf57506107be813361156c565b5b6107c857600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b610891338261189d565b61089a57600080fd5b6108a5838383611932565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610932906144e5565b60405180910390fd5b60001515600060149054906101000a900460ff16151514610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098890614625565b60405180910390fd5b81600060146101000a81548160ff02191690831515021790555060019150819050919050565b6109f6828260006040519080825280601f01601f1916602001820160405280156109f05781602001600182028038833980820191505090505b50610a6d565b5050565b6000610a0583611167565b8210610a1057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a5a57fe5b9060005260206000200154905092915050565b505050565b600084848484604051602001610a8b94939291906143aa565b604051602081830303815290604052805190602001209050600015156014600083815260200190815260200160002060009054906101000a900460ff16151514610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190614685565b60405180910390fd5b6000610b1886868686610ef9565b905080610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5190614645565b60405180910390fd5b610b62613429565b60405180606001604052808981526020018a73ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555050505060016014600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d888a604051610c979291906146e0565b60405180910390a1505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d32906144e5565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660138381548110610d5f57fe5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dde906145e5565b60405180910390fd5b6000151560138381548110610df857fe5b906000526020600020906002020160010160149054906101000a900460ff16151514610e59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e50906145a5565b60405180910390fd5b600160138381548110610e6857fe5b906000526020600020906002020160010160146101000a81548160ff021916908315150217905550610e9a8383611956565b506001905092915050565b610ec0838383604051806020016040528060008152506113dd565b505050565b6000610ecf61087a565b8210610eda57600080fd5b60088281548110610ee757fe5b90600052602060002001549050919050565b6000610f03613462565b604051806040016040528087600060028110610f1b57fe5b6020020151815260200187600160028110610f3257fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110610f6557fe5b6020020151600060028110610f7657fe5b6020020151815260200188600060028110610f8d57fe5b6020020151600160028110610f9e57fe5b60200201518152508152602001604051806040016040528088600160028110610fc357fe5b6020020151600060028110610fd457fe5b6020020151815260200188600160028110610feb57fe5b6020020151600160028110610ffc57fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061102757fe5b602002015181526020018560016002811061103e57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156110805781602001602082028038833980820191505090505b50905060008090505b60028110156110c85784816002811061109e57fe5b60200201518282815181106110af57fe5b6020026020010181815250508080600101915050611089565b5060006110d58284611a04565b141561111b577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39604051611108906145c5565b60405180910390a1600192505050611122565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006111b0600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b31565b9050919050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561124f5780601f106112245761010080835404028352916020019161124f565b820191906000526020600020905b81548152906001019060200180831161123257829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561129257600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113839190614488565b60405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6113e8848484610887565b6113f484848484611b3f565b6113fd57600080fd5b50505050565b606061140e8261182b565b61141757600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114be5780601f10611493576101008083540402835291602001916114be565b820191906000526020600020905b8154815290600101906020018083116114a157829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115625780601f1061153757610100808354040283529160200191611562565b820191906000526020600020905b81548152906001019060200180831161154557829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461168f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611686906144e5565b60405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461171e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171590614605565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561178e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178590614585565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ee35ffa528a36037ec23ed4b99d479118464d605ffa951ac0441db66273b3326000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260405161182092919061445f565b60405180910390a150565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806118a98361112a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061191857508373ffffffffffffffffffffffffffffffffffffffff166119008461065d565b73ffffffffffffffffffffffffffffffffffffffff16145b806119295750611928818561156c565b5b91505092915050565b61193d838383611c56565b6119478382611e85565b6119518282612023565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119de906144e5565b60405180910390fd5b6119f183836120ea565b6119fa8261210b565b6001905092915050565b6000611a0e613495565b611a16612229565b9050806080015151600185510114611a2d57600080fd5b611a356134dc565b6040518060400160405280600081526020016000815250905060008090505b8551811015611aac57611a9d82611a9885608001516001850181518110611a7757fe5b6020026020010151898581518110611a8b57fe5b6020026020010151612677565b61270b565b91508080600101915050611a54565b50611acf818360800151600081518110611ac257fe5b602002602001015161270b565b9050611b1584600001518560200151611ae7846127be565b8560400151611af989604001516127be565b8760600151611b0b89600001516127be565b8960200151612858565b611b2457600192505050611b2b565b6000925050505b92915050565b600081600001549050919050565b6000611b608473ffffffffffffffffffffffffffffffffffffffff166129bc565b611b6d5760019050611c4e565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611bae9493929190614413565b602060405180830381600087803b158015611bc857600080fd5b505af1158015611bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c009190810190613cce565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b611c5f8161112a565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc390614665565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d33906146a5565b60405180910390fd5b611d4581612a07565b611d8c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ac5565b611dd3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ae8565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611edd6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612afe90919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611fca576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f4a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611fa257fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361201c91906134f6565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6120f48282612b48565b6120fe8282612023565b61210781612cfa565b5050565b6121148161182b565b612153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214a90614565565b60405180910390fd5b6121ff60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121ec5780601f106121c1576101008083540402835291602001916121ec565b820191906000526020600020905b8154815290600101906020018083116121cf57829003601f168201915b50505050506121fa83612d46565b612e73565b601260008381526020019081526020016000209080519060200190612225929190613522565b5050565b612231613495565b60405180604001604052807f0be94ee1a3fdf6a0b4c34a13559b6b518613e82fae0709f2c4b95d7c253e077981526020017f22c2b6b5f7113a4722896e186fd203cb735e095e58517e014f9680dbbde6d10c8152508160000181905250604051806040016040528060405180604001604052807f2d0d5131a48ae4110cb1f5a65774087c88880f29c6e47b7cb0eec72f453c851581526020017f2ec3c72c13e3c5a2982b6713b8ddc53d6211fcd62aee90311ce22da0b5a827bf815250815260200160405180604001604052807f1133bc98050212232ecba663bc9a2fb9974e072c6a97654c14f606e8cd235a3581526020017f096f78c68e62de709ff8fbb7d5f335cd44c3bcc09af3ffbb35c79a8016f198f38152508152508160200181905250604051806040016040528060405180604001604052807f15b46ba775aea01a53f7a4ebd15c0831c8f095434bc17c524325cbeb898a176c81526020017f1c83d7c3f31df7f940403c4a59a698c865d1679bb040f8bb795b837f1e98b93e815250815260200160405180604001604052807f0407917805e2f825d1dd62979ec9300024e33e07ecc2930574d81fb2ee5030e181526020017f2abae7092fd8c3756dd1159102e44e50fb829c2eeb54d028563aef809d7800d18152508152508160400181905250604051806040016040528060405180604001604052807f086975b746e562005b1650ff1d3a728988d99e50458b25d7587902865ecf3cb681526020017f16812ed59ee295a228d112a449db15d2b5fac66ab4cafbda3dbfc472fc68bfec815250815260200160405180604001604052807f2f690d9e8976c43d51720e18acdd35fd439749e38b3ace29c77d051b23acd66881526020017f17b61a64d980f9f2d9090d008b7778581f29257f5e18b3d710996876ab8245ae8152508152508160600181905250600360405190808252806020026020018201604052801561251857816020015b6125056135a2565b8152602001906001900390816124fd5790505b50816080018190525060405180604001604052807f1bf172bf2472bb1425e8c82620218add62481275c74295dc224d1666953911b581526020017f0ea378eb09c30d35aa2b5810cb60b867c5253b8bcec926f11a9755cafec98eb6815250816080015160008151811061258757fe5b602002602001018190525060405180604001604052807f278c7ac6de4c26f8869b65ad7fd2dcc540128edd250d57265fc7cc04e3246b9581526020017f208efae830008f0ae6e049ec32ff1715ead31dc5840bf41160bc2cc5a1e4623d81525081608001516001815181106125f857fe5b602002602001018190525060405180604001604052807f1702f7c7be7ae788499fde2a8f99c1be41397bda02564ed811d57875436b83ca81526020017f1ac5eb49c76b1fbd269959c6245a4e64808eb28990b8a6282c21369b3be1874e815250816080015160028151811061266957fe5b602002602001018190525090565b61267f6134dc565b6126876135bc565b83600001518160006003811061269957fe5b6020020181815250508360200151816001600381106126b457fe5b60200201818152505082816002600381106126cb57fe5b6020020181815250506000606083608084600060076107d05a03f1905080600081146126f6576126f8565bfe5b508061270357600080fd5b505092915050565b6127136134dc565b61271b6135de565b83600001518160006004811061272d57fe5b60200201818152505083602001518160016004811061274857fe5b60200201818152505082600001518160026004811061276357fe5b60200201818152505082602001518160036004811061277e57fe5b602002018181525050600060608360c084600060066107d05a03f1905080600081146127a9576127ab565bfe5b50806127b657600080fd5b505092915050565b6127c66134dc565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015612803575060008360200151145b15612827576040518060400160405280600081526020016000815250915050612853565b6040518060400160405280846000015181526020018285602001518161284957fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561289757816020015b6128846135a2565b81526020019060019003908161287c5790505b509050606060046040519080825280602002602001820160405280156128d757816020015b6128c4613600565b8152602001906001900390816128bc5790505b5090508a826000815181106128e857fe5b6020026020010181905250888260018151811061290157fe5b6020026020010181905250868260028151811061291a57fe5b6020026020010181905250848260038151811061293357fe5b6020026020010181905250898160008151811061294c57fe5b6020026020010181905250878160018151811061296557fe5b6020026020010181905250858160028151811061297e57fe5b6020026020010181905250838160038151811061299757fe5b60200260200101819052506129ac8282612eb7565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156129fe57506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612ac25760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612add60018260000154612afe90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612b4083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061310c565b905092915050565b612b518161182b565b15612b91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b88906144c5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bf890614545565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c9a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ae8565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612d8e576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612e6e565b600082905060005b60008214612db8578080600101915050600a8281612db057fe5b049150612d96565b6060816040519080825280601f01601f191660200182016040528015612ded5781602001600182028038833980820191505090505b50905060006001830390505b60008614612e6657600a8681612e0b57fe5b0660300160f81b82828060019003935081518110612e2557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681612e5e57fe5b049550612df9565b819450505050505b919050565b6060612eaf8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613167565b905092915050565b60008151835114612ec757600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015612f065781602001602082028038833980820191505090505b50905060008090505b838110156130ac57868181518110612f2357fe5b602002602001015160000151826000600684020181518110612f4157fe5b602002602001018181525050868181518110612f5957fe5b602002602001015160200151826001600684020181518110612f7757fe5b602002602001018181525050858181518110612f8f57fe5b602002602001015160000151600060028110612fa757fe5b6020020151826002600684020181518110612fbe57fe5b602002602001018181525050858181518110612fd657fe5b602002602001015160000151600160028110612fee57fe5b602002015182600360068402018151811061300557fe5b60200260200101818152505085818151811061301d57fe5b60200260200101516020015160006002811061303557fe5b602002015182600460068402018151811061304c57fe5b60200260200101818152505085818151811061306457fe5b60200260200101516020015160016002811061307c57fe5b602002015182600560068402018151811061309357fe5b6020026020010181815250508080600101915050612f0f565b506130b5613626565b60006020826020860260208601600060086107d05a03f1905080600081146130dc576130de565bfe5b50806130e957600080fd5b6000826000600181106130f857fe5b602002015114159550505050505092915050565b6000838311158290613154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161314b91906144a3565b60405180910390fd5b5060008385039050809150509392505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156131c35781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613248578881815181106131ef57fe5b602001015160f81c60f81b83838060010194508151811061320c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506131da565b600090505b87518110156132bb5787818151811061326257fe5b602001015160f81c60f81b83838060010194508151811061327f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061324d565b600090505b865181101561332e578681815181106132d557fe5b602001015160f81c60f81b8383806001019450815181106132f257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506132c0565b600090505b85518110156133a15785818151811061334857fe5b602001015160f81c60f81b83838060010194508151811061336557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613333565b600090505b8451811015613414578481815181106133bb57fe5b602001015160f81c60f81b8383806001019450815181106133d857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506133a6565b82995050505050505050505095945050505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b60405180606001604052806134756135a2565b8152602001613482613600565b815260200161348f6135a2565b81525090565b6040518060a001604052806134a86135a2565b81526020016134b5613600565b81526020016134c2613600565b81526020016134cf613600565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b81548183558181111561351d5781836000526020600020918201910161351c9190613648565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061356357805160ff1916838001178555613591565b82800160010185558215613591579182015b82811115613590578251825591602001919060010190613575565b5b50905061359e9190613648565b5090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061361361366d565b815260200161362061366d565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61366a91905b8082111561366657600081600090555060010161364e565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b60008135905061369e816149ba565b92915050565b600082601f8301126136b557600080fd5b60026136c86136c382614736565b614709565b915081838560408402820111156136de57600080fd5b60005b8381101561370e57816136f48882613718565b8452602084019350604083019250506001810190506136e1565b5050505092915050565b600082601f83011261372957600080fd5b600261373c61373782614758565b614709565b9150818385602084028201111561375257600080fd5b60005b83811015613782578161376888826138fc565b845260208401935060208301925050600181019050613755565b5050505092915050565b600082601f83011261379d57600080fd5b60026137b06137ab8261477a565b614709565b915081838560208402820111156137c657600080fd5b60005b838110156137f657816137dc88826138fc565b8452602084019350602083019250506001810190506137c9565b5050505092915050565b60008135905061380f816149d1565b92915050565b600081359050613824816149e8565b92915050565b600081359050613839816149ff565b92915050565b60008151905061384e816149ff565b92915050565b600082601f83011261386557600080fd5b81356138786138738261479c565b614709565b9150808252602083016020830185838301111561389457600080fd5b61389f838284614967565b50505092915050565b600082601f8301126138b957600080fd5b81356138cc6138c7826147c8565b614709565b915080825260208301602083018583830111156138e857600080fd5b6138f3838284614967565b50505092915050565b60008135905061390b81614a16565b92915050565b60006020828403121561392357600080fd5b60006139318482850161368f565b91505092915050565b6000806040838503121561394d57600080fd5b600061395b8582860161368f565b925050602061396c8582860161368f565b9150509250929050565b60008060006060848603121561398b57600080fd5b60006139998682870161368f565b93505060206139aa8682870161368f565b92505060406139bb868287016138fc565b9150509250925092565b600080600080608085870312156139db57600080fd5b60006139e98782880161368f565b94505060206139fa8782880161368f565b9350506040613a0b878288016138fc565b925050606085013567ffffffffffffffff811115613a2857600080fd5b613a3487828801613854565b91505092959194509250565b60008060408385031215613a5357600080fd5b6000613a618582860161368f565b9250506020613a7285828601613800565b9150509250929050565b60008060408385031215613a8f57600080fd5b6000613a9d8582860161368f565b9250506020613aae858286016138fc565b9150509250929050565b6000806000806000806101808789031215613ad257600080fd5b6000613ae089828a0161368f565b9650506020613af189828a016138fc565b9550506040613b0289828a0161378c565b9450506080613b1389828a016136a4565b935050610100613b2589828a0161378c565b925050610140613b3789828a0161378c565b9150509295509295509295565b6000806000806101408587031215613b5b57600080fd5b6000613b698782880161378c565b9450506040613b7a878288016136a4565b93505060c0613b8b8782880161378c565b925050610100613b9d8782880161378c565b91505092959194509250565b600060208284031215613bbb57600080fd5b6000613bc984828501613800565b91505092915050565b60008060408385031215613be557600080fd5b6000613bf385828601613815565b925050602083013567ffffffffffffffff811115613c1057600080fd5b613c1c858286016138a8565b9150509250929050565b600080600060608486031215613c3b57600080fd5b6000613c4986828701613815565b935050602084013567ffffffffffffffff811115613c6657600080fd5b613c72868287016138a8565b925050604084013567ffffffffffffffff811115613c8f57600080fd5b613c9b86828701613854565b9150509250925092565b600060208284031215613cb757600080fd5b6000613cc58482850161382a565b91505092915050565b600060208284031215613ce057600080fd5b6000613cee8482850161383f565b91505092915050565b600060208284031215613d0957600080fd5b6000613d17848285016138fc565b91505092915050565b6000613d2c8383613e1c565b60408301905092915050565b6000613d44838361439b565b60208301905092915050565b613d5981614931565b82525050565b613d68816148b3565b82525050565b613d7781614812565b613d818184614870565b9250613d8c826147f4565b8060005b83811015613dbd578151613da48782613d20565b9650613daf83614849565b925050600181019050613d90565b505050505050565b613dce81614828565b613dd88184614886565b9250613de382614808565b8060005b83811015613e14578151613dfb8782613d38565b9650613e0683614863565b925050600181019050613de7565b505050505050565b613e258161481d565b613e2f818461487b565b9250613e3a826147fe565b8060005b83811015613e6b578151613e528782613d38565b9650613e5d83614856565b925050600181019050613e3e565b505050505050565b613e7c816148c5565b82525050565b6000613e8d82614833565b613e978185614891565b9350613ea7818560208601614976565b613eb0816149a9565b840191505092915050565b6000613ec68261483e565b613ed081856148a2565b9350613ee0818560208601614976565b613ee9816149a9565b840191505092915050565b6000613f016014836148a2565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000613f416019836148a2565b91507f4e6f74206f776e6572206f662074686520636f6e7472616374000000000000006000830152602082019050919050565b6000613f81602c836148a2565b91507f4f776e6572206f6620546f6b656e20494420697320657175616c20746f20746860008301527f6520746f206164647265737300000000000000000000000000000000000000006020830152604082019050919050565b6000613fe76014836148a2565b91507f546f6b656e20646f6573206e6f742065786973740000000000000000000000006000830152602082019050919050565b60006140276018836148a2565b91507f4164647265737320676976656e20697320696e76616c696400000000000000006000830152602082019050919050565b6000614067601b836148a2565b91507f5468697320697320616e20696e76616c696420746f6b656e20696400000000006000830152602082019050919050565b60006140a7601e836148a2565b91507f6e65774f776572206973206e6f7420612076616c6964206164647265737300006000830152602082019050919050565b60006140e7601d836148a2565b91507f546f6b656e2068617320616c7265616479206265656e206d696e7465640000006000830152602082019050919050565b60006141276022836148a2565b91507f5472616e73616374696f6e207375636365737366756c6c79207665726966696560008301527f642e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061418d601f836148a2565b91507f4164647265737320646f6573206e6f74206d6174636820736f6c7574696f6e006000830152602082019050919050565b60006141cd601e836148a2565b91507f4e6577204f776e6572206973206f776e6572206f6620636f6e747261637400006000830152602082019050919050565b600061420d601c836148a2565b91507f706175736564207661726961626c65206973206e6f742066616c7365000000006000830152602082019050919050565b600061424d601a836148a2565b91507f436f756c64206e6f742076657269667920736f6c7574696f6e730000000000006000830152602082019050919050565b600061428d602d836148a2565b91507f46726f6d206164647266657373206973204e4f54206f776e6572206f6620746860008301527f6520676976656e20746f6b656e000000000000000000000000000000000000006020830152604082019050919050565b60006142f36023836148a2565b91507f5468697320736f6c7574696f6e2068617320616c7265616479206265656e207560008301527f73656400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006143596020836148a2565b91507f7472616e7366657220746f2061646472657373206973206e6f742076616c69646000830152602082019050919050565b61439581614927565b82525050565b6143a481614927565b82525050565b60006143b68287613dc5565b6040820191506143c68286613d6e565b6080820191506143d68285613dc5565b6040820191506143e68284613dc5565b60408201915081905095945050505050565b600060208201905061440d6000830184613d5f565b92915050565b60006080820190506144286000830187613d50565b6144356020830186613d5f565b614442604083018561438c565b81810360608301526144548184613e82565b905095945050505050565b60006040820190506144746000830185613d5f565b6144816020830184613d5f565b9392505050565b600060208201905061449d6000830184613e73565b92915050565b600060208201905081810360008301526144bd8184613ebb565b905092915050565b600060208201905081810360008301526144de81613ef4565b9050919050565b600060208201905081810360008301526144fe81613f34565b9050919050565b6000602082019050818103600083015261451e81613f74565b9050919050565b6000602082019050818103600083015261453e81613fda565b9050919050565b6000602082019050818103600083015261455e8161401a565b9050919050565b6000602082019050818103600083015261457e8161405a565b9050919050565b6000602082019050818103600083015261459e8161409a565b9050919050565b600060208201905081810360008301526145be816140da565b9050919050565b600060208201905081810360008301526145de8161411a565b9050919050565b600060208201905081810360008301526145fe81614180565b9050919050565b6000602082019050818103600083015261461e816141c0565b9050919050565b6000602082019050818103600083015261463e81614200565b9050919050565b6000602082019050818103600083015261465e81614240565b9050919050565b6000602082019050818103600083015261467e81614280565b9050919050565b6000602082019050818103600083015261469e816142e6565b9050919050565b600060208201905081810360008301526146be8161434c565b9050919050565b60006020820190506146da600083018461438c565b92915050565b60006040820190506146f5600083018561438c565b6147026020830184613d5f565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561472c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561474d57600080fd5b602082029050919050565b600067ffffffffffffffff82111561476f57600080fd5b602082029050919050565b600067ffffffffffffffff82111561479157600080fd5b602082029050919050565b600067ffffffffffffffff8211156147b357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156147df57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006148be82614907565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061493c82614943565b9050919050565b600061494e82614955565b9050919050565b600061496082614907565b9050919050565b82818337600083830152505050565b60005b83811015614994578082015181840152602081019050614979565b838111156149a3576000848401525b50505050565b6000601f19601f8301169050919050565b6149c3816148b3565b81146149ce57600080fd5b50565b6149da816148c5565b81146149e557600080fd5b50565b6149f1816148d1565b81146149fc57600080fd5b50565b614a08816148db565b8114614a1357600080fd5b50565b614a1f81614927565b8114614a2a57600080fd5b5056fea365627a7a72315820fbe650e544cbddeaa456c7319e7300aa47b2c0d541f6dab56b4a325d5476545a6c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80634f6ccce7116100de578063aa59c54611610097578063c87b56dd11610071578063c87b56dd146104b9578063d547cfb7146104e9578063e985e9c514610507578063f2fde38b146105375761018e565b8063aa59c54614610461578063b2bdfa7b1461047f578063b88d4fde1461049d5761018e565b80634f6ccce714610367578063621e9ec0146103975780636352211e146103c757806370a08231146103f757806395d89b4114610427578063a22cb465146104455761018e565b8063272870ac1161014b57806338bbfa501161012557806338bbfa50146102e35780633eec14da146102ff57806340c10f191461031b57806342842e0e1461034b5761018e565b8063272870ac1461026757806327dc297e146102975780632f745c59146102b35761018e565b806301ffc9a71461019357806306fdde03146101c3578063081812fc146101e1578063095ea7b31461021157806318160ddd1461022d57806323b872dd1461024b575b600080fd5b6101ad60048036036101a89190810190613ca5565b610553565b6040516101ba9190614488565b60405180910390f35b6101cb6105bb565b6040516101d891906144a3565b60405180910390f35b6101fb60048036036101f69190810190613cf7565b61065d565b60405161020891906143f8565b60405180910390f35b61022b60048036036102269190810190613a7c565b6106e2565b005b61023561087a565b60405161024291906146c5565b60405180910390f35b61026560048036036102609190810190613976565b610887565b005b610281600480360361027c9190810190613ba9565b6108aa565b60405161028e9190614488565b60405180910390f35b6102b160048036036102ac9190810190613bd2565b6109b7565b005b6102cd60048036036102c89190810190613a7c565b6109fa565b6040516102da91906146c5565b60405180910390f35b6102fd60048036036102f89190810190613c26565b610a6d565b005b61031960048036036103149190810190613ab8565b610a72565b005b61033560048036036103309190810190613a7c565b610caa565b6040516103429190614488565b60405180910390f35b61036560048036036103609190810190613976565b610ea5565b005b610381600480360361037c9190810190613cf7565b610ec5565b60405161038e91906146c5565b60405180910390f35b6103b160048036036103ac9190810190613b44565b610ef9565b6040516103be9190614488565b60405180910390f35b6103e160048036036103dc9190810190613cf7565b61112a565b6040516103ee91906143f8565b60405180910390f35b610411600480360361040c9190810190613911565b611167565b60405161041e91906146c5565b60405180910390f35b61042f6111b7565b60405161043c91906144a3565b60405180910390f35b61045f600480360361045a9190810190613a40565b611259565b005b61046961138f565b60405161047691906143f8565b60405180910390f35b6104876113b8565b60405161049491906143f8565b60405180910390f35b6104b760048036036104b291908101906139c5565b6113dd565b005b6104d360048036036104ce9190810190613cf7565b611403565b6040516104e091906144a3565b60405180910390f35b6104f16114ca565b6040516104fe91906144a3565b60405180910390f35b610521600480360361051c919081019061393a565b61156c565b60405161052e9190614488565b60405180910390f35b610551600480360361054c9190810190613911565b611600565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106535780601f1061062857610100808354040283529160200191610653565b820191906000526020600020905b81548152906001019060200180831161063657829003601f168201915b5050505050905090565b60006106688261182b565b6106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90614525565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106ed8261112a565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590614505565b60405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107bf57506107be813361156c565b5b6107c857600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b610891338261189d565b61089a57600080fd5b6108a5838383611932565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610932906144e5565b60405180910390fd5b60001515600060149054906101000a900460ff16151514610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098890614625565b60405180910390fd5b81600060146101000a81548160ff02191690831515021790555060019150819050919050565b6109f6828260006040519080825280601f01601f1916602001820160405280156109f05781602001600182028038833980820191505090505b50610a6d565b5050565b6000610a0583611167565b8210610a1057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a5a57fe5b9060005260206000200154905092915050565b505050565b600084848484604051602001610a8b94939291906143aa565b604051602081830303815290604052805190602001209050600015156014600083815260200190815260200160002060009054906101000a900460ff16151514610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190614685565b60405180910390fd5b6000610b1886868686610ef9565b905080610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5190614645565b60405180910390fd5b610b62613429565b60405180606001604052808981526020018a73ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555050505060016014600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d888a604051610c979291906146e0565b60405180910390a1505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d32906144e5565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660138381548110610d5f57fe5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dde906145e5565b60405180910390fd5b6000151560138381548110610df857fe5b906000526020600020906002020160010160149054906101000a900460ff16151514610e59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e50906145a5565b60405180910390fd5b600160138381548110610e6857fe5b906000526020600020906002020160010160146101000a81548160ff021916908315150217905550610e9a8383611956565b506001905092915050565b610ec0838383604051806020016040528060008152506113dd565b505050565b6000610ecf61087a565b8210610eda57600080fd5b60088281548110610ee757fe5b90600052602060002001549050919050565b6000610f03613462565b604051806040016040528087600060028110610f1b57fe5b6020020151815260200187600160028110610f3257fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110610f6557fe5b6020020151600060028110610f7657fe5b6020020151815260200188600060028110610f8d57fe5b6020020151600160028110610f9e57fe5b60200201518152508152602001604051806040016040528088600160028110610fc357fe5b6020020151600060028110610fd457fe5b6020020151815260200188600160028110610feb57fe5b6020020151600160028110610ffc57fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061102757fe5b602002015181526020018560016002811061103e57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156110805781602001602082028038833980820191505090505b50905060008090505b60028110156110c85784816002811061109e57fe5b60200201518282815181106110af57fe5b6020026020010181815250508080600101915050611089565b5060006110d58284611a04565b141561111b577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39604051611108906145c5565b60405180910390a1600192505050611122565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006111b0600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b31565b9050919050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561124f5780601f106112245761010080835404028352916020019161124f565b820191906000526020600020905b81548152906001019060200180831161123257829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561129257600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113839190614488565b60405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6113e8848484610887565b6113f484848484611b3f565b6113fd57600080fd5b50505050565b606061140e8261182b565b61141757600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114be5780601f10611493576101008083540402835291602001916114be565b820191906000526020600020905b8154815290600101906020018083116114a157829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115625780601f1061153757610100808354040283529160200191611562565b820191906000526020600020905b81548152906001019060200180831161154557829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461168f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611686906144e5565b60405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461171e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171590614605565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561178e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178590614585565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ee35ffa528a36037ec23ed4b99d479118464d605ffa951ac0441db66273b3326000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260405161182092919061445f565b60405180910390a150565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806118a98361112a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061191857508373ffffffffffffffffffffffffffffffffffffffff166119008461065d565b73ffffffffffffffffffffffffffffffffffffffff16145b806119295750611928818561156c565b5b91505092915050565b61193d838383611c56565b6119478382611e85565b6119518282612023565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119de906144e5565b60405180910390fd5b6119f183836120ea565b6119fa8261210b565b6001905092915050565b6000611a0e613495565b611a16612229565b9050806080015151600185510114611a2d57600080fd5b611a356134dc565b6040518060400160405280600081526020016000815250905060008090505b8551811015611aac57611a9d82611a9885608001516001850181518110611a7757fe5b6020026020010151898581518110611a8b57fe5b6020026020010151612677565b61270b565b91508080600101915050611a54565b50611acf818360800151600081518110611ac257fe5b602002602001015161270b565b9050611b1584600001518560200151611ae7846127be565b8560400151611af989604001516127be565b8760600151611b0b89600001516127be565b8960200151612858565b611b2457600192505050611b2b565b6000925050505b92915050565b600081600001549050919050565b6000611b608473ffffffffffffffffffffffffffffffffffffffff166129bc565b611b6d5760019050611c4e565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611bae9493929190614413565b602060405180830381600087803b158015611bc857600080fd5b505af1158015611bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c009190810190613cce565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b611c5f8161112a565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc390614665565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d33906146a5565b60405180910390fd5b611d4581612a07565b611d8c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ac5565b611dd3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ae8565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611edd6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612afe90919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611fca576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f4a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611fa257fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361201c91906134f6565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6120f48282612b48565b6120fe8282612023565b61210781612cfa565b5050565b6121148161182b565b612153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214a90614565565b60405180910390fd5b6121ff60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121ec5780601f106121c1576101008083540402835291602001916121ec565b820191906000526020600020905b8154815290600101906020018083116121cf57829003601f168201915b50505050506121fa83612d46565b612e73565b601260008381526020019081526020016000209080519060200190612225929190613522565b5050565b612231613495565b60405180604001604052807f0be94ee1a3fdf6a0b4c34a13559b6b518613e82fae0709f2c4b95d7c253e077981526020017f22c2b6b5f7113a4722896e186fd203cb735e095e58517e014f9680dbbde6d10c8152508160000181905250604051806040016040528060405180604001604052807f2d0d5131a48ae4110cb1f5a65774087c88880f29c6e47b7cb0eec72f453c851581526020017f2ec3c72c13e3c5a2982b6713b8ddc53d6211fcd62aee90311ce22da0b5a827bf815250815260200160405180604001604052807f1133bc98050212232ecba663bc9a2fb9974e072c6a97654c14f606e8cd235a3581526020017f096f78c68e62de709ff8fbb7d5f335cd44c3bcc09af3ffbb35c79a8016f198f38152508152508160200181905250604051806040016040528060405180604001604052807f15b46ba775aea01a53f7a4ebd15c0831c8f095434bc17c524325cbeb898a176c81526020017f1c83d7c3f31df7f940403c4a59a698c865d1679bb040f8bb795b837f1e98b93e815250815260200160405180604001604052807f0407917805e2f825d1dd62979ec9300024e33e07ecc2930574d81fb2ee5030e181526020017f2abae7092fd8c3756dd1159102e44e50fb829c2eeb54d028563aef809d7800d18152508152508160400181905250604051806040016040528060405180604001604052807f086975b746e562005b1650ff1d3a728988d99e50458b25d7587902865ecf3cb681526020017f16812ed59ee295a228d112a449db15d2b5fac66ab4cafbda3dbfc472fc68bfec815250815260200160405180604001604052807f2f690d9e8976c43d51720e18acdd35fd439749e38b3ace29c77d051b23acd66881526020017f17b61a64d980f9f2d9090d008b7778581f29257f5e18b3d710996876ab8245ae8152508152508160600181905250600360405190808252806020026020018201604052801561251857816020015b6125056135a2565b8152602001906001900390816124fd5790505b50816080018190525060405180604001604052807f1bf172bf2472bb1425e8c82620218add62481275c74295dc224d1666953911b581526020017f0ea378eb09c30d35aa2b5810cb60b867c5253b8bcec926f11a9755cafec98eb6815250816080015160008151811061258757fe5b602002602001018190525060405180604001604052807f278c7ac6de4c26f8869b65ad7fd2dcc540128edd250d57265fc7cc04e3246b9581526020017f208efae830008f0ae6e049ec32ff1715ead31dc5840bf41160bc2cc5a1e4623d81525081608001516001815181106125f857fe5b602002602001018190525060405180604001604052807f1702f7c7be7ae788499fde2a8f99c1be41397bda02564ed811d57875436b83ca81526020017f1ac5eb49c76b1fbd269959c6245a4e64808eb28990b8a6282c21369b3be1874e815250816080015160028151811061266957fe5b602002602001018190525090565b61267f6134dc565b6126876135bc565b83600001518160006003811061269957fe5b6020020181815250508360200151816001600381106126b457fe5b60200201818152505082816002600381106126cb57fe5b6020020181815250506000606083608084600060076107d05a03f1905080600081146126f6576126f8565bfe5b508061270357600080fd5b505092915050565b6127136134dc565b61271b6135de565b83600001518160006004811061272d57fe5b60200201818152505083602001518160016004811061274857fe5b60200201818152505082600001518160026004811061276357fe5b60200201818152505082602001518160036004811061277e57fe5b602002018181525050600060608360c084600060066107d05a03f1905080600081146127a9576127ab565bfe5b50806127b657600080fd5b505092915050565b6127c66134dc565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015612803575060008360200151145b15612827576040518060400160405280600081526020016000815250915050612853565b6040518060400160405280846000015181526020018285602001518161284957fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561289757816020015b6128846135a2565b81526020019060019003908161287c5790505b509050606060046040519080825280602002602001820160405280156128d757816020015b6128c4613600565b8152602001906001900390816128bc5790505b5090508a826000815181106128e857fe5b6020026020010181905250888260018151811061290157fe5b6020026020010181905250868260028151811061291a57fe5b6020026020010181905250848260038151811061293357fe5b6020026020010181905250898160008151811061294c57fe5b6020026020010181905250878160018151811061296557fe5b6020026020010181905250858160028151811061297e57fe5b6020026020010181905250838160038151811061299757fe5b60200260200101819052506129ac8282612eb7565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156129fe57506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612ac25760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612add60018260000154612afe90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612b4083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061310c565b905092915050565b612b518161182b565b15612b91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b88906144c5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bf890614545565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c9a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ae8565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612d8e576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612e6e565b600082905060005b60008214612db8578080600101915050600a8281612db057fe5b049150612d96565b6060816040519080825280601f01601f191660200182016040528015612ded5781602001600182028038833980820191505090505b50905060006001830390505b60008614612e6657600a8681612e0b57fe5b0660300160f81b82828060019003935081518110612e2557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681612e5e57fe5b049550612df9565b819450505050505b919050565b6060612eaf8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613167565b905092915050565b60008151835114612ec757600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015612f065781602001602082028038833980820191505090505b50905060008090505b838110156130ac57868181518110612f2357fe5b602002602001015160000151826000600684020181518110612f4157fe5b602002602001018181525050868181518110612f5957fe5b602002602001015160200151826001600684020181518110612f7757fe5b602002602001018181525050858181518110612f8f57fe5b602002602001015160000151600060028110612fa757fe5b6020020151826002600684020181518110612fbe57fe5b602002602001018181525050858181518110612fd657fe5b602002602001015160000151600160028110612fee57fe5b602002015182600360068402018151811061300557fe5b60200260200101818152505085818151811061301d57fe5b60200260200101516020015160006002811061303557fe5b602002015182600460068402018151811061304c57fe5b60200260200101818152505085818151811061306457fe5b60200260200101516020015160016002811061307c57fe5b602002015182600560068402018151811061309357fe5b6020026020010181815250508080600101915050612f0f565b506130b5613626565b60006020826020860260208601600060086107d05a03f1905080600081146130dc576130de565bfe5b50806130e957600080fd5b6000826000600181106130f857fe5b602002015114159550505050505092915050565b6000838311158290613154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161314b91906144a3565b60405180910390fd5b5060008385039050809150509392505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156131c35781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613248578881815181106131ef57fe5b602001015160f81c60f81b83838060010194508151811061320c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506131da565b600090505b87518110156132bb5787818151811061326257fe5b602001015160f81c60f81b83838060010194508151811061327f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061324d565b600090505b865181101561332e578681815181106132d557fe5b602001015160f81c60f81b8383806001019450815181106132f257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506132c0565b600090505b85518110156133a15785818151811061334857fe5b602001015160f81c60f81b83838060010194508151811061336557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613333565b600090505b8451811015613414578481815181106133bb57fe5b602001015160f81c60f81b8383806001019450815181106133d857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506133a6565b82995050505050505050505095945050505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b60405180606001604052806134756135a2565b8152602001613482613600565b815260200161348f6135a2565b81525090565b6040518060a001604052806134a86135a2565b81526020016134b5613600565b81526020016134c2613600565b81526020016134cf613600565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b81548183558181111561351d5781836000526020600020918201910161351c9190613648565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061356357805160ff1916838001178555613591565b82800160010185558215613591579182015b82811115613590578251825591602001919060010190613575565b5b50905061359e9190613648565b5090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061361361366d565b815260200161362061366d565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61366a91905b8082111561366657600081600090555060010161364e565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b60008135905061369e816149ba565b92915050565b600082601f8301126136b557600080fd5b60026136c86136c382614736565b614709565b915081838560408402820111156136de57600080fd5b60005b8381101561370e57816136f48882613718565b8452602084019350604083019250506001810190506136e1565b5050505092915050565b600082601f83011261372957600080fd5b600261373c61373782614758565b614709565b9150818385602084028201111561375257600080fd5b60005b83811015613782578161376888826138fc565b845260208401935060208301925050600181019050613755565b5050505092915050565b600082601f83011261379d57600080fd5b60026137b06137ab8261477a565b614709565b915081838560208402820111156137c657600080fd5b60005b838110156137f657816137dc88826138fc565b8452602084019350602083019250506001810190506137c9565b5050505092915050565b60008135905061380f816149d1565b92915050565b600081359050613824816149e8565b92915050565b600081359050613839816149ff565b92915050565b60008151905061384e816149ff565b92915050565b600082601f83011261386557600080fd5b81356138786138738261479c565b614709565b9150808252602083016020830185838301111561389457600080fd5b61389f838284614967565b50505092915050565b600082601f8301126138b957600080fd5b81356138cc6138c7826147c8565b614709565b915080825260208301602083018583830111156138e857600080fd5b6138f3838284614967565b50505092915050565b60008135905061390b81614a16565b92915050565b60006020828403121561392357600080fd5b60006139318482850161368f565b91505092915050565b6000806040838503121561394d57600080fd5b600061395b8582860161368f565b925050602061396c8582860161368f565b9150509250929050565b60008060006060848603121561398b57600080fd5b60006139998682870161368f565b93505060206139aa8682870161368f565b92505060406139bb868287016138fc565b9150509250925092565b600080600080608085870312156139db57600080fd5b60006139e98782880161368f565b94505060206139fa8782880161368f565b9350506040613a0b878288016138fc565b925050606085013567ffffffffffffffff811115613a2857600080fd5b613a3487828801613854565b91505092959194509250565b60008060408385031215613a5357600080fd5b6000613a618582860161368f565b9250506020613a7285828601613800565b9150509250929050565b60008060408385031215613a8f57600080fd5b6000613a9d8582860161368f565b9250506020613aae858286016138fc565b9150509250929050565b6000806000806000806101808789031215613ad257600080fd5b6000613ae089828a0161368f565b9650506020613af189828a016138fc565b9550506040613b0289828a0161378c565b9450506080613b1389828a016136a4565b935050610100613b2589828a0161378c565b925050610140613b3789828a0161378c565b9150509295509295509295565b6000806000806101408587031215613b5b57600080fd5b6000613b698782880161378c565b9450506040613b7a878288016136a4565b93505060c0613b8b8782880161378c565b925050610100613b9d8782880161378c565b91505092959194509250565b600060208284031215613bbb57600080fd5b6000613bc984828501613800565b91505092915050565b60008060408385031215613be557600080fd5b6000613bf385828601613815565b925050602083013567ffffffffffffffff811115613c1057600080fd5b613c1c858286016138a8565b9150509250929050565b600080600060608486031215613c3b57600080fd5b6000613c4986828701613815565b935050602084013567ffffffffffffffff811115613c6657600080fd5b613c72868287016138a8565b925050604084013567ffffffffffffffff811115613c8f57600080fd5b613c9b86828701613854565b9150509250925092565b600060208284031215613cb757600080fd5b6000613cc58482850161382a565b91505092915050565b600060208284031215613ce057600080fd5b6000613cee8482850161383f565b91505092915050565b600060208284031215613d0957600080fd5b6000613d17848285016138fc565b91505092915050565b6000613d2c8383613e1c565b60408301905092915050565b6000613d44838361439b565b60208301905092915050565b613d5981614931565b82525050565b613d68816148b3565b82525050565b613d7781614812565b613d818184614870565b9250613d8c826147f4565b8060005b83811015613dbd578151613da48782613d20565b9650613daf83614849565b925050600181019050613d90565b505050505050565b613dce81614828565b613dd88184614886565b9250613de382614808565b8060005b83811015613e14578151613dfb8782613d38565b9650613e0683614863565b925050600181019050613de7565b505050505050565b613e258161481d565b613e2f818461487b565b9250613e3a826147fe565b8060005b83811015613e6b578151613e528782613d38565b9650613e5d83614856565b925050600181019050613e3e565b505050505050565b613e7c816148c5565b82525050565b6000613e8d82614833565b613e978185614891565b9350613ea7818560208601614976565b613eb0816149a9565b840191505092915050565b6000613ec68261483e565b613ed081856148a2565b9350613ee0818560208601614976565b613ee9816149a9565b840191505092915050565b6000613f016014836148a2565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000613f416019836148a2565b91507f4e6f74206f776e6572206f662074686520636f6e7472616374000000000000006000830152602082019050919050565b6000613f81602c836148a2565b91507f4f776e6572206f6620546f6b656e20494420697320657175616c20746f20746860008301527f6520746f206164647265737300000000000000000000000000000000000000006020830152604082019050919050565b6000613fe76014836148a2565b91507f546f6b656e20646f6573206e6f742065786973740000000000000000000000006000830152602082019050919050565b60006140276018836148a2565b91507f4164647265737320676976656e20697320696e76616c696400000000000000006000830152602082019050919050565b6000614067601b836148a2565b91507f5468697320697320616e20696e76616c696420746f6b656e20696400000000006000830152602082019050919050565b60006140a7601e836148a2565b91507f6e65774f776572206973206e6f7420612076616c6964206164647265737300006000830152602082019050919050565b60006140e7601d836148a2565b91507f546f6b656e2068617320616c7265616479206265656e206d696e7465640000006000830152602082019050919050565b60006141276022836148a2565b91507f5472616e73616374696f6e207375636365737366756c6c79207665726966696560008301527f642e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061418d601f836148a2565b91507f4164647265737320646f6573206e6f74206d6174636820736f6c7574696f6e006000830152602082019050919050565b60006141cd601e836148a2565b91507f4e6577204f776e6572206973206f776e6572206f6620636f6e747261637400006000830152602082019050919050565b600061420d601c836148a2565b91507f706175736564207661726961626c65206973206e6f742066616c7365000000006000830152602082019050919050565b600061424d601a836148a2565b91507f436f756c64206e6f742076657269667920736f6c7574696f6e730000000000006000830152602082019050919050565b600061428d602d836148a2565b91507f46726f6d206164647266657373206973204e4f54206f776e6572206f6620746860008301527f6520676976656e20746f6b656e000000000000000000000000000000000000006020830152604082019050919050565b60006142f36023836148a2565b91507f5468697320736f6c7574696f6e2068617320616c7265616479206265656e207560008301527f73656400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006143596020836148a2565b91507f7472616e7366657220746f2061646472657373206973206e6f742076616c69646000830152602082019050919050565b61439581614927565b82525050565b6143a481614927565b82525050565b60006143b68287613dc5565b6040820191506143c68286613d6e565b6080820191506143d68285613dc5565b6040820191506143e68284613dc5565b60408201915081905095945050505050565b600060208201905061440d6000830184613d5f565b92915050565b60006080820190506144286000830187613d50565b6144356020830186613d5f565b614442604083018561438c565b81810360608301526144548184613e82565b905095945050505050565b60006040820190506144746000830185613d5f565b6144816020830184613d5f565b9392505050565b600060208201905061449d6000830184613e73565b92915050565b600060208201905081810360008301526144bd8184613ebb565b905092915050565b600060208201905081810360008301526144de81613ef4565b9050919050565b600060208201905081810360008301526144fe81613f34565b9050919050565b6000602082019050818103600083015261451e81613f74565b9050919050565b6000602082019050818103600083015261453e81613fda565b9050919050565b6000602082019050818103600083015261455e8161401a565b9050919050565b6000602082019050818103600083015261457e8161405a565b9050919050565b6000602082019050818103600083015261459e8161409a565b9050919050565b600060208201905081810360008301526145be816140da565b9050919050565b600060208201905081810360008301526145de8161411a565b9050919050565b600060208201905081810360008301526145fe81614180565b9050919050565b6000602082019050818103600083015261461e816141c0565b9050919050565b6000602082019050818103600083015261463e81614200565b9050919050565b6000602082019050818103600083015261465e81614240565b9050919050565b6000602082019050818103600083015261467e81614280565b9050919050565b6000602082019050818103600083015261469e816142e6565b9050919050565b600060208201905081810360008301526146be8161434c565b9050919050565b60006020820190506146da600083018461438c565b92915050565b60006040820190506146f5600083018561438c565b6147026020830184613d5f565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561472c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561474d57600080fd5b602082029050919050565b600067ffffffffffffffff82111561476f57600080fd5b602082029050919050565b600067ffffffffffffffff82111561479157600080fd5b602082029050919050565b600067ffffffffffffffff8211156147b357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156147df57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006148be82614907565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061493c82614943565b9050919050565b600061494e82614955565b9050919050565b600061496082614907565b9050919050565b82818337600083830152505050565b60005b83811015614994578082015181840152602081019050614979565b838111156149a3576000848401525b50505050565b6000601f19601f8301169050919050565b6149c3816148b3565b81146149ce57600080fd5b50565b6149da816148c5565b81146149e557600080fd5b50565b6149f1816148d1565b81146149fc57600080fd5b50565b614a08816148db565b8114614a1357600080fd5b50565b614a1f81614927565b8114614a2a57600080fd5b5056fea365627a7a72315820fbe650e544cbddeaa456c7319e7300aa47b2c0d541f6dab56b4a325d5476545a6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "415:2031:6:-;;;487:84;8:9:-1;5:2;;;30:1;27;20:12;5:2;487:84:6;20376:284:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:10;666:6;;:19;;;;;;;;;;;;;;;;;;700:37;726:1;730:6;;;;;;;;;;;700:37;;;;;;;;;;;;;;;;2332:5;2322:7;;:15;;;;;;;;;;;;;;;;;;3263:40;2860:10;3282:20;;3263:18;;;:40;;:::i;:::-;5416;5286:10;5435:20;;5416:18;;;:40;;:::i;:::-;13076:51;12682:10;13095:31;;13076:18;;;:51;;:::i;:::-;20524:5;20517:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20548:7;20539:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20580:13;20565:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20604:49;20187:10;20623:29;;20604:18;;;:49;;:::i;:::-;20376:284;;;518:9:6;533:30;;;;;;;;542:1;533:30;;;;553:1;533:30;;;;;;557:5;533:30;;;;;518:46;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;518:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:2031;;3613:158:4;3703:10;3688:25;;:11;:25;;;;;3680:34;;;;;;3760:4;3724:20;:33;3745:11;3724:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3613:158;:::o;5:142:-1:-;96:45;135:5;96:45;;;91:3;84:58;78:69;;;154:113;237:24;255:5;237:24;;;232:3;225:37;219:48;;;274:340;;428:2;417:9;413:18;405:26;;442:79;518:1;507:9;503:17;494:6;442:79;;;532:72;600:2;589:9;585:18;576:6;532:72;;;399:215;;;;;;621:91;;683:24;701:5;683:24;;;672:35;;666:46;;;;719:121;;792:42;785:5;781:54;770:65;;764:76;;;;847:129;;934:37;965:5;934:37;;;921:50;;915:61;;;;983:121;;1062:37;1093:5;1062:37;;;1049:50;;1043:61;;;;1111:108;;1190:24;1208:5;1190:24;;;1177:37;;1171:48;;;;415:2031:6;;;;;;;",
  "deployedSourceMap": "415:2031:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;415:2031:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3401:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;20748:83;;;:::i;:::-;;;;;;;;;;;;;;;;6675:226;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5995:674;;;;;;;;;;;;;;;;:::i;:::-;;13841:94;;;:::i;:::-;;;;;;;;;;;;;;;;7878:180;;;;;;;;;;;;;;;;:::i;:::-;;2006:200;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;13507:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;1245:611:6;;;;;;;;;;;;;;;;:::i;:::-;;2071:372;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8064:132:4;;;;;;;;;;;;;;;;:::i;:::-;;14272:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;23507:732:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5760:162:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5469:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;20837:87;;;:::i;:::-;;;;;;;;;;;;;;;;7193:213;;;;;;;;;;;;;;;;:::i;:::-;;1623:92;;;:::i;:::-;;;;;;;;;;;;;;;;438:21;;;:::i;:::-;;;;;;;;;;;;;;;;8202:211;;;;;;;;;;;;;;;;:::i;:::-;;21035:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;20930:99;;;:::i;:::-;;;;;;;;;;;;;;;;7727:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1185:431;;;;;;;;;;;;;;;;:::i;:::-;;3401:133;3471:4;3494:20;:33;3515:11;3494:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3487:40;;3401:133;;;:::o;20748:83::-;20787:13;20819:5;20812:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20748:83;:::o;6675:226::-;6734:7;6812:16;6820:7;6812;:16::i;:::-;6804:49;;;;;;;;;;;;;;;;;;;;;;6870:15;:24;6886:7;6870:24;;;;;;;;;;;;;;;;;;;;;6863:31;;6675:226;;;:::o;5995:674::-;6153:22;6178:16;6186:7;6178;:16::i;:::-;6153:41;;6231:2;6213:20;;:14;:20;;;;6205:79;;;;;;;;;;;;;;;;;;;;;;6421:6;;;;;;;;;;;6407:20;;:10;:20;;;:68;;;;6431:44;6448:14;6464:10;6431:16;:44::i;:::-;6407:68;6399:77;;;;;;6566:2;6539:15;:24;6555:7;6539:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6653:7;6649:2;6629:32;;6638:10;6629:32;;;;;;;;;;;;5995:674;;;:::o;13841:94::-;13885:7;13911:10;:17;;;;13904:24;;13841:94;:::o;7878:180::-;7968:39;7987:10;7999:7;7968:18;:39::i;:::-;7960:48;;;;;;8019:32;8033:4;8039:2;8043:7;8019:13;:32::i;:::-;7878:180;;;:::o;2006:200::-;2065:4;627:6:6;;;;;;;;;;;613:20;;:10;:20;;;605:57;;;;;;;;;;;;;;;;;;;;;;2097:5:4;2086:16;;:7;;;;;;;;;;;:16;;;2078:57;;;;;;;;;;;;;;;;;;;;;;2152:8;2142:7;;:18;;;;;;;;;;;;;;;;;;2178:4;2167:15;;2195:8;2188:15;;2006:200;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;13507:182:4:-;13587:7;13622:16;13632:5;13622:9;:16::i;:::-;13614:5;:24;13606:33;;;;;;13656:12;:19;13669:5;13656:19;;;;;;;;;;;;;;;13676:5;13656:26;;;;;;;;;;;;;;;;13649:33;;13507:182;;;;:::o;14929:166:5:-;;;;:::o;1245:611:6:-;1396:11;1437:1;1440;1443;1446:5;1420:32;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1420:32:6;;;1410:43;;;;;;1396:57;;1495:5;1471:29;;:15;:20;1487:3;1471:20;;;;;;;;;;;;;;;;;;;;;:29;;;1463:77;;;;;;;;;;;;;;;;;;;;;;1551:15;1569:24;1578:1;1581;1584;1587:5;1569:8;:24::i;:::-;1551:42;;1612:10;1604:49;;;;;;;;;;;;;;;;;;;;;;1663:24;;:::i;:::-;1690:33;;;;;;;;1699:6;1690:33;;;;1707:8;1690:33;;;;;;1717:5;1690:33;;;;;1663:60;;1733:9;1748:8;1733:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1733:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1790:4;1767:15;:20;1783:3;1767:20;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1818:31;1832:6;1840:8;1818:31;;;;;;;;;;;;;;;;1245:611;;;;;;;;;:::o;2071:372::-;2147:4;627:6;;;;;;;;;;;613:20;;:10;:20;;;605:57;;;;;;;;;;;;;;;;;;;;;;2202:8;2171:39;;:9;2181:7;2171:18;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:39;;;2163:83;;;;;;;;;;;;;;;;;;;;;;2294:5;2264:35;;:9;2274:7;2264:18;;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:35;;;2256:77;;;;;;;;;;;;;;;;;;;;;;2372:4;2343:9;2353:7;2343:18;;;;;;;;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;2386:29;2397:8;2407:7;2386:10;:29::i;:::-;;2432:4;2425:11;;2071:372;;;;:::o;8064:132:4:-;8150:39;8167:4;8173:2;8177:7;8150:39;;;;;;;;;;;;:16;:39::i;:::-;8064:132;;;:::o;14272:148::-;14330:7;14365:13;:11;:13::i;:::-;14357:5;:21;14349:30;;;;;;14396:10;14407:5;14396:17;;;;;;;;;;;;;;;;14389:24;;14272:148;;;:::o;23507:732:7:-;23678:6;23696:18;;:::i;:::-;23734:27;;;;;;;;23750:1;23752;23750:4;;;;;;;;;;;23734:27;;;;23756:1;23758;23756:4;;;;;;;;;;;23734:27;;;23724:5;:7;;:37;;;;23781:55;;;;;;;;;;;;;;;;23798:1;23800;23798:4;;;;;;;;;;;23803:1;23798:7;;;;;;;;;;;23781:55;;;;23807:1;23809;23807:4;;;;;;;;;;;23812:1;23807:7;;;;;;;;;;;23781:55;;;;;;;;;;;;;;;23818:1;23820;23818:4;;;;;;;;;;;23823:1;23818:7;;;;;;;;;;;23781:55;;;;23827:1;23829;23827:4;;;;;;;;;;;23832:1;23827:7;;;;;;;;;;;23781:55;;;;;;23771:5;:7;;:65;;;;23856:27;;;;;;;;23872:1;23874;23872:4;;;;;;;;;;;23856:27;;;;23878:1;23880;23878:4;;;;;;;;;;;23856:27;;;23846:5;:7;;:37;;;;23893:25;23932:12;23921:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;23921:24:7;;;;23893:52;;23959:6;23968:1;23959:10;;23955:88;23975:12;23971:1;:16;23955:88;;;24024:5;24030:1;24024:8;;;;;;;;;;;24007:11;24019:1;24007:14;;;;;;;;;;;;;:25;;;;;23989:3;;;;;;;23955:88;;;;24086:1;24056:26;24063:11;24076:5;24056:6;:26::i;:::-;:31;24052:181;;;24108:46;;;;;;;;;;;;;;;24175:4;24168:11;;;;;;24052:181;24217:5;24210:12;;;;23507:732;;;;;;;:::o;5760:162:4:-;5815:7;5895:11;:20;5907:7;5895:20;;;;;;;;;;;;;;;;;;;;;5888:27;;5760:162;;;:::o;5469:285::-;5524:7;5713:34;:17;:24;5731:5;5713:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5706:41;;5469:285;;;:::o;20837:87::-;20878:13;20910:7;20903:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20837:87;:::o;7193:213::-;7278:10;7272:16;;:2;:16;;;;7264:25;;;;;;7336:8;7299:18;:30;7318:10;7299:30;;;;;;;;;;;;;;;:34;7330:2;7299:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7386:2;7359:40;;7374:10;7359:40;;;7390:8;7359:40;;;;;;;;;;;;;;;7193:213;;:::o;1623:92::-;1676:7;1702:6;;;;;;;;;;;1695:13;;1623:92;:::o;438:21::-;;;;;;;;;;;;;:::o;8202:211::-;8308:31;8321:4;8327:2;8331:7;8308:12;:31::i;:::-;8357:48;8380:4;8386:2;8390:7;8399:5;8357:22;:48::i;:::-;8349:57;;;;;;8202:211;;;;:::o;21035:151::-;21093:13;21126:16;21134:7;21126;:16::i;:::-;21118:25;;;;;;21160:10;:19;21171:7;21160:19;;;;;;;;;;;21153:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21035:151;;;:::o;20930:99::-;20978:13;21009;21002:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20930:99;:::o;7727:145::-;7807:4;7830:18;:25;7849:5;7830:25;;;;;;;;;;;;;;;:35;7856:8;7830:35;;;;;;;;;;;;;;;;;;;;;;;;;7823:42;;7727:145;;;;:::o;1185:431::-;627:6:6;;;;;;;;;;;613:20;;:10;:20;;;605:57;;;;;;;;;;;;;;;;;;;;;;1415:6:4;;;;;;;;;;;1403:18;;:8;:18;;;1395:61;;;;;;;;;;;;;;;;;;;;;;1494:1;1474:22;;:8;:22;;;;1466:65;;;;;;;;;;;;;;;;;;;;;;1551:8;1542:6;;:17;;;;;;;;;;;;;;;;;;1574:35;1592:6;;;;;;;;;;;1600:8;1574:35;;;;;;;;;;;;;;;;1185:431;:::o;8607:152::-;8664:4;8680:13;8696:11;:20;8708:7;8696:20;;;;;;;;;;;;;;;;;;;;;8680:36;;8750:1;8733:19;;:5;:19;;;;8726:26;;;8607:152;;;:::o;9119:246::-;9204:4;9220:13;9236:16;9244:7;9236;:16::i;:::-;9220:32;;9281:5;9270:16;;:7;:16;;;:51;;;;9314:7;9290:31;;:20;9302:7;9290:11;:20::i;:::-;:31;;;9270:51;:87;;;;9325:32;9342:5;9349:7;9325:16;:32::i;:::-;9270:87;9262:96;;;9119:246;;;;:::o;14795:239::-;14880:38;14900:4;14906:2;14910:7;14880:19;:38::i;:::-;14929:47;14962:4;14968:7;14929:32;:47::i;:::-;14987:40;15015:2;15019:7;14987:27;:40::i;:::-;14795:239;;;:::o;22758:318::-;22827:4;627:6:6;;;;;;;;;;;613:20;;:10;:20;;;605:57;;;;;;;;;;;;;;;;;;;;;;22921:24:4;22933:2;22937:7;22921:11;:24::i;:::-;22956:20;22968:7;22956:11;:20::i;:::-;23065:4;23058:11;;22758:318;;;;:::o;22746:726:7:-;22821:4;22837:22;;:::i;:::-;22862:14;:12;:14::i;:::-;22837:39;;22914:2;:11;;;:18;22909:1;22894:5;:12;:16;:38;22886:47;;;;;;22990:27;;:::i;:::-;23020:21;;;;;;;;23036:1;23020:21;;;;23039:1;23020:21;;;22990:51;;23056:6;23065:1;23056:10;;23051:131;23072:5;:12;23068:1;:16;23051:131;;;23110:72;23127:4;23133:48;23152:2;:11;;;23168:1;23164;:5;23152:18;;;;;;;;;;;;;;23172:5;23178:1;23172:8;;;;;;;;;;;;;;23133:18;:48::i;:::-;23110:16;:72::i;:::-;23103:79;;23086:3;;;;;;;23051:131;;;;23199:38;23216:4;23222:2;:11;;;23234:1;23222:14;;;;;;;;;;;;;;23199:16;:38::i;:::-;23192:45;;23251:186;23286:5;:7;;;23295:5;:7;;;23317:20;23332:4;23317:14;:20::i;:::-;23339:2;:8;;;23362:23;23377:5;:7;;;23362:14;:23::i;:::-;23387:2;:8;;;23410:20;23425:2;:4;;;23410:14;:20::i;:::-;23432:2;:4;;;23251:20;:186::i;:::-;23247:200;;23446:1;23439:8;;;;;;23247:200;23464:1;23457:8;;;;22746:726;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11527:347:4:-;11648:4;11673:15;:2;:13;;;:15::i;:::-;11668:58;;11711:4;11704:11;;;;11668:58;11736:13;11768:2;11752:36;;;11789:10;11801:4;11807:7;11816:5;11752:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11752:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11752:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11752:70:4;;;;;;;;;11736:86;;4419:10;11850:16;;11840:26;;;:6;:26;;;;11832:35;;;11527:347;;;;;;;:::o;10258:741::-;10430:16;10438:7;10430;:16::i;:::-;10422:24;;:4;:24;;;10414:82;;;;;;;;;;;;;;;;;;;;;;10597:1;10583:16;;:2;:16;;;;10575:61;;;;;;;;;;;;;;;;;;;;;;10687:23;10702:7;10687:14;:23::i;:::-;10798:35;:17;:23;10816:4;10798:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10843:33;:17;:21;10861:2;10843:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10909:2;10886:11;:20;10898:7;10886:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10983:7;10979:2;10964:27;;10973:4;10964:27;;;;;;;;;;;;10258:741;;;:::o;17261:1128::-;17523:22;17548:32;17578:1;17548:12;:18;17561:4;17548:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17523:57;;17590:18;17611:17;:26;17629:7;17611:26;;;;;;;;;;;;17590:47;;17755:14;17741:10;:28;17737:323;;17785:19;17807:12;:18;17820:4;17807:18;;;;;;;;;;;;;;;17826:14;17807:34;;;;;;;;;;;;;;;;17785:56;;17889:11;17856:12;:18;17869:4;17856:18;;;;;;;;;;;;;;;17875:10;17856:30;;;;;;;;;;;;;;;:44;;;;18005:10;17972:17;:30;17990:11;17972:30;;;;;;;;;;;:43;;;;17737:323;;18146:12;:18;18159:4;18146:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17261:1128;;;;:::o;16107:183::-;16220:12;:16;16233:2;16220:16;;;;;;;;;;;;;;;:23;;;;16191:17;:26;16209:7;16191:26;;;;;;;;;;;:52;;;;16253:12;:16;16266:2;16253:16;;;;;;;;;;;;;;;16275:7;16253:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16253:30:4;;;;;;;;;;;;;;;;;;;;;;16107:183;;:::o;15289:196::-;15352:24;15364:2;15368:7;15352:11;:24::i;:::-;15387:40;15415:2;15419:7;15387:27;:40::i;:::-;15438;15470:7;15438:31;:40::i;:::-;15289:196;;:::o;21665:249::-;21784:16;21792:7;21784;:16::i;:::-;21776:56;;;;;;;;;;;;;;;;;;;;;;21864:43;21874:13;21864:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21889:17;21898:7;21889:8;:17::i;:::-;21864:9;:43::i;:::-;21842:10;:19;21853:7;21842:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21665:249;:::o;20801:1940:7:-;20848:22;;:::i;:::-;20889:169;;;;;;;;20913:66;20889:169;;;;20990:66;20889:169;;;20882:2;:4;;:176;;;;21075:327;;;;;;;;;;;;;;;;21100:66;21075:327;;;;21177:66;21075:327;;;;;;;;;;;;;;;21256:66;21075:327;;;;21333:66;21075:327;;;;;;21068:2;:4;;:334;;;;21423:327;;;;;;;;;;;;;;;;21448:66;21423:327;;;;21525:66;21423:327;;;;;;;;;;;;;;;21604:66;21423:327;;;;21681:66;21423:327;;;;;;21412:2;:8;;:338;;;;21771:327;;;;;;;;;;;;;;;;21796:66;21771:327;;;;21873:66;21771:327;;;;;;;;;;;;;;;21952:66;21771:327;;;;22029:66;21771:327;;;;;;21760:2;:8;;:338;;;;22144:1;22122:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22108:2;:11;;:38;;;;22173:169;;;;;;;;22197:66;22173:169;;;;22274:66;22173:169;;;22156:2;:11;;;22168:1;22156:14;;;;;;;;;;;;;:186;;;;22369:169;;;;;;;;22393:66;22369:169;;;;22470:66;22369:169;;;22352:2;:11;;;22364:1;22352:14;;;;;;;;;;;;;:186;;;;22565:169;;;;;;;;22589:66;22565:169;;;;22666:66;22565:169;;;22548:2;:11;;;22560:1;22548:14;;;;;;;;;;;;;:186;;;;20801:1940;:::o;17339:444::-;17403:16;;:::i;:::-;17431:20;;:::i;:::-;17472:1;:3;;;17461:5;17467:1;17461:8;;;;;;;;;;:14;;;;;17496:1;:3;;;17485:5;17491:1;17485:8;;;;;;;;;;:14;;;;;17520:1;17509:5;17515:1;17509:8;;;;;;;;;;:12;;;;;17531;17630:4;17627:1;17621:4;17614:5;17611:1;17608;17601:4;17596:3;17592:14;17587:48;17576:59;;17712:7;17725:1;17720:20;;;;17705:35;;17720:20;17729:9;17705:35;;17768:7;17759:17;;;;;;17339:444;;;;;;:::o;16422:483::-;16496:16;;:::i;:::-;16524:20;;:::i;:::-;16565:2;:4;;;16554:5;16560:1;16554:8;;;;;;;;;;:15;;;;;16590:2;:4;;;16579:5;16585:1;16579:8;;;;;;;;;;:15;;;;;16615:2;:4;;;16604:5;16610:1;16604:8;;;;;;;;;;:15;;;;;16640:2;:4;;;16629:5;16635:1;16629:8;;;;;;;;;;:15;;;;;16654:12;16753:4;16750:1;16744:4;16737:5;16734:1;16731;16724:4;16719:3;16715:14;16710:48;16699:59;;16835:7;16848:1;16843:20;;;;16828:35;;16843:20;16852:9;16828:35;;16890:7;16882:16;;;;;;16422:483;;;;;;:::o;16033:340::-;16090:14;;:::i;:::-;16168:6;16177:77;16168:86;;16275:1;16268;:3;;;:8;:20;;;;;16287:1;16280;:3;;;:8;16268:20;16264:58;;;16309:13;;;;;;;;16317:1;16309:13;;;;16320:1;16309:13;;;16302:20;;;;;16264:58;16339:27;;;;;;;;16347:1;:3;;;16339:27;;;;16363:1;16357;:3;;;:7;;;;;;16352:1;:13;16339:27;;;16332:34;;;16033:340;;;;:::o;19905:547::-;20151:4;20167:19;20203:1;20189:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20167:38;;20215:19;20251:1;20237:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20215:38;;20271:2;20263;20266:1;20263:5;;;;;;;;;;;;;:10;;;;20291:2;20283;20286:1;20283:5;;;;;;;;;;;;;:10;;;;20311:2;20303;20306:1;20303:5;;;;;;;;;;;;;:10;;;;20331:2;20323;20326:1;20323:5;;;;;;;;;;;;;:10;;;;20351:2;20343;20346:1;20343:5;;;;;;;;;;;;;:10;;;;20371:2;20363;20366:1;20363:5;;;;;;;;;;;;;:10;;;;20391:2;20383;20386:1;20383:5;;;;;;;;;;;;;:10;;;;20411:2;20403;20406:1;20403:5;;;;;;;;;;;;;:10;;;;20430:15;20438:2;20442;20430:7;:15::i;:::-;20423:22;;;;19905:547;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11955:171:4:-;12054:1;12018:38;;:15;:24;12034:7;12018:24;;;;;;;;;;;;;;;;;;;;;:38;;;12014:106;;12107:1;12072:15;:24;12088:7;12072:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12014:106;11955:171;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;9522:537:4:-;9678:16;9686:7;9678;:16::i;:::-;9677:17;9669:51;;;;;;;;;;;;;;;;;;;;;;9752:1;9738:16;;:2;:16;;;;9730:53;;;;;;;;;;;;;;;;;;;;;;9897:2;9874:11;:20;9886:7;9874:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9933:33;:17;:21;9951:2;9933:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10044:7;10040:2;10019:33;;10036:1;10019:33;;;;;;;;;;;;9522:537;;:::o;16485:161::-;16588:10;:17;;;;16561:15;:24;16577:7;16561:24;;;;;;;;;;;:44;;;;16615:10;16631:7;16615:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16615:24:4;;;;;;;;;;;;;;;;;;;;;;16485:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;17994:913:7:-;18071:4;18108:2;:9;18095:2;:9;:22;18087:31;;;;;;18128:13;18144:2;:9;18128:25;;18163:14;18191:1;18180:8;:12;18163:29;;18202:19;18235:9;18224:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18224:21:7;;;;18202:43;;18260:6;18269:1;18260:10;;18255:307;18276:8;18272:1;:12;18255:307;;;18332:2;18335:1;18332:5;;;;;;;;;;;;;;:7;;;18313:5;18327:1;18323;18319;:5;:9;18313:16;;;;;;;;;;;;;:26;;;;;18372:2;18375:1;18372:5;;;;;;;;;;;;;;:7;;;18353:5;18367:1;18363;18359;:5;:9;18353:16;;;;;;;;;;;;;:26;;;;;18412:2;18415:1;18412:5;;;;;;;;;;;;;;:7;;;18420:1;18412:10;;;;;;;;;;;18393:5;18407:1;18403;18399;:5;:9;18393:16;;;;;;;;;;;;;:29;;;;;18455:2;18458:1;18455:5;;;;;;;;;;;;;;:7;;;18463:1;18455:10;;;;;;;;;;;18436:5;18450:1;18446;18442;:5;:9;18436:16;;;;;;;;;;;;;:29;;;;;18498:2;18501:1;18498:5;;;;;;;;;;;;;;:7;;;18506:1;18498:10;;;;;;;;;;;18479:5;18493:1;18489;18485;:5;:9;18479:16;;;;;;;;;;;;;:29;;;;;18541:2;18544:1;18541:5;;;;;;;;;;;;;;:7;;;18549:1;18541:10;;;;;;;;;;;18522:5;18536:1;18532;18528;:5;:9;18522:16;;;;;;;;;;;;;:29;;;;;18286:3;;;;;;;18255:307;;;;18571:18;;:::i;:::-;18599:12;18727:4;18722:3;18715:4;18704:9;18700:20;18693:4;18686:5;18682:16;18679:1;18676;18669:4;18664:3;18660:14;18655:77;18644:88;;18809:7;18822:1;18817:20;;;;18802:35;;18817:20;18826:9;18802:35;;18864:7;18856:16;;;;;;18899:1;18889:3;18893:1;18889:6;;;;;;;;;;;:11;;18882:18;;;;;;;17994:913;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;415:2031:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;415:2031:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;415:2031:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;415:2031:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;415:2031:6;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;164:673;;298:3;291:4;283:6;279:17;275:27;265:2;;316:1;313;306:12;265:2;340:4;359:97;374:81;448:6;374:81;;;359:97;;;350:106;;473:5;532:6;579:3;571:4;563:6;559:17;554:3;550:27;547:36;544:2;;;596:1;593;586:12;544:2;621:1;606:225;631:6;628:1;625:13;606:225;;;689:3;711:56;763:3;751:10;711:56;;;706:3;699:69;791:4;786:3;782:14;775:21;;819:4;814:3;810:14;803:21;;663:168;653:1;650;646:9;641:14;;606:225;;;610:14;258:579;;;;;;;;864:608;;975:3;968:4;960:6;956:17;952:27;942:2;;993:1;990;983:12;942:2;1017:4;1036:74;1051:58;1102:6;1051:58;;;1036:74;;;1027:83;;1127:5;1186:6;1233:3;1225:4;1217:6;1213:17;1208:3;1204:27;1201:36;1198:2;;;1250:1;1247;1240:12;1198:2;1275:1;1260:206;1285:6;1282:1;1279:13;1260:206;;;1343:3;1365:37;1398:3;1386:10;1365:37;;;1360:3;1353:50;1426:4;1421:3;1417:14;1410:21;;1454:4;1449:3;1445:14;1438:21;;1317:149;1307:1;1304;1300:9;1295:14;;1260:206;;;1264:14;935:537;;;;;;;;1499:616;;1614:3;1607:4;1599:6;1595:17;1591:27;1581:2;;1632:1;1629;1622:12;1581:2;1656:4;1675:78;1690:62;1745:6;1690:62;;;1675:78;;;1666:87;;1770:5;1829:6;1876:3;1868:4;1860:6;1856:17;1851:3;1847:27;1844:36;1841:2;;;1893:1;1890;1883:12;1841:2;1918:1;1903:206;1928:6;1925:1;1922:13;1903:206;;;1986:3;2008:37;2041:3;2029:10;2008:37;;;2003:3;1996:50;2069:4;2064:3;2060:14;2053:21;;2097:4;2092:3;2088:14;2081:21;;1960:149;1950:1;1947;1943:9;1938:14;;1903:206;;;1907:14;1574:541;;;;;;;;2123:124;;2200:6;2187:20;2178:29;;2212:30;2236:5;2212:30;;;2172:75;;;;;2254:130;;2334:6;2321:20;2312:29;;2346:33;2373:5;2346:33;;;2306:78;;;;;2391:128;;2470:6;2457:20;2448:29;;2482:32;2508:5;2482:32;;;2442:77;;;;;2526:132;;2609:6;2603:13;2594:22;;2621:32;2647:5;2621:32;;;2588:70;;;;;2666:440;;2767:3;2760:4;2752:6;2748:17;2744:27;2734:2;;2785:1;2782;2775:12;2734:2;2822:6;2809:20;2844:64;2859:48;2900:6;2859:48;;;2844:64;;;2835:73;;2928:6;2921:5;2914:21;2964:4;2956:6;2952:17;2997:4;2990:5;2986:16;3032:3;3023:6;3018:3;3014:16;3011:25;3008:2;;;3049:1;3046;3039:12;3008:2;3059:41;3093:6;3088:3;3083;3059:41;;;2727:379;;;;;;;;3115:442;;3217:3;3210:4;3202:6;3198:17;3194:27;3184:2;;3235:1;3232;3225:12;3184:2;3272:6;3259:20;3294:65;3309:49;3351:6;3309:49;;;3294:65;;;3285:74;;3379:6;3372:5;3365:21;3415:4;3407:6;3403:17;3448:4;3441:5;3437:16;3483:3;3474:6;3469:3;3465:16;3462:25;3459:2;;;3500:1;3497;3490:12;3459:2;3510:41;3544:6;3539:3;3534;3510:41;;;3177:380;;;;;;;;3565:130;;3645:6;3632:20;3623:29;;3657:33;3684:5;3657:33;;;3617:78;;;;;3702:241;;3806:2;3794:9;3785:7;3781:23;3777:32;3774:2;;;3822:1;3819;3812:12;3774:2;3857:1;3874:53;3919:7;3910:6;3899:9;3895:22;3874:53;;;3864:63;;3836:97;3768:175;;;;;3950:366;;;4071:2;4059:9;4050:7;4046:23;4042:32;4039:2;;;4087:1;4084;4077:12;4039:2;4122:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;;;4129:63;;4101:97;4229:2;4247:53;4292:7;4283:6;4272:9;4268:22;4247:53;;;4237:63;;4208:98;4033:283;;;;;;4323:491;;;;4461:2;4449:9;4440:7;4436:23;4432:32;4429:2;;;4477:1;4474;4467:12;4429:2;4512:1;4529:53;4574:7;4565:6;4554:9;4550:22;4529:53;;;4519:63;;4491:97;4619:2;4637:53;4682:7;4673:6;4662:9;4658:22;4637:53;;;4627:63;;4598:98;4727:2;4745:53;4790:7;4781:6;4770:9;4766:22;4745:53;;;4735:63;;4706:98;4423:391;;;;;;4821:721;;;;;4985:3;4973:9;4964:7;4960:23;4956:33;4953:2;;;5002:1;4999;4992:12;4953:2;5037:1;5054:53;5099:7;5090:6;5079:9;5075:22;5054:53;;;5044:63;;5016:97;5144:2;5162:53;5207:7;5198:6;5187:9;5183:22;5162:53;;;5152:63;;5123:98;5252:2;5270:53;5315:7;5306:6;5295:9;5291:22;5270:53;;;5260:63;;5231:98;5388:2;5377:9;5373:18;5360:32;5412:18;5404:6;5401:30;5398:2;;;5444:1;5441;5434:12;5398:2;5464:62;5518:7;5509:6;5498:9;5494:22;5464:62;;;5454:72;;5339:193;4947:595;;;;;;;;5549:360;;;5667:2;5655:9;5646:7;5642:23;5638:32;5635:2;;;5683:1;5680;5673:12;5635:2;5718:1;5735:53;5780:7;5771:6;5760:9;5756:22;5735:53;;;5725:63;;5697:97;5825:2;5843:50;5885:7;5876:6;5865:9;5861:22;5843:50;;;5833:60;;5804:95;5629:280;;;;;;5916:366;;;6037:2;6025:9;6016:7;6012:23;6008:32;6005:2;;;6053:1;6050;6043:12;6005:2;6088:1;6105:53;6150:7;6141:6;6130:9;6126:22;6105:53;;;6095:63;;6067:97;6195:2;6213:53;6258:7;6249:6;6238:9;6234:22;6213:53;;;6203:63;;6174:98;5999:283;;;;;;6289:1092;;;;;;;6589:3;6577:9;6568:7;6564:23;6560:33;6557:2;;;6606:1;6603;6596:12;6557:2;6641:1;6658:53;6703:7;6694:6;6683:9;6679:22;6658:53;;;6648:63;;6620:97;6748:2;6766:53;6811:7;6802:6;6791:9;6787:22;6766:53;;;6756:63;;6727:98;6856:2;6874:76;6942:7;6933:6;6922:9;6918:22;6874:76;;;6864:86;;6835:121;6987:3;7006:95;7093:7;7084:6;7073:9;7069:22;7006:95;;;6996:105;;6966:141;7138:3;7157:76;7225:7;7216:6;7205:9;7201:22;7157:76;;;7147:86;;7117:122;7270:3;7289:76;7357:7;7348:6;7337:9;7333:22;7289:76;;;7279:86;;7249:122;6551:830;;;;;;;;;7388:841;;;;;7654:3;7642:9;7633:7;7629:23;7625:33;7622:2;;;7671:1;7668;7661:12;7622:2;7706:1;7723:76;7791:7;7782:6;7771:9;7767:22;7723:76;;;7713:86;;7685:120;7836:2;7854:95;7941:7;7932:6;7921:9;7917:22;7854:95;;;7844:105;;7815:140;7986:3;8005:76;8073:7;8064:6;8053:9;8049:22;8005:76;;;7995:86;;7965:122;8118:3;8137:76;8205:7;8196:6;8185:9;8181:22;8137:76;;;8127:86;;8097:122;7616:613;;;;;;;;8236:235;;8337:2;8325:9;8316:7;8312:23;8308:32;8305:2;;;8353:1;8350;8343:12;8305:2;8388:1;8405:50;8447:7;8438:6;8427:9;8423:22;8405:50;;;8395:60;;8367:94;8299:172;;;;;8478:472;;;8609:2;8597:9;8588:7;8584:23;8580:32;8577:2;;;8625:1;8622;8615:12;8577:2;8660:1;8677:53;8722:7;8713:6;8702:9;8698:22;8677:53;;;8667:63;;8639:97;8795:2;8784:9;8780:18;8767:32;8819:18;8811:6;8808:30;8805:2;;;8851:1;8848;8841:12;8805:2;8871:63;8926:7;8917:6;8906:9;8902:22;8871:63;;;8861:73;;8746:194;8571:379;;;;;;8957:701;;;;9114:2;9102:9;9093:7;9089:23;9085:32;9082:2;;;9130:1;9127;9120:12;9082:2;9165:1;9182:53;9227:7;9218:6;9207:9;9203:22;9182:53;;;9172:63;;9144:97;9300:2;9289:9;9285:18;9272:32;9324:18;9316:6;9313:30;9310:2;;;9356:1;9353;9346:12;9310:2;9376:63;9431:7;9422:6;9411:9;9407:22;9376:63;;;9366:73;;9251:194;9504:2;9493:9;9489:18;9476:32;9528:18;9520:6;9517:30;9514:2;;;9560:1;9557;9550:12;9514:2;9580:62;9634:7;9625:6;9614:9;9610:22;9580:62;;;9570:72;;9455:193;9076:582;;;;;;9665:239;;9768:2;9756:9;9747:7;9743:23;9739:32;9736:2;;;9784:1;9781;9774:12;9736:2;9819:1;9836:52;9880:7;9871:6;9860:9;9856:22;9836:52;;;9826:62;;9798:96;9730:174;;;;;9911:261;;10025:2;10013:9;10004:7;10000:23;9996:32;9993:2;;;10041:1;10038;10031:12;9993:2;10076:1;10093:63;10148:7;10139:6;10128:9;10124:22;10093:63;;;10083:73;;10055:107;9987:185;;;;;10179:241;;10283:2;10271:9;10262:7;10258:23;10254:32;10251:2;;;10299:1;10296;10289:12;10251:2;10334:1;10351:53;10396:7;10387:6;10376:9;10372:22;10351:53;;;10341:63;;10313:97;10245:175;;;;;10428:269;;10561:96;10653:3;10645:6;10561:96;;;10686:4;10681:3;10677:14;10663:28;;10554:143;;;;;10706:189;;10801:54;10851:3;10843:6;10801:54;;;10884:4;10879:3;10875:14;10861:28;;10794:101;;;;;10903:142;10994:45;11033:5;10994:45;;;10989:3;10982:58;10976:69;;;11052:113;11135:24;11153:5;11135:24;;;11130:3;11123:37;11117:48;;;11211:856;11400:71;11465:5;11400:71;;;11484:121;11598:6;11593:3;11484:121;;;11477:128;;11626:73;11693:5;11626:73;;;11719:7;11747:1;11732:323;11757:6;11754:1;11751:13;11732:323;;;11824:6;11818:13;11845:109;11950:3;11935:13;11845:109;;;11838:116;;11971:77;12041:6;11971:77;;;11961:87;;11789:266;11779:1;11776;11772:9;11767:14;;11732:323;;;11736:14;11379:688;;;;;;12108:704;12259:52;12305:5;12259:52;;;12324:102;12419:6;12414:3;12324:102;;;12317:109;;12447:54;12495:5;12447:54;;;12521:7;12549:1;12534:266;12559:6;12556:1;12553:13;12534:266;;;12626:6;12620:13;12647:71;12714:3;12699:13;12647:71;;;12640:78;;12735:58;12786:6;12735:58;;;12725:68;;12591:209;12581:1;12578;12574:9;12569:14;;12534:266;;;12538:14;12238:574;;;;;;12853:648;12980:48;13022:5;12980:48;;;13041:82;13116:6;13111:3;13041:82;;;13034:89;;13144:50;13188:5;13144:50;;;13214:7;13242:1;13227:262;13252:6;13249:1;13246:13;13227:262;;;13319:6;13313:13;13340:71;13407:3;13392:13;13340:71;;;13333:78;;13428:54;13475:6;13428:54;;;13418:64;;13284:205;13274:1;13271;13267:9;13262:14;;13227:262;;;13231:14;12959:542;;;;;;13509:104;13586:21;13601:5;13586:21;;;13581:3;13574:34;13568:45;;;13620:343;;13730:38;13762:5;13730:38;;;13780:70;13843:6;13838:3;13780:70;;;13773:77;;13855:52;13900:6;13895:3;13888:4;13881:5;13877:16;13855:52;;;13928:29;13950:6;13928:29;;;13923:3;13919:39;13912:46;;13710:253;;;;;;13970:347;;14082:39;14115:5;14082:39;;;14133:71;14197:6;14192:3;14133:71;;;14126:78;;14209:52;14254:6;14249:3;14242:4;14235:5;14231:16;14209:52;;;14282:29;14304:6;14282:29;;;14277:3;14273:39;14266:46;;14062:255;;;;;;14325:320;;14485:67;14549:2;14544:3;14485:67;;;14478:74;;14585:22;14581:1;14576:3;14572:11;14565:43;14636:2;14631:3;14627:12;14620:19;;14471:174;;;;14654:325;;14814:67;14878:2;14873:3;14814:67;;;14807:74;;14914:27;14910:1;14905:3;14901:11;14894:48;14970:2;14965:3;14961:12;14954:19;;14800:179;;;;14988:381;;15148:67;15212:2;15207:3;15148:67;;;15141:74;;15248:34;15244:1;15239:3;15235:11;15228:55;15317:14;15312:2;15307:3;15303:12;15296:36;15360:2;15355:3;15351:12;15344:19;;15134:235;;;;15378:320;;15538:67;15602:2;15597:3;15538:67;;;15531:74;;15638:22;15634:1;15629:3;15625:11;15618:43;15689:2;15684:3;15680:12;15673:19;;15524:174;;;;15707:324;;15867:67;15931:2;15926:3;15867:67;;;15860:74;;15967:26;15963:1;15958:3;15954:11;15947:47;16022:2;16017:3;16013:12;16006:19;;15853:178;;;;16040:327;;16200:67;16264:2;16259:3;16200:67;;;16193:74;;16300:29;16296:1;16291:3;16287:11;16280:50;16358:2;16353:3;16349:12;16342:19;;16186:181;;;;16376:330;;16536:67;16600:2;16595:3;16536:67;;;16529:74;;16636:32;16632:1;16627:3;16623:11;16616:53;16697:2;16692:3;16688:12;16681:19;;16522:184;;;;16715:329;;16875:67;16939:2;16934:3;16875:67;;;16868:74;;16975:31;16971:1;16966:3;16962:11;16955:52;17035:2;17030:3;17026:12;17019:19;;16861:183;;;;17053:371;;17213:67;17277:2;17272:3;17213:67;;;17206:74;;17313:34;17309:1;17304:3;17300:11;17293:55;17382:4;17377:2;17372:3;17368:12;17361:26;17415:2;17410:3;17406:12;17399:19;;17199:225;;;;17433:331;;17593:67;17657:2;17652:3;17593:67;;;17586:74;;17693:33;17689:1;17684:3;17680:11;17673:54;17755:2;17750:3;17746:12;17739:19;;17579:185;;;;17773:330;;17933:67;17997:2;17992:3;17933:67;;;17926:74;;18033:32;18029:1;18024:3;18020:11;18013:53;18094:2;18089:3;18085:12;18078:19;;17919:184;;;;18112:328;;18272:67;18336:2;18331:3;18272:67;;;18265:74;;18372:30;18368:1;18363:3;18359:11;18352:51;18431:2;18426:3;18422:12;18415:19;;18258:182;;;;18449:326;;18609:67;18673:2;18668:3;18609:67;;;18602:74;;18709:28;18705:1;18700:3;18696:11;18689:49;18766:2;18761:3;18757:12;18750:19;;18595:180;;;;18784:382;;18944:67;19008:2;19003:3;18944:67;;;18937:74;;19044:34;19040:1;19035:3;19031:11;19024:55;19113:15;19108:2;19103:3;19099:12;19092:37;19157:2;19152:3;19148:12;19141:19;;18930:236;;;;19175:372;;19335:67;19399:2;19394:3;19335:67;;;19328:74;;19435:34;19431:1;19426:3;19422:11;19415:55;19504:5;19499:2;19494:3;19490:12;19483:27;19538:2;19533:3;19529:12;19522:19;;19321:226;;;;19556:332;;19716:67;19780:2;19775:3;19716:67;;;19709:74;;19816:34;19812:1;19807:3;19803:11;19796:55;19879:2;19874:3;19870:12;19863:19;;19702:186;;;;19896:113;19979:24;19997:5;19979:24;;;19974:3;19967:37;19961:48;;;20016:111;20097:24;20115:5;20097:24;;;20092:3;20085:37;20079:48;;;20134:1106;;20559:121;20676:3;20667:6;20559:121;;;20702:2;20697:3;20693:12;20686:19;;20716:159;20871:3;20862:6;20716:159;;;20897:3;20892;20888:13;20881:20;;20912:121;21029:3;21020:6;20912:121;;;21055:2;21050:3;21046:12;21039:19;;21069:121;21186:3;21177:6;21069:121;;;21212:2;21207:3;21203:12;21196:19;;21232:3;21225:10;;20547:693;;;;;;;;21247:213;;21365:2;21354:9;21350:18;21342:26;;21379:71;21447:1;21436:9;21432:17;21423:6;21379:71;;;21336:124;;;;;21467:647;;21695:3;21684:9;21680:19;21672:27;;21710:79;21786:1;21775:9;21771:17;21762:6;21710:79;;;21800:72;21868:2;21857:9;21853:18;21844:6;21800:72;;;21883;21951:2;21940:9;21936:18;21927:6;21883:72;;;22003:9;21997:4;21993:20;21988:2;21977:9;21973:18;21966:48;22028:76;22099:4;22090:6;22028:76;;;22020:84;;21666:448;;;;;;;;22121:324;;22267:2;22256:9;22252:18;22244:26;;22281:71;22349:1;22338:9;22334:17;22325:6;22281:71;;;22363:72;22431:2;22420:9;22416:18;22407:6;22363:72;;;22238:207;;;;;;22452:201;;22564:2;22553:9;22549:18;22541:26;;22578:65;22640:1;22629:9;22625:17;22616:6;22578:65;;;22535:118;;;;;22660:301;;22798:2;22787:9;22783:18;22775:26;;22848:9;22842:4;22838:20;22834:1;22823:9;22819:17;22812:47;22873:78;22946:4;22937:6;22873:78;;;22865:86;;22769:192;;;;;22968:407;;23159:2;23148:9;23144:18;23136:26;;23209:9;23203:4;23199:20;23195:1;23184:9;23180:17;23173:47;23234:131;23360:4;23234:131;;;23226:139;;23130:245;;;;23382:407;;23573:2;23562:9;23558:18;23550:26;;23623:9;23617:4;23613:20;23609:1;23598:9;23594:17;23587:47;23648:131;23774:4;23648:131;;;23640:139;;23544:245;;;;23796:407;;23987:2;23976:9;23972:18;23964:26;;24037:9;24031:4;24027:20;24023:1;24012:9;24008:17;24001:47;24062:131;24188:4;24062:131;;;24054:139;;23958:245;;;;24210:407;;24401:2;24390:9;24386:18;24378:26;;24451:9;24445:4;24441:20;24437:1;24426:9;24422:17;24415:47;24476:131;24602:4;24476:131;;;24468:139;;24372:245;;;;24624:407;;24815:2;24804:9;24800:18;24792:26;;24865:9;24859:4;24855:20;24851:1;24840:9;24836:17;24829:47;24890:131;25016:4;24890:131;;;24882:139;;24786:245;;;;25038:407;;25229:2;25218:9;25214:18;25206:26;;25279:9;25273:4;25269:20;25265:1;25254:9;25250:17;25243:47;25304:131;25430:4;25304:131;;;25296:139;;25200:245;;;;25452:407;;25643:2;25632:9;25628:18;25620:26;;25693:9;25687:4;25683:20;25679:1;25668:9;25664:17;25657:47;25718:131;25844:4;25718:131;;;25710:139;;25614:245;;;;25866:407;;26057:2;26046:9;26042:18;26034:26;;26107:9;26101:4;26097:20;26093:1;26082:9;26078:17;26071:47;26132:131;26258:4;26132:131;;;26124:139;;26028:245;;;;26280:407;;26471:2;26460:9;26456:18;26448:26;;26521:9;26515:4;26511:20;26507:1;26496:9;26492:17;26485:47;26546:131;26672:4;26546:131;;;26538:139;;26442:245;;;;26694:407;;26885:2;26874:9;26870:18;26862:26;;26935:9;26929:4;26925:20;26921:1;26910:9;26906:17;26899:47;26960:131;27086:4;26960:131;;;26952:139;;26856:245;;;;27108:407;;27299:2;27288:9;27284:18;27276:26;;27349:9;27343:4;27339:20;27335:1;27324:9;27320:17;27313:47;27374:131;27500:4;27374:131;;;27366:139;;27270:245;;;;27522:407;;27713:2;27702:9;27698:18;27690:26;;27763:9;27757:4;27753:20;27749:1;27738:9;27734:17;27727:47;27788:131;27914:4;27788:131;;;27780:139;;27684:245;;;;27936:407;;28127:2;28116:9;28112:18;28104:26;;28177:9;28171:4;28167:20;28163:1;28152:9;28148:17;28141:47;28202:131;28328:4;28202:131;;;28194:139;;28098:245;;;;28350:407;;28541:2;28530:9;28526:18;28518:26;;28591:9;28585:4;28581:20;28577:1;28566:9;28562:17;28555:47;28616:131;28742:4;28616:131;;;28608:139;;28512:245;;;;28764:407;;28955:2;28944:9;28940:18;28932:26;;29005:9;28999:4;28995:20;28991:1;28980:9;28976:17;28969:47;29030:131;29156:4;29030:131;;;29022:139;;28926:245;;;;29178:407;;29369:2;29358:9;29354:18;29346:26;;29419:9;29413:4;29409:20;29405:1;29394:9;29390:17;29383:47;29444:131;29570:4;29444:131;;;29436:139;;29340:245;;;;29592:213;;29710:2;29699:9;29695:18;29687:26;;29724:71;29792:1;29781:9;29777:17;29768:6;29724:71;;;29681:124;;;;;29812:324;;29958:2;29947:9;29943:18;29935:26;;29972:71;30040:1;30029:9;30025:17;30016:6;29972:71;;;30054:72;30122:2;30111:9;30107:18;30098:6;30054:72;;;29929:207;;;;;;30143:256;;30205:2;30199:9;30189:19;;30243:4;30235:6;30231:17;30342:6;30330:10;30327:22;30306:18;30294:10;30291:34;30288:62;30285:2;;;30363:1;30360;30353:12;30285:2;30383:10;30379:2;30372:22;30183:216;;;;;30406:263;;30582:18;30574:6;30571:30;30568:2;;;30614:1;30611;30604:12;30568:2;30649:4;30641:6;30637:17;30629:25;;30505:164;;;;30676:240;;30829:18;30821:6;30818:30;30815:2;;;30861:1;30858;30851:12;30815:2;30896:4;30888:6;30884:17;30876:25;;30752:164;;;;30923:244;;31080:18;31072:6;31069:30;31066:2;;;31112:1;31109;31102:12;31066:2;31147:4;31139:6;31135:17;31127:25;;31003:164;;;;31174:321;;31317:18;31309:6;31306:30;31303:2;;;31349:1;31346;31339:12;31303:2;31416:4;31412:9;31405:4;31397:6;31393:17;31389:33;31381:41;;31480:4;31474;31470:15;31462:23;;31240:255;;;;31502:322;;31646:18;31638:6;31635:30;31632:2;;;31678:1;31675;31668:12;31632:2;31745:4;31741:9;31734:4;31726:6;31722:17;31718:33;31710:41;;31809:4;31803;31799:15;31791:23;;31569:255;;;;31831:116;;31934:3;31926:11;;31920:27;;;;31954:93;;32034:3;32026:11;;32020:27;;;;32054:97;;32138:3;32130:11;;32124:27;;;;32158:127;;32271:4;32261:14;;32249:36;;;;32292:104;;32382:4;32372:14;;32360:36;;;;32403:108;;32497:4;32487:14;;32475:36;;;;32518:121;;32611:5;32605:12;32595:22;;32576:63;;;;32646:122;;32740:5;32734:12;32724:22;;32705:63;;;;32775:125;;32890:4;32885:3;32881:14;32873:22;;32867:33;;;;32907:102;;32999:4;32994:3;32990:14;32982:22;;32976:33;;;;33016:106;;33112:4;33107:3;33103:14;33095:22;;33089:33;;;;33130:177;;33298:3;33283:18;;33276:31;;;;;33316:138;;33445:3;33430:18;;33423:31;;;;;33463:158;;33612:3;33597:18;;33590:31;;;;;33630:162;;33744:6;33739:3;33732:19;33781:4;33776:3;33772:14;33757:29;;33725:67;;;;;33801:163;;33916:6;33911:3;33904:19;33953:4;33948:3;33944:14;33929:29;;33897:67;;;;;33972:91;;34034:24;34052:5;34034:24;;;34023:35;;34017:46;;;;34070:85;;34143:5;34136:13;34129:21;34118:32;;34112:43;;;;34162:72;;34224:5;34213:16;;34207:27;;;;34241:144;;34313:66;34306:5;34302:78;34291:89;;34285:100;;;;34392:121;;34465:42;34458:5;34454:54;34443:65;;34437:76;;;;34520:72;;34582:5;34571:16;;34565:27;;;;34599:129;;34686:37;34717:5;34686:37;;;34673:50;;34667:61;;;;34735:121;;34814:37;34845:5;34814:37;;;34801:50;;34795:61;;;;34863:108;;34942:24;34960:5;34942:24;;;34929:37;;34923:48;;;;34979:145;35060:6;35055:3;35050;35037:30;35116:1;35107:6;35102:3;35098:16;35091:27;35030:94;;;;35133:268;35198:1;35205:101;35219:6;35216:1;35213:13;35205:101;;;35295:1;35290:3;35286:11;35280:18;35276:1;35271:3;35267:11;35260:39;35241:2;35238:1;35234:10;35229:15;;35205:101;;;35321:6;35318:1;35315:13;35312:2;;;35386:1;35377:6;35372:3;35368:16;35361:27;35312:2;35182:219;;;;;35409:97;;35497:2;35493:7;35488:2;35481:5;35477:14;35473:28;35463:38;;35457:49;;;;35514:117;35583:24;35601:5;35583:24;;;35576:5;35573:35;35563:2;;35622:1;35619;35612:12;35563:2;35557:74;;35638:111;35704:21;35719:5;35704:21;;;35697:5;35694:32;35684:2;;35740:1;35737;35730:12;35684:2;35678:71;;35756:117;35825:24;35843:5;35825:24;;;35818:5;35815:35;35805:2;;35864:1;35861;35854:12;35805:2;35799:74;;35880:115;35948:23;35965:5;35948:23;;;35941:5;35938:34;35928:2;;35986:1;35983;35976:12;35928:2;35922:73;;36002:117;36071:24;36089:5;36071:24;;;36064:5;36061:35;36051:2;;36110:1;36107;36100:12;36051:2;36045:74;",
  "source": "pragma solidity ^0.5.5; // >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./SquareVerifier.sol\";\nimport \"./ERC721Mintable.sol\";\nimport \"./Oraclize.sol\";\n\n\n\npragma solidity >=0.4.21 <0.6.0;\n\n\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\ncontract SolnSquareVerifier is SquareVerifier, CustomERC721Token {\n\n    constructor() public {\n        solutions.push(Solution(0, address(0), false));\n    }\n\n  modifier onlyOwner(){\n        require(msg.sender == _owner,\"Not owner of the contract\");\n        _;\n    }\n\n\n// TODO define a solutions struct that can hold an index & an address\n\n    struct Solution {\n        uint256 _index;\n        address _address;\n        bool _minted;\n    }\n\n\n\n// TODO define an array of the above struct\n\n    Solution[] solutions;\n\n// TODO define a mapping to store unique solutions submitted\n\n    mapping(bytes32 => bool) private uniqueSolutions;\n\n// TODO Create an event to emit when a solution is added\n    event SolutionAdded(uint256 index, address _address);\n\n// TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(address _address, uint256 _index, uint[2] memory a, uint[2][2] memory b, uint[2] memory c, uint[2] memory input) public {\n        bytes32 key = keccak256(abi.encodePacked(a, b, c, input));\n        require(uniqueSolutions[key] == false, \"This solution has already been used\");\n\n        bool isVerified = verifyTx(a, b, c, input);\n\n        require(isVerified, \"Could not verify solutions\");\n        Solution memory solution = Solution(_index, _address, false);\n        solutions.push(solution);\n        uniqueSolutions[key] = true;\n        \n        emit SolutionAdded(_index, _address);\n    }\n\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n  function mint( address _address, uint256 tokenId ) public onlyOwner returns(bool) {\n        require(solutions[tokenId]._address == _address, \"Address does not match solution\");\n        require(solutions[tokenId]._minted == false, \"Token has already been minted\");\n        solutions[tokenId]._minted = true;\n        super.mint(_address, tokenId);\n        return true;\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/jayc/Desktop/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7925
      ]
    },
    "id": 7926,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7733,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "id": 7734,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "44:33:6"
      },
      {
        "absolutePath": "project:/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7735,
        "nodeType": "ImportDirective",
        "scope": 7926,
        "sourceUnit": 10521,
        "src": "79:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7736,
        "nodeType": "ImportDirective",
        "scope": 7926,
        "sourceUnit": 1464,
        "src": "110:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Oraclize.sol",
        "file": "./Oraclize.sol",
        "id": 7737,
        "nodeType": "ImportDirective",
        "scope": 7926,
        "sourceUnit": 7732,
        "src": "141:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7738,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:32:6"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7739,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10520,
              "src": "446:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$10520",
                "typeString": "contract SquareVerifier"
              }
            },
            "id": 7740,
            "nodeType": "InheritanceSpecifier",
            "src": "446:14:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7741,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1463,
              "src": "462:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1463",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7742,
            "nodeType": "InheritanceSpecifier",
            "src": "462:17:6"
          }
        ],
        "contractDependencies": [
          411,
          485,
          531,
          1024,
          1322,
          1432,
          1463,
          7731,
          10520
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7925,
        "linearizedBaseContracts": [
          7925,
          1463,
          1432,
          7731,
          1322,
          1024,
          531,
          485,
          411,
          10520
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7757,
              "nodeType": "Block",
              "src": "508:63:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 7749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "542:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "553:1:6",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 7750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "545:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 7752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "545:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 7753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "557:5:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 7748,
                          "name": "Solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7777,
                          "src": "533:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Solution_$7777_storage_ptr_$",
                            "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                          }
                        },
                        "id": 7754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "533:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7777_memory",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7777_memory",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7745,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7780,
                        "src": "518:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7777_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "518:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7777_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7756,
                  "nodeType": "ExpressionStatement",
                  "src": "518:46:6"
                }
              ]
            },
            "documentation": null,
            "id": 7758,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:2:6"
            },
            "returnParameters": {
              "id": 7744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:6"
            },
            "scope": 7925,
            "src": "487:84:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7769,
              "nodeType": "Block",
              "src": "595:85:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7761,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10535,
                            "src": "613:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "613:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7763,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "627:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "613:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f74206f776e6572206f662074686520636f6e7472616374",
                        "id": 7765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "634:27:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f976e4ccda09d0d302a6e69db25d90361144803b9850fee6ee4100a680ddad0",
                          "typeString": "literal_string \"Not owner of the contract\""
                        },
                        "value": "Not owner of the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f976e4ccda09d0d302a6e69db25d90361144803b9850fee6ee4100a680ddad0",
                          "typeString": "literal_string \"Not owner of the contract\""
                        }
                      ],
                      "id": 7760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10538,
                        10539
                      ],
                      "referencedDeclaration": 10539,
                      "src": "605:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:57:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7767,
                  "nodeType": "ExpressionStatement",
                  "src": "605:57:6"
                },
                {
                  "id": 7768,
                  "nodeType": "PlaceholderStatement",
                  "src": "672:1:6"
                }
              ]
            },
            "documentation": null,
            "id": 7770,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:2:6"
            },
            "src": "575:105:6",
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7777,
            "members": [
              {
                "constant": false,
                "id": 7772,
                "name": "_index",
                "nodeType": "VariableDeclaration",
                "scope": 7777,
                "src": "784:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7771,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "784:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7774,
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 7777,
                "src": "808:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7773,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "808:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7776,
                "name": "_minted",
                "nodeType": "VariableDeclaration",
                "scope": 7777,
                "src": "834:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7775,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "834:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7925,
            "src": "758:95:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7780,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7925,
            "src": "906:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7777_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7778,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7777,
                "src": "906:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7777_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7779,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "906:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7777_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7784,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7925,
            "src": "995:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7783,
              "keyType": {
                "id": 7781,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1003:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "995:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7782,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1014:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7790,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7786,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7790,
                  "src": "1127:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7788,
                  "indexed": false,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7790,
                  "src": "1142:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:33:6"
            },
            "src": "1107:53:6"
          },
          {
            "body": {
              "id": 7875,
              "nodeType": "Block",
              "src": "1386:470:6",
              "statements": [
                {
                  "assignments": [
                    7816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7816,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7875,
                      "src": "1396:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7815,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1396:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7826,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7820,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7798,
                            "src": "1437:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7821,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7804,
                            "src": "1440:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7822,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7808,
                            "src": "1443:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7823,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7812,
                            "src": "1446:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7818,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10522,
                            "src": "1420:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1420:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1420:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7817,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10529,
                      "src": "1410:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1396:57:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7828,
                            "name": "uniqueSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7784,
                            "src": "1471:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7830,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7829,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7816,
                            "src": "1487:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1471:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 7831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1495:5:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1471:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320736f6c7574696f6e2068617320616c7265616479206265656e2075736564",
                        "id": 7833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1502:37:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                          "typeString": "literal_string \"This solution has already been used\""
                        },
                        "value": "This solution has already been used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                          "typeString": "literal_string \"This solution has already been used\""
                        }
                      ],
                      "id": 7827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10538,
                        10539
                      ],
                      "referencedDeclaration": 10539,
                      "src": "1463:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:77:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7835,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:77:6"
                },
                {
                  "assignments": [
                    7837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7837,
                      "name": "isVerified",
                      "nodeType": "VariableDeclaration",
                      "scope": 7875,
                      "src": "1551:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7836,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1551:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7844,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7839,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7798,
                        "src": "1578:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7840,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7804,
                        "src": "1581:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7841,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7808,
                        "src": "1584:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7842,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7812,
                        "src": "1587:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7838,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10519,
                      "src": "1569:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 7843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1551:42:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7846,
                        "name": "isVerified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7837,
                        "src": "1612:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c64206e6f742076657269667920736f6c7574696f6e73",
                        "id": 7847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1624:28:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e81335a6bf78226c7ca5e097e8c7501bfd4c14a32df9bdb8223296bdbe6448e4",
                          "typeString": "literal_string \"Could not verify solutions\""
                        },
                        "value": "Could not verify solutions"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e81335a6bf78226c7ca5e097e8c7501bfd4c14a32df9bdb8223296bdbe6448e4",
                          "typeString": "literal_string \"Could not verify solutions\""
                        }
                      ],
                      "id": 7845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10538,
                        10539
                      ],
                      "referencedDeclaration": 10539,
                      "src": "1604:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7849,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:49:6"
                },
                {
                  "assignments": [
                    7851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7851,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7875,
                      "src": "1663:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7777_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7850,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7777,
                        "src": "1663:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7777_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7857,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7853,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7794,
                        "src": "1699:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7854,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7792,
                        "src": "1707:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 7855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1717:5:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7852,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7777,
                      "src": "1690:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7777_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7777_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1663:60:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7861,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7851,
                        "src": "1748:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7777_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7777_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7858,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7780,
                        "src": "1733:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7777_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1733:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7777_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1733:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7863,
                  "nodeType": "ExpressionStatement",
                  "src": "1733:24:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7864,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7784,
                        "src": "1767:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7866,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7865,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7816,
                        "src": "1783:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1767:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1790:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1767:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7869,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:27:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7871,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7794,
                        "src": "1832:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7872,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7792,
                        "src": "1840:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7870,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7790,
                      "src": "1818:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7874,
                  "nodeType": "EmitStatement",
                  "src": "1813:36:6"
                }
              ]
            },
            "documentation": null,
            "id": 7876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7792,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7876,
                  "src": "1266:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7794,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7876,
                  "src": "1284:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7798,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7876,
                  "src": "1300:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7795,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1300:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7797,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1305:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1300:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7804,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7876,
                  "src": "1318:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7799,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1318:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7801,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1323:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1318:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7803,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1326:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1318:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7808,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7876,
                  "src": "1339:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7805,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1339:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7807,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1344:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1339:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7812,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7876,
                  "src": "1357:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7809,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1357:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7811,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1362:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1357:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1265:113:6"
            },
            "returnParameters": {
              "id": 7814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:6"
            },
            "scope": 7925,
            "src": "1245:611:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7923,
              "nodeType": "Block",
              "src": "2153:290:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7888,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7780,
                              "src": "2171:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Solution_$7777_storage_$dyn_storage",
                                "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                              }
                            },
                            "id": 7890,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7889,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7880,
                              "src": "2181:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2171:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7777_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7891,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_address",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7774,
                          "src": "2171:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7892,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7878,
                          "src": "2202:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2171:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320646f6573206e6f74206d6174636820736f6c7574696f6e",
                        "id": 7894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2212:33:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_913409e281dd979481e0680c77956a9aff8f29687aa69f93501b40f12e4ffb32",
                          "typeString": "literal_string \"Address does not match solution\""
                        },
                        "value": "Address does not match solution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_913409e281dd979481e0680c77956a9aff8f29687aa69f93501b40f12e4ffb32",
                          "typeString": "literal_string \"Address does not match solution\""
                        }
                      ],
                      "id": 7887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10538,
                        10539
                      ],
                      "referencedDeclaration": 10539,
                      "src": "2163:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:83:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7896,
                  "nodeType": "ExpressionStatement",
                  "src": "2163:83:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7898,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7780,
                              "src": "2264:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Solution_$7777_storage_$dyn_storage",
                                "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                              }
                            },
                            "id": 7900,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7899,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7880,
                              "src": "2274:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2264:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7777_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7901,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_minted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7776,
                          "src": "2264:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 7902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2294:5:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2264:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e2068617320616c7265616479206265656e206d696e746564",
                        "id": 7904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2301:31:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7735f8de97f71a38c0eb164657ec42d38293a2ffcdcf6eb3a9209e9ff474ac45",
                          "typeString": "literal_string \"Token has already been minted\""
                        },
                        "value": "Token has already been minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7735f8de97f71a38c0eb164657ec42d38293a2ffcdcf6eb3a9209e9ff474ac45",
                          "typeString": "literal_string \"Token has already been minted\""
                        }
                      ],
                      "id": 7897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10538,
                        10539
                      ],
                      "referencedDeclaration": 10539,
                      "src": "2256:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:77:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7906,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:77:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7907,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7780,
                          "src": "2343:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7777_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                          }
                        },
                        "id": 7909,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7908,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7880,
                          "src": "2353:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2343:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7777_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7910,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_minted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7776,
                      "src": "2343:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2372:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2343:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7913,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7917,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7878,
                        "src": "2397:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7918,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7880,
                        "src": "2407:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7914,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10590,
                        "src": "2386:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7925",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1462,
                      "src": "2386:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2386:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7920,
                  "nodeType": "ExpressionStatement",
                  "src": "2386:29:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2432:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7886,
                  "id": 7922,
                  "nodeType": "Return",
                  "src": "2425:11:6"
                }
              ]
            },
            "documentation": null,
            "id": 7924,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7883,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7882,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7770,
                  "src": "2129:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2129:9:6"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7878,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7924,
                  "src": "2086:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7880,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7924,
                  "src": "2104:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2084:37:6"
            },
            "returnParameters": {
              "id": 7886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7885,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7924,
                  "src": "2147:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7884,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2146:6:6"
            },
            "scope": 7925,
            "src": "2071:372:6",
            "stateMutability": "nonpayable",
            "superFunction": 1462,
            "visibility": "public"
          }
        ],
        "scope": 7926,
        "src": "415:2031:6"
      }
    ],
    "src": "0:2472:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7925
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".5"
          ]
        },
        "id": 7733,
        "name": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7734,
        "name": "PragmaDirective",
        "src": "44:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 10521,
          "absolutePath": "project:/contracts/SquareVerifier.sol",
          "file": "./SquareVerifier.sol",
          "scope": 7926,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7735,
        "name": "ImportDirective",
        "src": "79:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 1464,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7926,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7736,
        "name": "ImportDirective",
        "src": "110:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 7732,
          "absolutePath": "project:/contracts/Oraclize.sol",
          "file": "./Oraclize.sol",
          "scope": 7926,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7737,
        "name": "ImportDirective",
        "src": "141:24:6"
      },
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7738,
        "name": "PragmaDirective",
        "src": "169:32:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            411,
            485,
            531,
            1024,
            1322,
            1432,
            1463,
            7731,
            10520
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7925,
            1463,
            1432,
            7731,
            1322,
            1024,
            531,
            485,
            411,
            10520
          ],
          "name": "SolnSquareVerifier",
          "scope": 7926
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SquareVerifier",
                  "referencedDeclaration": 10520,
                  "type": "contract SquareVerifier"
                },
                "id": 7739,
                "name": "UserDefinedTypeName",
                "src": "446:14:6"
              }
            ],
            "id": 7740,
            "name": "InheritanceSpecifier",
            "src": "446:14:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1463,
                  "type": "contract CustomERC721Token"
                },
                "id": 7741,
                "name": "UserDefinedTypeName",
                "src": "462:17:6"
              }
            ],
            "id": 7742,
            "name": "InheritanceSpecifier",
            "src": "462:17:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7925,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7743,
                "name": "ParameterList",
                "src": "498:2:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7744,
                "name": "ParameterList",
                "src": "508:0:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7777_memory",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7780,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7745,
                                "name": "Identifier",
                                "src": "518:9:6"
                              }
                            ],
                            "id": 7747,
                            "name": "MemberAccess",
                            "src": "518:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7777,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7748,
                                "name": "Identifier",
                                "src": "533:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 7749,
                                "name": "Literal",
                                "src": "542:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7750,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "545:7:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7751,
                                    "name": "Literal",
                                    "src": "553:1:6"
                                  }
                                ],
                                "id": 7752,
                                "name": "FunctionCall",
                                "src": "545:10:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 7753,
                                "name": "Literal",
                                "src": "557:5:6"
                              }
                            ],
                            "id": 7754,
                            "name": "FunctionCall",
                            "src": "533:30:6"
                          }
                        ],
                        "id": 7755,
                        "name": "FunctionCall",
                        "src": "518:46:6"
                      }
                    ],
                    "id": 7756,
                    "name": "ExpressionStatement",
                    "src": "518:46:6"
                  }
                ],
                "id": 7757,
                "name": "Block",
                "src": "508:63:6"
              }
            ],
            "id": 7758,
            "name": "FunctionDefinition",
            "src": "487:84:6"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyOwner",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7759,
                "name": "ParameterList",
                "src": "593:2:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3f976e4ccda09d0d302a6e69db25d90361144803b9850fee6ee4100a680ddad0",
                                  "typeString": "literal_string \"Not owner of the contract\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10538,
                                10539
                              ],
                              "referencedDeclaration": 10539,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7760,
                            "name": "Identifier",
                            "src": "605:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10535,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7761,
                                    "name": "Identifier",
                                    "src": "613:3:6"
                                  }
                                ],
                                "id": 7762,
                                "name": "MemberAccess",
                                "src": "613:10:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 335,
                                  "type": "address",
                                  "value": "_owner"
                                },
                                "id": 7763,
                                "name": "Identifier",
                                "src": "627:6:6"
                              }
                            ],
                            "id": 7764,
                            "name": "BinaryOperation",
                            "src": "613:20:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f74206f776e6572206f662074686520636f6e7472616374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Not owner of the contract\"",
                              "value": "Not owner of the contract"
                            },
                            "id": 7765,
                            "name": "Literal",
                            "src": "634:27:6"
                          }
                        ],
                        "id": 7766,
                        "name": "FunctionCall",
                        "src": "605:57:6"
                      }
                    ],
                    "id": 7767,
                    "name": "ExpressionStatement",
                    "src": "605:57:6"
                  },
                  {
                    "id": 7768,
                    "name": "PlaceholderStatement",
                    "src": "672:1:6"
                  }
                ],
                "id": 7769,
                "name": "Block",
                "src": "595:85:6"
              }
            ],
            "id": 7770,
            "name": "ModifierDefinition",
            "src": "575:105:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7925,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_index",
                  "scope": 7777,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7771,
                    "name": "ElementaryTypeName",
                    "src": "784:7:6"
                  }
                ],
                "id": 7772,
                "name": "VariableDeclaration",
                "src": "784:14:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_address",
                  "scope": 7777,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7773,
                    "name": "ElementaryTypeName",
                    "src": "808:7:6"
                  }
                ],
                "id": 7774,
                "name": "VariableDeclaration",
                "src": "808:16:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_minted",
                  "scope": 7777,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7775,
                    "name": "ElementaryTypeName",
                    "src": "834:4:6"
                  }
                ],
                "id": 7776,
                "name": "VariableDeclaration",
                "src": "834:12:6"
              }
            ],
            "id": 7777,
            "name": "StructDefinition",
            "src": "758:95:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7925,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7777,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7778,
                    "name": "UserDefinedTypeName",
                    "src": "906:8:6"
                  }
                ],
                "id": 7779,
                "name": "ArrayTypeName",
                "src": "906:10:6"
              }
            ],
            "id": 7780,
            "name": "VariableDeclaration",
            "src": "906:20:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7925,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => bool)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7781,
                    "name": "ElementaryTypeName",
                    "src": "1003:7:6"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7782,
                    "name": "ElementaryTypeName",
                    "src": "1014:4:6"
                  }
                ],
                "id": 7783,
                "name": "Mapping",
                "src": "995:24:6"
              }
            ],
            "id": 7784,
            "name": "VariableDeclaration",
            "src": "995:48:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7790,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7785,
                        "name": "ElementaryTypeName",
                        "src": "1127:7:6"
                      }
                    ],
                    "id": 7786,
                    "name": "VariableDeclaration",
                    "src": "1127:13:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_address",
                      "scope": 7790,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7787,
                        "name": "ElementaryTypeName",
                        "src": "1142:7:6"
                      }
                    ],
                    "id": 7788,
                    "name": "VariableDeclaration",
                    "src": "1142:16:6"
                  }
                ],
                "id": 7789,
                "name": "ParameterList",
                "src": "1126:33:6"
              }
            ],
            "id": 7790,
            "name": "EventDefinition",
            "src": "1107:53:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7925,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 7876,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7791,
                        "name": "ElementaryTypeName",
                        "src": "1266:7:6"
                      }
                    ],
                    "id": 7792,
                    "name": "VariableDeclaration",
                    "src": "1266:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_index",
                      "scope": 7876,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7793,
                        "name": "ElementaryTypeName",
                        "src": "1284:7:6"
                      }
                    ],
                    "id": 7794,
                    "name": "VariableDeclaration",
                    "src": "1284:14:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7876,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7795,
                            "name": "ElementaryTypeName",
                            "src": "1300:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7796,
                            "name": "Literal",
                            "src": "1305:1:6"
                          }
                        ],
                        "id": 7797,
                        "name": "ArrayTypeName",
                        "src": "1300:7:6"
                      }
                    ],
                    "id": 7798,
                    "name": "VariableDeclaration",
                    "src": "1300:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7876,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7799,
                                "name": "ElementaryTypeName",
                                "src": "1318:4:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7800,
                                "name": "Literal",
                                "src": "1323:1:6"
                              }
                            ],
                            "id": 7801,
                            "name": "ArrayTypeName",
                            "src": "1318:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7802,
                            "name": "Literal",
                            "src": "1326:1:6"
                          }
                        ],
                        "id": 7803,
                        "name": "ArrayTypeName",
                        "src": "1318:10:6"
                      }
                    ],
                    "id": 7804,
                    "name": "VariableDeclaration",
                    "src": "1318:19:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7876,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7805,
                            "name": "ElementaryTypeName",
                            "src": "1339:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7806,
                            "name": "Literal",
                            "src": "1344:1:6"
                          }
                        ],
                        "id": 7807,
                        "name": "ArrayTypeName",
                        "src": "1339:7:6"
                      }
                    ],
                    "id": 7808,
                    "name": "VariableDeclaration",
                    "src": "1339:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7876,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7809,
                            "name": "ElementaryTypeName",
                            "src": "1357:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7810,
                            "name": "Literal",
                            "src": "1362:1:6"
                          }
                        ],
                        "id": 7811,
                        "name": "ArrayTypeName",
                        "src": "1357:7:6"
                      }
                    ],
                    "id": 7812,
                    "name": "VariableDeclaration",
                    "src": "1357:20:6"
                  }
                ],
                "id": 7813,
                "name": "ParameterList",
                "src": "1265:113:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7814,
                "name": "ParameterList",
                "src": "1386:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7816
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7875,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7815,
                            "name": "ElementaryTypeName",
                            "src": "1396:7:6"
                          }
                        ],
                        "id": 7816,
                        "name": "VariableDeclaration",
                        "src": "1396:11:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10529,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7817,
                            "name": "Identifier",
                            "src": "1410:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10522,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7818,
                                    "name": "Identifier",
                                    "src": "1420:3:6"
                                  }
                                ],
                                "id": 7819,
                                "name": "MemberAccess",
                                "src": "1420:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7798,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7820,
                                "name": "Identifier",
                                "src": "1437:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7804,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7821,
                                "name": "Identifier",
                                "src": "1440:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7808,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7822,
                                "name": "Identifier",
                                "src": "1443:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7812,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7823,
                                "name": "Identifier",
                                "src": "1446:5:6"
                              }
                            ],
                            "id": 7824,
                            "name": "FunctionCall",
                            "src": "1420:32:6"
                          }
                        ],
                        "id": 7825,
                        "name": "FunctionCall",
                        "src": "1410:43:6"
                      }
                    ],
                    "id": 7826,
                    "name": "VariableDeclarationStatement",
                    "src": "1396:57:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                                  "typeString": "literal_string \"This solution has already been used\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10538,
                                10539
                              ],
                              "referencedDeclaration": 10539,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7827,
                            "name": "Identifier",
                            "src": "1463:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7784,
                                      "type": "mapping(bytes32 => bool)",
                                      "value": "uniqueSolutions"
                                    },
                                    "id": 7828,
                                    "name": "Identifier",
                                    "src": "1471:15:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7816,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7829,
                                    "name": "Identifier",
                                    "src": "1487:3:6"
                                  }
                                ],
                                "id": 7830,
                                "name": "IndexAccess",
                                "src": "1471:20:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 7831,
                                "name": "Literal",
                                "src": "1495:5:6"
                              }
                            ],
                            "id": 7832,
                            "name": "BinaryOperation",
                            "src": "1471:29:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5468697320736f6c7574696f6e2068617320616c7265616479206265656e2075736564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"This solution has already been used\"",
                              "value": "This solution has already been used"
                            },
                            "id": 7833,
                            "name": "Literal",
                            "src": "1502:37:6"
                          }
                        ],
                        "id": 7834,
                        "name": "FunctionCall",
                        "src": "1463:77:6"
                      }
                    ],
                    "id": 7835,
                    "name": "ExpressionStatement",
                    "src": "1463:77:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7837
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "isVerified",
                          "scope": 7875,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7836,
                            "name": "ElementaryTypeName",
                            "src": "1551:4:6"
                          }
                        ],
                        "id": 7837,
                        "name": "VariableDeclaration",
                        "src": "1551:15:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                  "typeString": "uint256[2] memory[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10519,
                              "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)",
                              "value": "verifyTx"
                            },
                            "id": 7838,
                            "name": "Identifier",
                            "src": "1569:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7798,
                              "type": "uint256[2] memory",
                              "value": "a"
                            },
                            "id": 7839,
                            "name": "Identifier",
                            "src": "1578:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7804,
                              "type": "uint256[2] memory[2] memory",
                              "value": "b"
                            },
                            "id": 7840,
                            "name": "Identifier",
                            "src": "1581:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7808,
                              "type": "uint256[2] memory",
                              "value": "c"
                            },
                            "id": 7841,
                            "name": "Identifier",
                            "src": "1584:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7812,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7842,
                            "name": "Identifier",
                            "src": "1587:5:6"
                          }
                        ],
                        "id": 7843,
                        "name": "FunctionCall",
                        "src": "1569:24:6"
                      }
                    ],
                    "id": 7844,
                    "name": "VariableDeclarationStatement",
                    "src": "1551:42:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e81335a6bf78226c7ca5e097e8c7501bfd4c14a32df9bdb8223296bdbe6448e4",
                                  "typeString": "literal_string \"Could not verify solutions\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10538,
                                10539
                              ],
                              "referencedDeclaration": 10539,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7845,
                            "name": "Identifier",
                            "src": "1604:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7837,
                              "type": "bool",
                              "value": "isVerified"
                            },
                            "id": 7846,
                            "name": "Identifier",
                            "src": "1612:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "436f756c64206e6f742076657269667920736f6c7574696f6e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Could not verify solutions\"",
                              "value": "Could not verify solutions"
                            },
                            "id": 7847,
                            "name": "Literal",
                            "src": "1624:28:6"
                          }
                        ],
                        "id": 7848,
                        "name": "FunctionCall",
                        "src": "1604:49:6"
                      }
                    ],
                    "id": 7849,
                    "name": "ExpressionStatement",
                    "src": "1604:49:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7851
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7875,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7777,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7850,
                            "name": "UserDefinedTypeName",
                            "src": "1663:8:6"
                          }
                        ],
                        "id": 7851,
                        "name": "VariableDeclaration",
                        "src": "1663:24:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7777,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7852,
                            "name": "Identifier",
                            "src": "1690:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7794,
                              "type": "uint256",
                              "value": "_index"
                            },
                            "id": 7853,
                            "name": "Identifier",
                            "src": "1699:6:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7792,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7854,
                            "name": "Identifier",
                            "src": "1707:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 7855,
                            "name": "Literal",
                            "src": "1717:5:6"
                          }
                        ],
                        "id": 7856,
                        "name": "FunctionCall",
                        "src": "1690:33:6"
                      }
                    ],
                    "id": 7857,
                    "name": "VariableDeclarationStatement",
                    "src": "1663:60:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7777_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7780,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7858,
                                "name": "Identifier",
                                "src": "1733:9:6"
                              }
                            ],
                            "id": 7860,
                            "name": "MemberAccess",
                            "src": "1733:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7851,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7861,
                            "name": "Identifier",
                            "src": "1748:8:6"
                          }
                        ],
                        "id": 7862,
                        "name": "FunctionCall",
                        "src": "1733:24:6"
                      }
                    ],
                    "id": 7863,
                    "name": "ExpressionStatement",
                    "src": "1733:24:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7784,
                                  "type": "mapping(bytes32 => bool)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7864,
                                "name": "Identifier",
                                "src": "1767:15:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7816,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7865,
                                "name": "Identifier",
                                "src": "1783:3:6"
                              }
                            ],
                            "id": 7866,
                            "name": "IndexAccess",
                            "src": "1767:20:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7867,
                            "name": "Literal",
                            "src": "1790:4:6"
                          }
                        ],
                        "id": 7868,
                        "name": "Assignment",
                        "src": "1767:27:6"
                      }
                    ],
                    "id": 7869,
                    "name": "ExpressionStatement",
                    "src": "1767:27:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7790,
                              "type": "function (uint256,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7870,
                            "name": "Identifier",
                            "src": "1818:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7794,
                              "type": "uint256",
                              "value": "_index"
                            },
                            "id": 7871,
                            "name": "Identifier",
                            "src": "1832:6:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7792,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7872,
                            "name": "Identifier",
                            "src": "1840:8:6"
                          }
                        ],
                        "id": 7873,
                        "name": "FunctionCall",
                        "src": "1818:31:6"
                      }
                    ],
                    "id": 7874,
                    "name": "EmitStatement",
                    "src": "1813:36:6"
                  }
                ],
                "id": 7875,
                "name": "Block",
                "src": "1386:470:6"
              }
            ],
            "id": 7876,
            "name": "FunctionDefinition",
            "src": "1245:611:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "scope": 7925,
              "stateMutability": "nonpayable",
              "superFunction": 1462,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 7924,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7877,
                        "name": "ElementaryTypeName",
                        "src": "2086:7:6"
                      }
                    ],
                    "id": 7878,
                    "name": "VariableDeclaration",
                    "src": "2086:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7924,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7879,
                        "name": "ElementaryTypeName",
                        "src": "2104:7:6"
                      }
                    ],
                    "id": 7880,
                    "name": "VariableDeclaration",
                    "src": "2104:15:6"
                  }
                ],
                "id": 7881,
                "name": "ParameterList",
                "src": "2084:37:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7924,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7884,
                        "name": "ElementaryTypeName",
                        "src": "2147:4:6"
                      }
                    ],
                    "id": 7885,
                    "name": "VariableDeclaration",
                    "src": "2147:4:6"
                  }
                ],
                "id": 7886,
                "name": "ParameterList",
                "src": "2146:6:6"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7770,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 7882,
                    "name": "Identifier",
                    "src": "2129:9:6"
                  }
                ],
                "id": 7883,
                "name": "ModifierInvocation",
                "src": "2129:9:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_913409e281dd979481e0680c77956a9aff8f29687aa69f93501b40f12e4ffb32",
                                  "typeString": "literal_string \"Address does not match solution\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10538,
                                10539
                              ],
                              "referencedDeclaration": 10539,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7887,
                            "name": "Identifier",
                            "src": "2163:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_address",
                                  "referencedDeclaration": 7774,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7780,
                                          "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                          "value": "solutions"
                                        },
                                        "id": 7888,
                                        "name": "Identifier",
                                        "src": "2171:9:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7880,
                                          "type": "uint256",
                                          "value": "tokenId"
                                        },
                                        "id": 7889,
                                        "name": "Identifier",
                                        "src": "2181:7:6"
                                      }
                                    ],
                                    "id": 7890,
                                    "name": "IndexAccess",
                                    "src": "2171:18:6"
                                  }
                                ],
                                "id": 7891,
                                "name": "MemberAccess",
                                "src": "2171:27:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7878,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 7892,
                                "name": "Identifier",
                                "src": "2202:8:6"
                              }
                            ],
                            "id": 7893,
                            "name": "BinaryOperation",
                            "src": "2171:39:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4164647265737320646f6573206e6f74206d6174636820736f6c7574696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Address does not match solution\"",
                              "value": "Address does not match solution"
                            },
                            "id": 7894,
                            "name": "Literal",
                            "src": "2212:33:6"
                          }
                        ],
                        "id": 7895,
                        "name": "FunctionCall",
                        "src": "2163:83:6"
                      }
                    ],
                    "id": 7896,
                    "name": "ExpressionStatement",
                    "src": "2163:83:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7735f8de97f71a38c0eb164657ec42d38293a2ffcdcf6eb3a9209e9ff474ac45",
                                  "typeString": "literal_string \"Token has already been minted\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10538,
                                10539
                              ],
                              "referencedDeclaration": 10539,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7897,
                            "name": "Identifier",
                            "src": "2256:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_minted",
                                  "referencedDeclaration": 7776,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7780,
                                          "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                          "value": "solutions"
                                        },
                                        "id": 7898,
                                        "name": "Identifier",
                                        "src": "2264:9:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7880,
                                          "type": "uint256",
                                          "value": "tokenId"
                                        },
                                        "id": 7899,
                                        "name": "Identifier",
                                        "src": "2274:7:6"
                                      }
                                    ],
                                    "id": 7900,
                                    "name": "IndexAccess",
                                    "src": "2264:18:6"
                                  }
                                ],
                                "id": 7901,
                                "name": "MemberAccess",
                                "src": "2264:26:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 7902,
                                "name": "Literal",
                                "src": "2294:5:6"
                              }
                            ],
                            "id": 7903,
                            "name": "BinaryOperation",
                            "src": "2264:35:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546f6b656e2068617320616c7265616479206265656e206d696e746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Token has already been minted\"",
                              "value": "Token has already been minted"
                            },
                            "id": 7904,
                            "name": "Literal",
                            "src": "2301:31:6"
                          }
                        ],
                        "id": 7905,
                        "name": "FunctionCall",
                        "src": "2256:77:6"
                      }
                    ],
                    "id": 7906,
                    "name": "ExpressionStatement",
                    "src": "2256:77:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_minted",
                              "referencedDeclaration": 7776,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7780,
                                      "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                      "value": "solutions"
                                    },
                                    "id": 7907,
                                    "name": "Identifier",
                                    "src": "2343:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7880,
                                      "type": "uint256",
                                      "value": "tokenId"
                                    },
                                    "id": 7908,
                                    "name": "Identifier",
                                    "src": "2353:7:6"
                                  }
                                ],
                                "id": 7909,
                                "name": "IndexAccess",
                                "src": "2343:18:6"
                              }
                            ],
                            "id": 7910,
                            "name": "MemberAccess",
                            "src": "2343:26:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7911,
                            "name": "Literal",
                            "src": "2372:4:6"
                          }
                        ],
                        "id": 7912,
                        "name": "Assignment",
                        "src": "2343:33:6"
                      }
                    ],
                    "id": 7913,
                    "name": "ExpressionStatement",
                    "src": "2343:33:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1462,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10590,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7914,
                                "name": "Identifier",
                                "src": "2386:5:6"
                              }
                            ],
                            "id": 7916,
                            "name": "MemberAccess",
                            "src": "2386:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7878,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7917,
                            "name": "Identifier",
                            "src": "2397:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7880,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7918,
                            "name": "Identifier",
                            "src": "2407:7:6"
                          }
                        ],
                        "id": 7919,
                        "name": "FunctionCall",
                        "src": "2386:29:6"
                      }
                    ],
                    "id": 7920,
                    "name": "ExpressionStatement",
                    "src": "2386:29:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7886
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 7921,
                        "name": "Literal",
                        "src": "2432:4:6"
                      }
                    ],
                    "id": 7922,
                    "name": "Return",
                    "src": "2425:11:6"
                  }
                ],
                "id": 7923,
                "name": "Block",
                "src": "2153:290:6"
              }
            ],
            "id": 7924,
            "name": "FunctionDefinition",
            "src": "2071:372:6"
          }
        ],
        "id": 7925,
        "name": "ContractDefinition",
        "src": "415:2031:6"
      }
    ],
    "id": 7926,
    "name": "SourceUnit",
    "src": "0:2472:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8ba5cdc385bc6c37c9a05ad09fbc238589c43602f4cee09c46856027df8a935a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "Added",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x7ee35ffa528a36037ec23ed4b99d479118464d605ffa951ac0441db66273b332": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "currentOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "ownershipTransfer",
          "type": "event"
        },
        "0x078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "name": "Verified",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6E90B09eBdA9fEfEa49e04238983cA6Bb48D6453",
      "transactionHash": "0xf98c39ef7321ba79d0f258827a3c4dc5e828a64903873336a0bbe214b93dfee1"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-07-19T18:31:20.628Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}