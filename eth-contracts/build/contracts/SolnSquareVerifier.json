{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addedSolution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currentOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownershipTransfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "pausable",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "retrieveCurrentOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "uniqueSolution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolutionArray",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mintTheNft",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addedSolution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownershipTransfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolutionArray\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mintTheNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"pausable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"retrieveCurrentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"uniqueSolution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{},\"notice\":\"/ TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\"}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xe13173a54bb0c5e8e1d67b859bfa16c8b10a425f4472e9351003772059ac8823\",\"urls\":[\"bzz-raw://6a838a85983b639e85c221e9debd26665702c2446eaa60af4b614ffbcc143f5e\",\"dweb:/ipfs/QmSChHuisGepBa8xYo1sEecsiRR5qFEpbG55h1Cmii242c\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xb8050e729b42ba1c6b9a9b0cb46da4836ba5ae628f5830ce0c3d3b86d7fb27d4\",\"urls\":[\"bzz-raw://a1692d9d34a7d08cf0fc937c1f65388de5e069f4701306afcc126596d57d809a\",\"dweb:/ipfs/Qmd4Cj5669a4pnPesgwQ2SPSYrubaxBnA6u26nue4EKJH2\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x554235a10af4fba11636505f9a90a17eb3b81293ff0e4753d4639a7bcf89cc8c\",\"urls\":[\"bzz-raw://2b9028e4530dcb9a8e584f97df9a9e2e350f00c8407eb06de920448a1a41c69b\",\"dweb:/ipfs/QmPdv9H5rBC8hUorZpRiq4RhmisghsN1YW7hPCcCaj8FNw\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0x891422bed2636bb6a7285f32d53c56ed72986f57df59b8afb0822461eadc9217\",\"urls\":[\"bzz-raw://42d7197bf7100d53c16b0bc8ae0caba2ddebe725c707c360080791ceaebf05fb\",\"dweb:/ipfs/QmayPezmCtsAyUa9K2tBxMyY1e18VB4ziGpJXaESEKsmYL\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280601581526020017f5265616c457374617465204e465420546f6b656e7300000000000000000000008152506040518060400160405280600481526020017f52454e54000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162004d07603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ee35ffa528a36037ec23ed4b99d479118464d605ffa951ac0441db66273b33260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160008060146101000a81548160ff021916908315150217905550620001c36301ffc9a760e01b6200033b60201b60201c565b620001db6380ac58cd60e01b6200033b60201b60201c565b620001f363780e9d6360e01b6200033b60201b60201c565b82600f90805190602001906200020b929190620003db565b50816010908051906020019062000224929190620003db565b5080601190805190602001906200023d929190620003db565b506200025b635b5e139f60e01b6200033b60201b6200470c1760201c565b5050506013604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160001515815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055505050506200048a565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200036f57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041e57805160ff19168380011785556200044f565b828001600101855582156200044f579182015b828111156200044e57825182559160200191906001019062000431565b5b5090506200045e919062000462565b5090565b6200048791905b808211156200048357600081600090555060010162000469565b5090565b90565b61486d806200049a6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80636352211e116100f9578063b2bdfa7b11610097578063d547cfb711610071578063d547cfb714610dc0578063e5ad88a714610e43578063e985e9c514610fce578063f2fde38b1461104a576101c4565b8063b2bdfa7b14610bca578063b88d4fde14610c14578063c87b56dd14610d19576101c4565b806395d89b41116100d357806395d89b4114610a475780639c0dce7214610aca578063a22cb46514610b30578063aa59c54614610b80576101c4565b80636352211e1461093b57806370a08231146109a95780637abcab6e14610a01576101c4565b806327dc297e1161016657806340c10f191161014057806340c10f19146106ac57806342842e0e146107125780634f6ccce714610780578063621e9ec0146107c2576101c4565b806327dc297e146104295780632f745c59146104ee57806338bbfa5014610550576101c4565b8063095ea7b3116101a2578063095ea7b31461031f57806318160ddd1461036d57806323b872dd1461038b578063272870ac146103f9576101c4565b806301ffc9a7146101c957806306fdde031461022e578063081812fc146102b1575b600080fd5b610214600480360360208110156101df57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061108e565b604051808215151515815260200191505060405180910390f35b6102366110f6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027657808201518184015260208101905061025b565b50505050905090810190601f1680156102a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102dd600480360360208110156102c757600080fd5b8101908080359060200190929190505050611198565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61036b6004803603604081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611250565b005b6103756113dd565b6040518082815260200191505060405180910390f35b6103f7600480360360608110156103a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113ea565b005b6104276004803603602081101561040f57600080fd5b8101908080351515906020019092919050505061140d565b005b6104ec6004803603604081101561043f57600080fd5b81019080803590602001909291908035906020019064010000000081111561046657600080fd5b82018360208201111561047857600080fd5b8035906020019184600183028401116401000000008311171561049a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611575565b005b61053a6004803603604081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b8565b6040518082815260200191505060405180910390f35b6106aa6004803603606081101561056657600080fd5b81019080803590602001909291908035906020019064010000000081111561058d57600080fd5b82018360208201111561059f57600080fd5b803590602001918460018302840111640100000000831117156105c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062457600080fd5b82018360208201111561063657600080fd5b8035906020019184600183028401116401000000008311171561065857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061162b565b005b6106f8600480360360408110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611630565b604051808215151515815260200191505060405180910390f35b61077e6004803603606081101561072857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611711565b005b6107ac6004803603602081101561079657600080fd5b8101908080359060200190929190505050611731565b6040518082815260200191505060405180910390f35b61092160048036036101408110156107d957600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b8282101561088e578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508152602001906001019061083a565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611765565b604051808215151515815260200191505060405180910390f35b6109676004803603602081101561095157600080fd5b8101908080359060200190929190505050611961565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109eb600480360360208110156109bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061199e565b6040518082815260200191505060405180910390f35b610a2d60048036036020811015610a1757600080fd5b81019080803590602001909291905050506119ee565b604051808215151515815260200191505060405180910390f35b610a4f611a0e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a8f578082015181840152602081019050610a74565b50505050905090810190601f168015610abc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b1660048036036040811015610ae057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ab0565b604051808215151515815260200191505060405180910390f35b610b7e60048036036040811015610b4657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611d27565b005b610b88611e61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610bd2611e8a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610d1760048036036080811015610c2a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c9157600080fd5b820183602082011115610ca357600080fd5b80359060200191846001830284011164010000000083111715610cc557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611eaf565b005b610d4560048036036020811015610d2f57600080fd5b8101908080359060200190929190505050611ed5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d85578082015181840152602081019050610d6a565b50505050905090810190601f168015610db25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610dc8611f9c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e08578082015181840152602081019050610ded565b50505050905090810190601f168015610e355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610fcc6004803603610180811015610e5a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610f39578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610ee5565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929050505061203e565b005b61103060048036036040811015610fe457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123e3565b604051808215151515815260200191505060405180910390f35b61108c6004803603602081101561106057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612477565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561118e5780601f106111635761010080835404028352916020019161118e565b820191906000526020600020905b81548152906001019060200180831161117157829003601f168201915b5050505050905090565b60006111a3826126fe565b611215576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061125b82611961565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806147e0602c913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611322575061132181336123e3565b5b61132b57600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6113f43382612770565b6113fd57600080fd5b611408838383612805565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f74206f776e6572206f662074686520636f6e74726163740000000000000081525060200191505060405180910390fd5b801515600060149054906101000a900460ff1615151415611558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f706175736564207661726961626c65206973206e6f742066616c73650000000081525060200191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6115b4828260006040519080825280601f01601f1916602001820160405280156115ae5781602001600182028038833980820191505090505b5061162b565b5050565b60006115c38361199e565b82106115ce57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061161857fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f74206f776e6572206f662074686520636f6e74726163740000000000000081525060200191505060405180910390fd5b6116fe8383612829565b6117078261284a565b6001905092915050565b61172c83838360405180602001604052806000815250611eaf565b505050565b600061173b6113dd565b821061174657600080fd5b6008828154811061175357fe5b90600052602060002001549050919050565b600061176f6144a6565b60405180604001604052808760006002811061178757fe5b602002015181526020018760016002811061179e57fe5b6020020151815250816000018190525060405180604001604052806040518060400160405280886000600281106117d157fe5b60200201516000600281106117e257fe5b60200201518152602001886000600281106117f957fe5b602002015160016002811061180a57fe5b6020020151815250815260200160405180604001604052808860016002811061182f57fe5b602002015160006002811061184057fe5b602002015181526020018860016002811061185757fe5b602002015160016002811061186857fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061189357fe5b60200201518152602001856001600281106118aa57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156118ec5781602001602082028038833980820191505090505b50905060008090505b60028110156119345784816002811061190a57fe5b602002015182828151811061191b57fe5b60200260200101818152505080806001019150506118f5565b506000611941828461299b565b141561195257600192505050611959565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006119e7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b0d565b9050919050565b60146020528060005260406000206000915054906101000a900460ff1681565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611aa65780601f10611a7b57610100808354040283529160200191611aa6565b820191906000526020600020905b815481529060010190602001808311611a8957829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f74206f776e6572206f662074686520636f6e74726163740000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660138381548110611b9857fe5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806147ac6034913960400191505060405180910390fd5b6000151560138381548110611c4757fe5b906000526020600020906002020160010160149054906101000a900460ff16151514611cdb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20686173206265656e206d696e746564000000000000000000000081525060200191505060405180910390fd5b600160138381548110611cea57fe5b906000526020600020906002020160010160146101000a81548160ff021916908315150217905550611d1c8383611630565b506001905092915050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d6057600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611eba8484846113ea565b611ec684848484612b1b565b611ecf57600080fd5b50505050565b6060611ee0826126fe565b611ee957600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f905780601f10611f6557610100808354040283529160200191611f90565b820191906000526020600020905b815481529060010190602001808311611f7357829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120345780601f1061200957610100808354040283529160200191612034565b820191906000526020600020905b81548152906001019060200180831161201757829003601f168201915b5050505050905090565b6000848484846040516020018085600260200280838360005b83811015612072578082015181840152602081019050612057565b505050509050018460026000925b818410156120c65782846020020151600260200280838360005b838110156120b557808201518184015260208101905061209a565b505050509050019260010192612080565b9250505083600260200280838360005b838110156120f15780820151818401526020810190506120d6565b5050505090500182600260200280838360005b8381101561211f578082015181840152602081019050612104565b50505050905001945050505050604051602081830303815290604052805190602001209050600015156014600083815260200190815260200160002060009054906101000a900460ff161515146121de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f74206120756e6971756520736f6c7574696f6e000000000000000000000081525060200191505060405180910390fd5b60006121ec86868686611765565b905080612261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f736f6c7574696f6e7320636f756c64206e6f742062652076657269666965640081525060200191505060405180910390fd5b6122696144d9565b60405180606001604052808981526020018a73ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555050505060016014600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507f48966b68a5367cf3ba62affaa7ec2584bb3b542923ce98698ad05ecfc927ca25888a604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612539576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f74206f776e6572206f662074686520636f6e74726163740000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156125dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f6e65774f776e6572206973206e6f742061207265616c2061646472657373000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ee35ffa528a36037ec23ed4b99d479118464d605ffa951ac0441db66273b332816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061277c83611961565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806127eb57508373ffffffffffffffffffffffffffffffffffffffff166127d384611198565b73ffffffffffffffffffffffffffffffffffffffff16145b806127fc57506127fb81856123e3565b5b91505092915050565b612810838383612d04565b61281a8382612f7c565b612824828261311a565b505050565b61283382826131e1565b61283d828261311a565b612846816133f9565b5050565b612853816126fe565b6128c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5468697320697320616e20696e76616c696420746f6b656e206964000000000081525060200191505060405180910390fd5b61297160118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561295e5780601f106129335761010080835404028352916020019161295e565b820191906000526020600020905b81548152906001019060200180831161294157829003601f168201915b505050505061296c83613445565b613572565b601260008381526020019081526020016000209080519060200190612997929190614512565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506129c9614592565b6129d16135b6565b90508060800151516001865101146129e857600080fd5b6129f06145d9565b6040518060400160405280600081526020016000815250905060008090505b8651811015612a865783878281518110612a2557fe5b602002602001015110612a3757600080fd5b612a7782612a7285608001516001850181518110612a5157fe5b60200260200101518a8581518110612a6557fe5b6020026020010151613a04565b613a96565b91508080600101915050612a0f565b50612aa9818360800151600081518110612a9c57fe5b6020026020010151613a96565b9050612aef85600001518660200151612ac184613b47565b8560400151612ad38a60400151613b47565b8760600151612ae58960000151613b47565b8960200151613be1565b612aff5760019350505050612b07565b600093505050505b92915050565b600081600001549050919050565b6000612b3c8473ffffffffffffffffffffffffffffffffffffffff16613d45565b612b495760019050612cfc565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c24578082015181840152602081019050612c09565b50505050905090810190601f168015612c515780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c7357600080fd5b505af1158015612c87573d6000803e3d6000fd5b505050506040513d6020811015612c9d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b612d0d81611961565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612d90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061480c602d913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f7472616e7366657220746f2061646472657373206973206e6f742076616c696481525060200191505060405180910390fd5b612e3c81613d90565b612e83600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613e4e565b612eca600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613e71565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612fd46001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613e8790919063ffffffff16565b90506000600760008481526020019081526020016000205490508181146130c1576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061304157fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061309957fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361311391906145f3565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6131ea816126fe565b1561325d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20616c72656164792065786973747300000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4164647265737320676976656e20697320696e76616c6964000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613399600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613e71565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561348d576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061356d565b600082905060005b600082146134b7578080600101915050600a82816134af57fe5b049150613495565b6060816040519080825280601f01601f1916602001820160405280156134ec5781602001600182028038833980820191505090505b50905060006001830390505b6000861461356557600a868161350a57fe5b0660300160f81b8282806001900393508151811061352457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161355d57fe5b0495506134f8565b819450505050505b919050565b60606135ae8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613ed1565b905092915050565b6135be614592565b60405180604001604052807f29f7dbb779249c13e2a701ab4593b7a022257ca1aadb9ea5e6d0144678f4788381526020017f24232a24683cc8cb76f3b8c204bbc85c62d6732e999879f2c59bfe2eb1831b388152508160000181905250604051806040016040528060405180604001604052807f013bb4a0f8f5dfbbd42f53ccc188d5895648385cdf1e44fc9399d3dcd1c6df4e81526020017f0c95b69682d36310fa7bea3846dbe84d6aeab58f32016292eca9cbf91d6a0c0d815250815260200160405180604001604052807f1fc11ed2997879e66b72a307db3584cda789dfa74df2f056ec97c9afeb8dd63f81526020017f01a2877e27cea7a6d82f0891935f791b8249028b10da5036941f41a10de491fd8152508152508160200181905250604051806040016040528060405180604001604052807f024cfe8e4a0aa86c027875f4c8d63e607d048520fa9c857294a78d9149935b8881526020017f19d695e46f2bb2d82d7b0c5608731643665eb0ac10e56f11e43455836f008a40815250815260200160405180604001604052807f163b4826af8249873f98cba83ef8e6b984c59492f146b2c9c6b47ec25df5498e81526020017f18b3675ffaabcad4826f7153d418c8ea3b1aa71e26423fb657f27b45eb2d7efb8152508152508160400181905250604051806040016040528060405180604001604052807f133c2f40754eb2c37ac6e8c0263c10987ad09d7faac8f04f8f16adc99efa322c81526020017f2faa7f49109eee6c99daf9fcb498c7c7b46fa9e60eb3d9b8b127b371234f93b4815250815260200160405180604001604052807f21f7678c2195a9a3d2e3ca4bef353888e278179ee7406c9612545ebd12ff1ba581526020017f24e8faf6837174bfdac2ba384820c93e8f6993607bfe0b4708fb0580e6f83ff4815250815250816060018190525060036040519080825280602002602001820160405280156138a557816020015b61389261461f565b81526020019060019003908161388a5790505b50816080018190525060405180604001604052807f06e7e43ce512f6d6e42ed6935d7aad885fe8a8911a9bd132951ae36a9d69ffd381526020017f01888a6ec55fb9445d0ed0ac8528ca9e3159c8cb00f56c66ccdb51a666015eba815250816080015160008151811061391457fe5b602002602001018190525060405180604001604052807f061f5f8b6008ac418741e6d6efdff972b957ff73bde725f96d6451750e54357c81526020017f068a9d2fcf7cd55417e0cde4cc11116152e0ae728bfebc557393dc89ef1bab78815250816080015160018151811061398557fe5b602002602001018190525060405180604001604052807f2e434abf456d6010e34fc7fda9b22ac16cc8cd0900507ef668f5c369309386eb81526020017f07771b20b8bb0e7b90ad806cdd896f5f3dfe36ece7c5fdaee2dc0690e476d5dc81525081608001516002815181106139f657fe5b602002602001018190525090565b613a0c6145d9565b613a14614639565b836000015181600060038110613a2657fe5b602002018181525050836020015181600160038110613a4157fe5b6020020181815250508281600260038110613a5857fe5b602002018181525050600060608360808460076107d05a03fa90508060008114613a8157613a83565bfe5b5080613a8e57600080fd5b505092915050565b613a9e6145d9565b613aa661465b565b836000015181600060048110613ab857fe5b602002018181525050836020015181600160048110613ad357fe5b602002018181525050826000015181600260048110613aee57fe5b602002018181525050826020015181600360048110613b0957fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114613b3257613b34565bfe5b5080613b3f57600080fd5b505092915050565b613b4f6145d9565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015613b8c575060008360200151145b15613bb0576040518060400160405280600081526020016000815250915050613bdc565b60405180604001604052808460000151815260200182856020015181613bd257fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613c2057816020015b613c0d61461f565b815260200190600190039081613c055790505b50905060606004604051908082528060200260200182016040528015613c6057816020015b613c4d61467d565b815260200190600190039081613c455790505b5090508a82600081518110613c7157fe5b60200260200101819052508882600181518110613c8a57fe5b60200260200101819052508682600281518110613ca357fe5b60200260200101819052508482600381518110613cbc57fe5b60200260200101819052508981600081518110613cd557fe5b60200260200101819052508781600181518110613cee57fe5b60200260200101819052508581600281518110613d0757fe5b60200260200101819052508381600381518110613d2057fe5b6020026020010181905250613d358282614193565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613d8757506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613e4b5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613e6660018260000154613e8790919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613ec983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506143e6565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613f2d5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613fb257888181518110613f5957fe5b602001015160f81c60f81b838380600101945081518110613f7657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f44565b600090505b875181101561402557878181518110613fcc57fe5b602001015160f81c60f81b838380600101945081518110613fe957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613fb7565b600090505b86518110156140985786818151811061403f57fe5b602001015160f81c60f81b83838060010194508151811061405c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061402a565b600090505b855181101561410b578581815181106140b257fe5b602001015160f81c60f81b8383806001019450815181106140cf57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061409d565b600090505b845181101561417e5784818151811061412557fe5b602001015160f81c60f81b83838060010194508151811061414257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614110565b82995050505050505050505095945050505050565b600081518351146141a357600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156141e25781602001602082028038833980820191505090505b50905060008090505b83811015614388578681815181106141ff57fe5b60200260200101516000015182600060068402018151811061421d57fe5b60200260200101818152505086818151811061423557fe5b60200260200101516020015182600160068402018151811061425357fe5b60200260200101818152505085818151811061426b57fe5b60200260200101516000015160016002811061428357fe5b602002015182600260068402018151811061429a57fe5b6020026020010181815250508581815181106142b257fe5b6020026020010151600001516000600281106142ca57fe5b60200201518260036006840201815181106142e157fe5b6020026020010181815250508581815181106142f957fe5b60200260200101516020015160016002811061431157fe5b602002015182600460068402018151811061432857fe5b60200260200101818152505085818151811061434057fe5b60200260200101516020015160006002811061435857fe5b602002015182600560068402018151811061436f57fe5b60200260200101818152505080806001019150506141eb565b506143916146a3565b6000602082602086026020860160086107d05a03fa905080600081146143b6576143b8565bfe5b50806143c357600080fd5b6000826000600181106143d257fe5b602002015114159550505050505092915050565b6000838311158290614493576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561445857808201518184015260208101905061443d565b50505050905090810190601f1680156144855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60405180606001604052806144b961461f565b81526020016144c661467d565b81526020016144d361461f565b81525090565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061455357805160ff1916838001178555614581565b82800160010185558215614581579182015b82811115614580578251825591602001919060010190614565565b5b50905061458e91906146c5565b5090565b6040518060a001604052806145a561461f565b81526020016145b261467d565b81526020016145bf61467d565b81526020016145cc61467d565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b81548183558181111561461a5781836000526020600020918201910161461991906146c5565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180604001604052806146906146ea565b815260200161469d6146ea565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6146e791905b808211156146e35760008160009055506001016146cb565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561473f57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055505056fe50726f7669646564204164647265737320646f6573206e6f74206d617463682074686520736f6c7574696f6e20616464726573734f776e6572206f6620546f6b656e20494420697320657175616c20746f2074686520746f206164647265737346726f6d206164647266657373206973204e4f54206f776e6572206f662074686520676976656e20746f6b656ea265627a7a723158209267d647b6e7f84c91fdff85d54a3bef4486a0e8d29b2f895ae50988af9d16a764736f6c6343000510003268747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80636352211e116100f9578063b2bdfa7b11610097578063d547cfb711610071578063d547cfb714610dc0578063e5ad88a714610e43578063e985e9c514610fce578063f2fde38b1461104a576101c4565b8063b2bdfa7b14610bca578063b88d4fde14610c14578063c87b56dd14610d19576101c4565b806395d89b41116100d357806395d89b4114610a475780639c0dce7214610aca578063a22cb46514610b30578063aa59c54614610b80576101c4565b80636352211e1461093b57806370a08231146109a95780637abcab6e14610a01576101c4565b806327dc297e1161016657806340c10f191161014057806340c10f19146106ac57806342842e0e146107125780634f6ccce714610780578063621e9ec0146107c2576101c4565b806327dc297e146104295780632f745c59146104ee57806338bbfa5014610550576101c4565b8063095ea7b3116101a2578063095ea7b31461031f57806318160ddd1461036d57806323b872dd1461038b578063272870ac146103f9576101c4565b806301ffc9a7146101c957806306fdde031461022e578063081812fc146102b1575b600080fd5b610214600480360360208110156101df57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061108e565b604051808215151515815260200191505060405180910390f35b6102366110f6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027657808201518184015260208101905061025b565b50505050905090810190601f1680156102a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102dd600480360360208110156102c757600080fd5b8101908080359060200190929190505050611198565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61036b6004803603604081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611250565b005b6103756113dd565b6040518082815260200191505060405180910390f35b6103f7600480360360608110156103a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113ea565b005b6104276004803603602081101561040f57600080fd5b8101908080351515906020019092919050505061140d565b005b6104ec6004803603604081101561043f57600080fd5b81019080803590602001909291908035906020019064010000000081111561046657600080fd5b82018360208201111561047857600080fd5b8035906020019184600183028401116401000000008311171561049a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611575565b005b61053a6004803603604081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b8565b6040518082815260200191505060405180910390f35b6106aa6004803603606081101561056657600080fd5b81019080803590602001909291908035906020019064010000000081111561058d57600080fd5b82018360208201111561059f57600080fd5b803590602001918460018302840111640100000000831117156105c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062457600080fd5b82018360208201111561063657600080fd5b8035906020019184600183028401116401000000008311171561065857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061162b565b005b6106f8600480360360408110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611630565b604051808215151515815260200191505060405180910390f35b61077e6004803603606081101561072857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611711565b005b6107ac6004803603602081101561079657600080fd5b8101908080359060200190929190505050611731565b6040518082815260200191505060405180910390f35b61092160048036036101408110156107d957600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b8282101561088e578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508152602001906001019061083a565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611765565b604051808215151515815260200191505060405180910390f35b6109676004803603602081101561095157600080fd5b8101908080359060200190929190505050611961565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109eb600480360360208110156109bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061199e565b6040518082815260200191505060405180910390f35b610a2d60048036036020811015610a1757600080fd5b81019080803590602001909291905050506119ee565b604051808215151515815260200191505060405180910390f35b610a4f611a0e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a8f578082015181840152602081019050610a74565b50505050905090810190601f168015610abc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b1660048036036040811015610ae057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ab0565b604051808215151515815260200191505060405180910390f35b610b7e60048036036040811015610b4657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611d27565b005b610b88611e61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610bd2611e8a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610d1760048036036080811015610c2a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c9157600080fd5b820183602082011115610ca357600080fd5b80359060200191846001830284011164010000000083111715610cc557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611eaf565b005b610d4560048036036020811015610d2f57600080fd5b8101908080359060200190929190505050611ed5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d85578082015181840152602081019050610d6a565b50505050905090810190601f168015610db25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610dc8611f9c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e08578082015181840152602081019050610ded565b50505050905090810190601f168015610e355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610fcc6004803603610180811015610e5a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610f39578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610ee5565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929050505061203e565b005b61103060048036036040811015610fe457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123e3565b604051808215151515815260200191505060405180910390f35b61108c6004803603602081101561106057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612477565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561118e5780601f106111635761010080835404028352916020019161118e565b820191906000526020600020905b81548152906001019060200180831161117157829003601f168201915b5050505050905090565b60006111a3826126fe565b611215576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061125b82611961565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806147e0602c913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611322575061132181336123e3565b5b61132b57600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6113f43382612770565b6113fd57600080fd5b611408838383612805565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f74206f776e6572206f662074686520636f6e74726163740000000000000081525060200191505060405180910390fd5b801515600060149054906101000a900460ff1615151415611558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f706175736564207661726961626c65206973206e6f742066616c73650000000081525060200191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6115b4828260006040519080825280601f01601f1916602001820160405280156115ae5781602001600182028038833980820191505090505b5061162b565b5050565b60006115c38361199e565b82106115ce57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061161857fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f74206f776e6572206f662074686520636f6e74726163740000000000000081525060200191505060405180910390fd5b6116fe8383612829565b6117078261284a565b6001905092915050565b61172c83838360405180602001604052806000815250611eaf565b505050565b600061173b6113dd565b821061174657600080fd5b6008828154811061175357fe5b90600052602060002001549050919050565b600061176f6144a6565b60405180604001604052808760006002811061178757fe5b602002015181526020018760016002811061179e57fe5b6020020151815250816000018190525060405180604001604052806040518060400160405280886000600281106117d157fe5b60200201516000600281106117e257fe5b60200201518152602001886000600281106117f957fe5b602002015160016002811061180a57fe5b6020020151815250815260200160405180604001604052808860016002811061182f57fe5b602002015160006002811061184057fe5b602002015181526020018860016002811061185757fe5b602002015160016002811061186857fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061189357fe5b60200201518152602001856001600281106118aa57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156118ec5781602001602082028038833980820191505090505b50905060008090505b60028110156119345784816002811061190a57fe5b602002015182828151811061191b57fe5b60200260200101818152505080806001019150506118f5565b506000611941828461299b565b141561195257600192505050611959565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006119e7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b0d565b9050919050565b60146020528060005260406000206000915054906101000a900460ff1681565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611aa65780601f10611a7b57610100808354040283529160200191611aa6565b820191906000526020600020905b815481529060010190602001808311611a8957829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f74206f776e6572206f662074686520636f6e74726163740000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660138381548110611b9857fe5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806147ac6034913960400191505060405180910390fd5b6000151560138381548110611c4757fe5b906000526020600020906002020160010160149054906101000a900460ff16151514611cdb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20686173206265656e206d696e746564000000000000000000000081525060200191505060405180910390fd5b600160138381548110611cea57fe5b906000526020600020906002020160010160146101000a81548160ff021916908315150217905550611d1c8383611630565b506001905092915050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d6057600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611eba8484846113ea565b611ec684848484612b1b565b611ecf57600080fd5b50505050565b6060611ee0826126fe565b611ee957600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f905780601f10611f6557610100808354040283529160200191611f90565b820191906000526020600020905b815481529060010190602001808311611f7357829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120345780601f1061200957610100808354040283529160200191612034565b820191906000526020600020905b81548152906001019060200180831161201757829003601f168201915b5050505050905090565b6000848484846040516020018085600260200280838360005b83811015612072578082015181840152602081019050612057565b505050509050018460026000925b818410156120c65782846020020151600260200280838360005b838110156120b557808201518184015260208101905061209a565b505050509050019260010192612080565b9250505083600260200280838360005b838110156120f15780820151818401526020810190506120d6565b5050505090500182600260200280838360005b8381101561211f578082015181840152602081019050612104565b50505050905001945050505050604051602081830303815290604052805190602001209050600015156014600083815260200190815260200160002060009054906101000a900460ff161515146121de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f74206120756e6971756520736f6c7574696f6e000000000000000000000081525060200191505060405180910390fd5b60006121ec86868686611765565b905080612261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f736f6c7574696f6e7320636f756c64206e6f742062652076657269666965640081525060200191505060405180910390fd5b6122696144d9565b60405180606001604052808981526020018a73ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555050505060016014600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507f48966b68a5367cf3ba62affaa7ec2584bb3b542923ce98698ad05ecfc927ca25888a604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612539576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f74206f776e6572206f662074686520636f6e74726163740000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156125dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f6e65774f776e6572206973206e6f742061207265616c2061646472657373000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ee35ffa528a36037ec23ed4b99d479118464d605ffa951ac0441db66273b332816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061277c83611961565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806127eb57508373ffffffffffffffffffffffffffffffffffffffff166127d384611198565b73ffffffffffffffffffffffffffffffffffffffff16145b806127fc57506127fb81856123e3565b5b91505092915050565b612810838383612d04565b61281a8382612f7c565b612824828261311a565b505050565b61283382826131e1565b61283d828261311a565b612846816133f9565b5050565b612853816126fe565b6128c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5468697320697320616e20696e76616c696420746f6b656e206964000000000081525060200191505060405180910390fd5b61297160118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561295e5780601f106129335761010080835404028352916020019161295e565b820191906000526020600020905b81548152906001019060200180831161294157829003601f168201915b505050505061296c83613445565b613572565b601260008381526020019081526020016000209080519060200190612997929190614512565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506129c9614592565b6129d16135b6565b90508060800151516001865101146129e857600080fd5b6129f06145d9565b6040518060400160405280600081526020016000815250905060008090505b8651811015612a865783878281518110612a2557fe5b602002602001015110612a3757600080fd5b612a7782612a7285608001516001850181518110612a5157fe5b60200260200101518a8581518110612a6557fe5b6020026020010151613a04565b613a96565b91508080600101915050612a0f565b50612aa9818360800151600081518110612a9c57fe5b6020026020010151613a96565b9050612aef85600001518660200151612ac184613b47565b8560400151612ad38a60400151613b47565b8760600151612ae58960000151613b47565b8960200151613be1565b612aff5760019350505050612b07565b600093505050505b92915050565b600081600001549050919050565b6000612b3c8473ffffffffffffffffffffffffffffffffffffffff16613d45565b612b495760019050612cfc565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c24578082015181840152602081019050612c09565b50505050905090810190601f168015612c515780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c7357600080fd5b505af1158015612c87573d6000803e3d6000fd5b505050506040513d6020811015612c9d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b612d0d81611961565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612d90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061480c602d913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f7472616e7366657220746f2061646472657373206973206e6f742076616c696481525060200191505060405180910390fd5b612e3c81613d90565b612e83600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613e4e565b612eca600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613e71565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612fd46001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613e8790919063ffffffff16565b90506000600760008481526020019081526020016000205490508181146130c1576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061304157fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061309957fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361311391906145f3565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6131ea816126fe565b1561325d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20616c72656164792065786973747300000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4164647265737320676976656e20697320696e76616c6964000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613399600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613e71565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561348d576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061356d565b600082905060005b600082146134b7578080600101915050600a82816134af57fe5b049150613495565b6060816040519080825280601f01601f1916602001820160405280156134ec5781602001600182028038833980820191505090505b50905060006001830390505b6000861461356557600a868161350a57fe5b0660300160f81b8282806001900393508151811061352457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161355d57fe5b0495506134f8565b819450505050505b919050565b60606135ae8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613ed1565b905092915050565b6135be614592565b60405180604001604052807f29f7dbb779249c13e2a701ab4593b7a022257ca1aadb9ea5e6d0144678f4788381526020017f24232a24683cc8cb76f3b8c204bbc85c62d6732e999879f2c59bfe2eb1831b388152508160000181905250604051806040016040528060405180604001604052807f013bb4a0f8f5dfbbd42f53ccc188d5895648385cdf1e44fc9399d3dcd1c6df4e81526020017f0c95b69682d36310fa7bea3846dbe84d6aeab58f32016292eca9cbf91d6a0c0d815250815260200160405180604001604052807f1fc11ed2997879e66b72a307db3584cda789dfa74df2f056ec97c9afeb8dd63f81526020017f01a2877e27cea7a6d82f0891935f791b8249028b10da5036941f41a10de491fd8152508152508160200181905250604051806040016040528060405180604001604052807f024cfe8e4a0aa86c027875f4c8d63e607d048520fa9c857294a78d9149935b8881526020017f19d695e46f2bb2d82d7b0c5608731643665eb0ac10e56f11e43455836f008a40815250815260200160405180604001604052807f163b4826af8249873f98cba83ef8e6b984c59492f146b2c9c6b47ec25df5498e81526020017f18b3675ffaabcad4826f7153d418c8ea3b1aa71e26423fb657f27b45eb2d7efb8152508152508160400181905250604051806040016040528060405180604001604052807f133c2f40754eb2c37ac6e8c0263c10987ad09d7faac8f04f8f16adc99efa322c81526020017f2faa7f49109eee6c99daf9fcb498c7c7b46fa9e60eb3d9b8b127b371234f93b4815250815260200160405180604001604052807f21f7678c2195a9a3d2e3ca4bef353888e278179ee7406c9612545ebd12ff1ba581526020017f24e8faf6837174bfdac2ba384820c93e8f6993607bfe0b4708fb0580e6f83ff4815250815250816060018190525060036040519080825280602002602001820160405280156138a557816020015b61389261461f565b81526020019060019003908161388a5790505b50816080018190525060405180604001604052807f06e7e43ce512f6d6e42ed6935d7aad885fe8a8911a9bd132951ae36a9d69ffd381526020017f01888a6ec55fb9445d0ed0ac8528ca9e3159c8cb00f56c66ccdb51a666015eba815250816080015160008151811061391457fe5b602002602001018190525060405180604001604052807f061f5f8b6008ac418741e6d6efdff972b957ff73bde725f96d6451750e54357c81526020017f068a9d2fcf7cd55417e0cde4cc11116152e0ae728bfebc557393dc89ef1bab78815250816080015160018151811061398557fe5b602002602001018190525060405180604001604052807f2e434abf456d6010e34fc7fda9b22ac16cc8cd0900507ef668f5c369309386eb81526020017f07771b20b8bb0e7b90ad806cdd896f5f3dfe36ece7c5fdaee2dc0690e476d5dc81525081608001516002815181106139f657fe5b602002602001018190525090565b613a0c6145d9565b613a14614639565b836000015181600060038110613a2657fe5b602002018181525050836020015181600160038110613a4157fe5b6020020181815250508281600260038110613a5857fe5b602002018181525050600060608360808460076107d05a03fa90508060008114613a8157613a83565bfe5b5080613a8e57600080fd5b505092915050565b613a9e6145d9565b613aa661465b565b836000015181600060048110613ab857fe5b602002018181525050836020015181600160048110613ad357fe5b602002018181525050826000015181600260048110613aee57fe5b602002018181525050826020015181600360048110613b0957fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114613b3257613b34565bfe5b5080613b3f57600080fd5b505092915050565b613b4f6145d9565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015613b8c575060008360200151145b15613bb0576040518060400160405280600081526020016000815250915050613bdc565b60405180604001604052808460000151815260200182856020015181613bd257fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613c2057816020015b613c0d61461f565b815260200190600190039081613c055790505b50905060606004604051908082528060200260200182016040528015613c6057816020015b613c4d61467d565b815260200190600190039081613c455790505b5090508a82600081518110613c7157fe5b60200260200101819052508882600181518110613c8a57fe5b60200260200101819052508682600281518110613ca357fe5b60200260200101819052508482600381518110613cbc57fe5b60200260200101819052508981600081518110613cd557fe5b60200260200101819052508781600181518110613cee57fe5b60200260200101819052508581600281518110613d0757fe5b60200260200101819052508381600381518110613d2057fe5b6020026020010181905250613d358282614193565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613d8757506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613e4b5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613e6660018260000154613e8790919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613ec983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506143e6565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613f2d5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613fb257888181518110613f5957fe5b602001015160f81c60f81b838380600101945081518110613f7657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f44565b600090505b875181101561402557878181518110613fcc57fe5b602001015160f81c60f81b838380600101945081518110613fe957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613fb7565b600090505b86518110156140985786818151811061403f57fe5b602001015160f81c60f81b83838060010194508151811061405c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061402a565b600090505b855181101561410b578581815181106140b257fe5b602001015160f81c60f81b8383806001019450815181106140cf57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061409d565b600090505b845181101561417e5784818151811061412557fe5b602001015160f81c60f81b83838060010194508151811061414257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614110565b82995050505050505050505095945050505050565b600081518351146141a357600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156141e25781602001602082028038833980820191505090505b50905060008090505b83811015614388578681815181106141ff57fe5b60200260200101516000015182600060068402018151811061421d57fe5b60200260200101818152505086818151811061423557fe5b60200260200101516020015182600160068402018151811061425357fe5b60200260200101818152505085818151811061426b57fe5b60200260200101516000015160016002811061428357fe5b602002015182600260068402018151811061429a57fe5b6020026020010181815250508581815181106142b257fe5b6020026020010151600001516000600281106142ca57fe5b60200201518260036006840201815181106142e157fe5b6020026020010181815250508581815181106142f957fe5b60200260200101516020015160016002811061431157fe5b602002015182600460068402018151811061432857fe5b60200260200101818152505085818151811061434057fe5b60200260200101516020015160006002811061435857fe5b602002015182600560068402018151811061436f57fe5b60200260200101818152505080806001019150506141eb565b506143916146a3565b6000602082602086026020860160086107d05a03fa905080600081146143b6576143b8565bfe5b50806143c357600080fd5b6000826000600181106143d257fe5b602002015114159550505050505092915050565b6000838311158290614493576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561445857808201518184015260208101905061443d565b50505050905090810190601f1680156144855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60405180606001604052806144b961461f565b81526020016144c661467d565b81526020016144d361461f565b81525090565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061455357805160ff1916838001178555614581565b82800160010185558215614581579182015b82811115614580578251825591602001919060010190614565565b5b50905061458e91906146c5565b5090565b6040518060a001604052806145a561461f565b81526020016145b261467d565b81526020016145bf61467d565b81526020016145cc61467d565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b81548183558181111561461a5781836000526020600020918201910161461991906146c5565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180604001604052806146906146ea565b815260200161469d6146ea565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6146e791905b808211156146e35760008160009055506001016146cb565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561473f57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055505056fe50726f7669646564204164647265737320646f6573206e6f74206d617463682074686520736f6c7574696f6e20616464726573734f776e6572206f6620546f6b656e20494420697320657175616c20746f2074686520746f206164647265737346726f6d206164647266657373206973204e4f54206f776e6572206f662074686520676976656e20746f6b656ea265627a7a723158209267d647b6e7f84c91fdff85d54a3bef4486a0e8d29b2f895ae50988af9d16a764736f6c63430005100032",
  "sourceMap": "376:2112:7:-;;;442:89;8:9:-1;5:2;;;30:1;27;20:12;5:2;442:89:7;20272:288:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:10;666:6;;:19;;;;;;;;;;;;;;;;;;700:37;726:1;730:6;;;;;;;;;;;700:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:5;2243:7;;:15;;;;;;;;;;;;;;;;;;3152:40;2749:10;3171:20;;3152:18;;;:40;;:::i;:::-;5305;5175:10;5324:20;;5305:18;;;:40;;:::i;:::-;12972:51;12578:10;12991:31;;12972:18;;;:51;;:::i;:::-;20421:4;20413:5;:12;;;;;;;;;;;;:::i;:::-;;20445:6;20435:7;:16;;;;;;;;;;;;:::i;:::-;;20477:12;20461:13;:28;;;;;;;;;;;;:::i;:::-;;20498:55;20083:10;20523:29;;20498:24;;;;;:55;;:::i;:::-;20272:288;;;473:14:7;493:30;;;;;;;;502:1;493:30;;;;513:1;493:30;;;;;;517:5;493:30;;;;;473:51;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;473:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:2112;;3502:158:4;3592:10;3577:25;;:11;:25;;;;;3569:34;;;;;;3649:4;3613:20;:33;3634:11;3613:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3502:158;:::o;376:2112:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "376:2112:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;376:2112:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3290:133:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3290:133:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20648:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20648:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6571:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6571:226:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5884:681;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5884:681:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13737:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7774:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7774:180:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1978:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1978:149:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;14808:127:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14808:127:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14808:127:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14808:127:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14808:127:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14808:127:6;;;;;;;;;;;;;;;:::i;:::-;;13403:182:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13403:182:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14941:178:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14941:178:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14941:178:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14941:178:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14941:178:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14941:178:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14941:178:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14941:178:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14941:178:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14941:178:6;;;;;;;;;;;;;;;:::i;:::-;;22980:300:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22980:300:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7960:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7960:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14168:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14168:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24085:658:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;24085:658:8;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24085:658:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24085:658:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24085:658:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24085:658:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5649:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5649:162:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5358:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5358:285:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;865:46:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;865:46:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20737:87:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20737:87:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:409:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2076:409:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7089:213:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7089:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1595:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;438:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8098:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8098:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8098:211:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8098:211:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8098:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8098:211:4;;;;;;;;;;;;;;;:::i;:::-;;20935:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20935:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20935:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20830:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20830:99:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:607:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1242:607:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1242:607:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1242:607:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1242:607:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1242:607:7;;;;;;;;;;;;;;:::i;:::-;;7623:145:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7623:145:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1185:403;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1185:403:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3290:133;3360:4;3383:20;:33;3404:11;3383:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3376:40;;3290:133;;;:::o;20648:83::-;20687:13;20719:5;20712:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20648:83;:::o;6571:226::-;6630:7;6708:16;6716:7;6708;:16::i;:::-;6700:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6766:15;:24;6782:7;6766:24;;;;;;;;;;;;;;;;;;;;;6759:31;;6571:226;;;:::o;5884:681::-;6042:22;6067:16;6075:7;6067;:16::i;:::-;6042:41;;6108:14;6102:20;;:2;:20;;;;6094:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6309:14;6295:28;;:10;:28;;;:76;;;;6327:44;6344:14;6360:10;6327:16;:44::i;:::-;6295:76;6287:85;;;;;;6462:2;6435:15;:24;6451:7;6435:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6549:7;6545:2;6525:32;;6534:10;6525:32;;;;;;;;;;;;5884:681;;;:::o;13737:94::-;13781:7;13807:10;:17;;;;13800:24;;13737:94;:::o;7774:180::-;7864:39;7883:10;7895:7;7864:18;:39::i;:::-;7856:48;;;;;;7915:32;7929:4;7935:2;7939:7;7915:13;:32::i;:::-;7774:180;;;:::o;1978:149::-;979:6:7;;;;;;;;;;;965:20;;:10;:20;;;957:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:8:4;2043:19;;:7;;;;;;;;;;;:19;;;;2035:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2112:8;2102:7;;:18;;;;;;;;;;;;;;;;;;1978:149;:::o;14808:127:6:-;14888:40;14899:5;14906:7;14925:1;14915:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14915:12:6;;;;14888:10;:40::i;:::-;14808:127;;:::o;13403:182:4:-;13483:7;13518:16;13528:5;13518:9;:16::i;:::-;13510:5;:24;13502:33;;;;;;13552:12;:19;13565:5;13552:19;;;;;;;;;;;;;;;13572:5;13552:26;;;;;;;;;;;;;;;;13545:33;;13403:182;;;;:::o;14941:178:6:-;;;;:::o;22980:300:4:-;23050:4;979:6:7;;;;;;;;;;;965:20;;:10;:20;;;957:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23130:24:4;23142:2;23146:7;23130:11;:24::i;:::-;23165:20;23177:7;23165:11;:20::i;:::-;23269:4;23262:11;;22980:300;;;;:::o;7960:132::-;8046:39;8063:4;8069:2;8073:7;8046:39;;;;;;;;;;;;:16;:39::i;:::-;7960:132;;;:::o;14168:148::-;14226:7;14261:13;:11;:13::i;:::-;14253:5;:21;14245:30;;;;;;14292:10;14303:5;14292:17;;;;;;;;;;;;;;;;14285:24;;14168:148;;;:::o;24085:658:8:-;24249:6;24267:18;;:::i;:::-;24305:27;;;;;;;;24321:1;24323;24321:4;;;;;;;;;;;24305:27;;;;24327:1;24329;24327:4;;;;;;;;;;;24305:27;;;24295:5;:7;;:37;;;;24352:55;;;;;;;;;;;;;;;;24369:1;24371;24369:4;;;;;;;;;;;24374:1;24369:7;;;;;;;;;;;24352:55;;;;24378:1;24380;24378:4;;;;;;;;;;;24383:1;24378:7;;;;;;;;;;;24352:55;;;;;;;;;;;;;;;24389:1;24391;24389:4;;;;;;;;;;;24394:1;24389:7;;;;;;;;;;;24352:55;;;;24398:1;24400;24398:4;;;;;;;;;;;24403:1;24398:7;;;;;;;;;;;24352:55;;;;;;24342:5;:7;;:65;;;;24427:27;;;;;;;;24443:1;24445;24443:4;;;;;;;;;;;24427:27;;;;24449:1;24451;24449:4;;;;;;;;;;;24427:27;;;24417:5;:7;;:37;;;;24464:25;24503:1;24492:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24492:13:8;;;;24464:41;;24528:6;24537:1;24528:10;;24524:88;24544:12;24540:1;:16;24524:88;;;24593:5;24599:1;24593:8;;;;;;;;;;;24576:11;24588:1;24576:14;;;;;;;;;;;;;:25;;;;;24558:3;;;;;;;24524:88;;;;24655:1;24625:26;24632:11;24645:5;24625:6;:26::i;:::-;:31;24621:116;;;24679:4;24672:11;;;;;;24621:116;24721:5;24714:12;;;;24085:658;;;;;;;:::o;5649:162:4:-;5704:7;5784:11;:20;5796:7;5784:20;;;;;;;;;;;;;;;;;;;;;5777:27;;5649:162;;;:::o;5358:285::-;5413:7;5602:34;:17;:24;5620:5;5602:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5595:41;;5358:285;;;:::o;865:46:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;20737:87:4:-;20778:13;20810:7;20803:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20737:87;:::o;2076:409:7:-;2158:4;979:6;;;;;;;;;;;965:20;;:10;:20;;;957:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2218:8;2182:44;;:14;2197:7;2182:23;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:44;;;2174:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2336:5;2301:40;;:14;2316:7;2301:23;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:40;;;2293:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2412:4;2378:14;2393:7;2378:23;;;;;;;;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;2427:29;2438:8;2448:7;2427:10;:29::i;:::-;;2474:4;2467:11;;2076:409;;;;:::o;7089:213:4:-;7174:10;7168:16;;:2;:16;;;;7160:25;;;;;;7232:8;7195:18;:30;7214:10;7195:30;;;;;;;;;;;;;;;:34;7226:2;7195:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7282:2;7255:40;;7270:10;7255:40;;;7286:8;7255:40;;;;;;;;;;;;;;;;;;;;;;7089:213;;:::o;1595:92::-;1648:7;1674:6;;;;;;;;;;;1667:13;;1595:92;:::o;438:21::-;;;;;;;;;;;;;:::o;8098:211::-;8204:31;8217:4;8223:2;8227:7;8204:12;:31::i;:::-;8253:48;8276:4;8282:2;8286:7;8295:5;8253:22;:48::i;:::-;8245:57;;;;;;8098:211;;;;:::o;20935:151::-;20993:13;21026:16;21034:7;21026;:16::i;:::-;21018:25;;;;;;21060:10;:19;21071:7;21060:19;;;;;;;;;;;21053:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20935:151;;;:::o;20830:99::-;20878:13;20909;20902:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20830:99;:::o;1242:607:7:-;1398:11;1439:1;1442;1445;1448:5;1422:32;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1422:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1422:32:7;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1422:32:7;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1422:32:7;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1422:32:7;;;1412:43;;;;;;1398:57;;1496:5;1473:28;;:14;:19;1488:3;1473:19;;;;;;;;;;;;;;;;;;;;;:28;;;1465:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:17;1557:24;1566:1;1569;1572;1575:5;1557:8;:24::i;:::-;1537:44;;1599:12;1591:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1658:24;;:::i;:::-;1685:33;;;;;;;;1694:6;1685:33;;;;1702:8;1685:33;;;;;;1712:5;1685:33;;;;;1658:60;;1729:14;1749:8;1729:29;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1729:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:4;1769:14;:19;1784:3;1769:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1811:31;1825:6;1833:8;1811:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:607;;;;;;;;;:::o;7623:145:4:-;7703:4;7726:18;:25;7745:5;7726:25;;;;;;;;;;;;;;;:35;7752:8;7726:35;;;;;;;;;;;;;;;;;;;;;;;;;7719:42;;7623:145;;;;:::o;1185:403::-;979:6:7;;;;;;;;;;;965:20;;:10;:20;;;957:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:1:4;1411:22;;:8;:22;;;;1403:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:16;1497:6;;;;;;;;;;;1478:25;;1523:8;1514:6;;:17;;;;;;;;;;;;;;;;;;1546:35;1564:8;1574:6;;;;;;;;;;;1546:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:1:7;1185:403:4;:::o;8503:152::-;8560:4;8576:13;8592:11;:20;8604:7;8592:20;;;;;;;;;;;;;;;;;;;;;8576:36;;8646:1;8629:19;;:5;:19;;;;8622:26;;;8503:152;;;:::o;9015:246::-;9100:4;9116:13;9132:16;9140:7;9132;:16::i;:::-;9116:32;;9177:5;9166:16;;:7;:16;;;:51;;;;9210:7;9186:31;;:20;9198:7;9186:11;:20::i;:::-;:31;;;9166:51;:87;;;;9221:32;9238:5;9245:7;9221:16;:32::i;:::-;9166:87;9158:96;;;9015:246;;;;:::o;14691:239::-;14776:38;14796:4;14802:2;14806:7;14776:19;:38::i;:::-;14825:47;14858:4;14864:7;14825:32;:47::i;:::-;14883:40;14911:2;14915:7;14883:27;:40::i;:::-;14691:239;;;:::o;15185:196::-;15248:24;15260:2;15264:7;15248:11;:24::i;:::-;15283:40;15311:2;15315:7;15283:27;:40::i;:::-;15334;15366:7;15334:31;:40::i;:::-;15185:196;;:::o;21565:249::-;21684:16;21692:7;21684;:16::i;:::-;21676:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21764:43;21774:13;21764:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21789:17;21798:7;21789:8;:17::i;:::-;21764:9;:43::i;:::-;21742:10;:19;21753:7;21742:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21565:249;:::o;23159:921:8:-;23239:4;23255:26;23284:77;23255:106;;23371:22;;:::i;:::-;23396:14;:12;:14::i;:::-;23371:39;;23448:2;:12;;;:19;23443:1;23428:5;:12;:16;:39;23420:48;;;;;;23525:27;;:::i;:::-;23555:21;;;;;;;;23571:1;23555:21;;;;23574:1;23555:21;;;23525:51;;23591:6;23600:1;23591:10;;23586:197;23607:5;:12;23603:1;:16;23586:197;;;23659:18;23648:5;23654:1;23648:8;;;;;;;;;;;;;;:29;23640:38;;;;;;23699:73;23716:4;23722:49;23741:2;:12;;;23758:1;23754;:5;23741:19;;;;;;;;;;;;;;23762:5;23768:1;23762:8;;;;;;;;;;;;;;23722:18;:49::i;:::-;23699:16;:73::i;:::-;23692:80;;23621:3;;;;;;;23586:197;;;;23799:39;23816:4;23822:2;:12;;;23835:1;23822:15;;;;;;;;;;;;;;23799:16;:39::i;:::-;23792:46;;23852:193;23887:5;:7;;;23896:5;:7;;;23918:20;23933:4;23918:14;:20::i;:::-;23940:2;:8;;;23963:23;23978:5;:7;;;23963:14;:23::i;:::-;23988:2;:8;;;24011:24;24026:2;:8;;;24011:14;:24::i;:::-;24037:2;:7;;;23852:20;:193::i;:::-;23848:207;;24054:1;24047:8;;;;;;;23848:207;24072:1;24065:8;;;;;23159:921;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11423:347:4:-;11544:4;11569:15;:2;:13;;;:15::i;:::-;11564:58;;11607:4;11600:11;;;;11564:58;11632:13;11664:2;11648:36;;;11685:10;11697:4;11703:7;11712:5;11648:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11648:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11648:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11648:70:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11648:70:4;;;;;;;;;;;;;;;;11632:86;;4308:10;11746:16;;11736:26;;;:6;:26;;;;11728:35;;;11423:347;;;;;;;:::o;10154:741::-;10326:16;10334:7;10326;:16::i;:::-;10318:24;;:4;:24;;;10310:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10493:1;10479:16;;:2;:16;;;;10471:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10583:23;10598:7;10583:14;:23::i;:::-;10694:35;:17;:23;10712:4;10694:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10739:33;:17;:21;10757:2;10739:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10805:2;10782:11;:20;10794:7;10782:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10879:7;10875:2;10860:27;;10869:4;10860:27;;;;;;;;;;;;10154:741;;;:::o;17157:1128::-;17419:22;17444:32;17474:1;17444:12;:18;17457:4;17444:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17419:57;;17486:18;17507:17;:26;17525:7;17507:26;;;;;;;;;;;;17486:47;;17651:14;17637:10;:28;17633:323;;17681:19;17703:12;:18;17716:4;17703:18;;;;;;;;;;;;;;;17722:14;17703:34;;;;;;;;;;;;;;;;17681:56;;17785:11;17752:12;:18;17765:4;17752:18;;;;;;;;;;;;;;;17771:10;17752:30;;;;;;;;;;;;;;;:44;;;;17901:10;17868:17;:30;17886:11;17868:30;;;;;;;;;;;:43;;;;17633:323;;18042:12;:18;18055:4;18042:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17157:1128;;;;:::o;16003:183::-;16116:12;:16;16129:2;16116:16;;;;;;;;;;;;;;;:23;;;;16087:17;:26;16105:7;16087:26;;;;;;;;;;;:52;;;;16149:12;:16;16162:2;16149:16;;;;;;;;;;;;;;;16171:7;16149:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16149:30:4;;;;;;;;;;;;;;;;;;;;;;16003:183;;:::o;9418:537::-;9574:16;9582:7;9574;:16::i;:::-;9573:17;9565:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9648:1;9634:16;;:2;:16;;;;9626:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9793:2;9770:11;:20;9782:7;9770:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9829:33;:17;:21;9847:2;9829:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9940:7;9936:2;9915:33;;9932:1;9915:33;;;;;;;;;;;;9418:537;;:::o;16381:161::-;16484:10;:17;;;;16457:15;:24;16473:7;16457:24;;;;;;;;;;;:44;;;;16511:10;16527:7;16511:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16511:24:4;;;;;;;;;;;;;;;;;;;;;;16381:161;:::o;43295:465:6:-;43345:27;43394:1;43388:2;:7;43384:48;;;43411:10;;;;;;;;;;;;;;;;;;;;;43384:48;43441:6;43450:2;43441:11;;43462:8;43480:66;43492:1;43487;:6;43480:66;;43509:5;;;;;;;43533:2;43528:7;;;;;;;;;43480:66;;;43555:17;43585:3;43575:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43575:14:6;;;;43555:34;;43599:6;43614:1;43608:3;:7;43599:16;;43625:100;43638:1;43632:2;:7;43625:100;;43688:2;43683;:7;;;;;;43678:2;:12;43667:25;;43655:4;43660:3;;;;;;;43655:9;;;;;;;;;;;:37;;;;;;;;;;;43712:2;43706:8;;;;;;;;;43625:100;;;43748:4;43734:19;;;;;;43295:465;;;;:::o;39736:166::-;39814:33;39866:29;39876:2;39880;39866:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39859:36;;39736:166;;;;:::o;21203:1951:8:-;21250:22;;:::i;:::-;21295:169;;;;;;;;21319:66;21295:169;;;;21396:66;21295:169;;;21284:2;:8;;:180;;;;21484:327;;;;;;;;;;;;;;;;21509:66;21484:327;;;;21586:66;21484:327;;;;;;;;;;;;;;;21665:66;21484:327;;;;21742:66;21484:327;;;;;;21474:2;:7;;:337;;;;21832:327;;;;;;;;;;;;;;;;21857:66;21832:327;;;;21934:66;21832:327;;;;;;;;;;;;;;;22013:66;21832:327;;;;22090:66;21832:327;;;;;;21821:2;:8;;:338;;;;22180:327;;;;;;;;;;;;;;;;22205:66;22180:327;;;;22282:66;22180:327;;;;;;;;;;;;;;;22361:66;22180:327;;;;22438:66;22180:327;;;;;;22169:2;:8;;:338;;;;22554:1;22532:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22517:2;:12;;:39;;;;22584:169;;;;;;;;22608:66;22584:169;;;;22685:66;22584:169;;;22566:2;:12;;;22579:1;22566:15;;;;;;;;;;;;;:187;;;;22781:169;;;;;;;;22805:66;22781:169;;;;22882:66;22781:169;;;22763:2;:12;;;22776:1;22763:15;;;;;;;;;;;;;:187;;;;22978:169;;;;;;;;23002:66;22978:169;;;;23079:66;22978:169;;;22960:2;:12;;;22973:1;22960:15;;;;;;;;;;;;;:187;;;;21203:1951;:::o;17704:454::-;17773:16;;:::i;:::-;17801:20;;:::i;:::-;17842:1;:3;;;17831:5;17837:1;17831:8;;;;;;;;;;:14;;;;;17866:1;:3;;;17855:5;17861:1;17855:8;;;;;;;;;;:14;;;;;17890:1;17879:5;17885:1;17879:8;;;;;;;;;;:12;;;;;17901;18005:4;18002:1;17996:4;17989:5;17986:1;17979:4;17972:5;17968:16;17957:53;17946:64;;18087:7;18100:1;18095:20;;;;18080:35;;18095:20;18104:9;18080:35;;18143:7;18134:17;;;;;;17704:454;;;;;;:::o;16773:493::-;16852:16;;:::i;:::-;16880:20;;:::i;:::-;16921:2;:4;;;16910:5;16916:1;16910:8;;;;;;;;;;:15;;;;;16946:2;:4;;;16935:5;16941:1;16935:8;;;;;;;;;;:15;;;;;16971:2;:4;;;16960:5;16966:1;16960:8;;;;;;;;;;:15;;;;;16996:2;:4;;;16985:5;16991:1;16985:8;;;;;;;;;;:15;;;;;17010:12;17114:4;17111:1;17105:4;17098:5;17095:1;17088:4;17081:5;17077:16;17066:53;17055:64;;17196:7;17209:1;17204:20;;;;17189:35;;17204:20;17213:9;17189:35;;17251:7;17243:16;;;;;;16773:493;;;;;;:::o;16382:340::-;16439:14;;:::i;:::-;16517:6;16526:77;16517:86;;16624:1;16617;:3;;;:8;:20;;;;;16636:1;16629;:3;;;:8;16617:20;16613:58;;;16658:13;;;;;;;;16666:1;16658:13;;;;16669:1;16658:13;;;16651:20;;;;;16613:58;16688:27;;;;;;;;16696:1;:3;;;16688:27;;;;16712:1;16706;:3;;;:7;;;;;;16701:1;:13;16688:27;;;16681:34;;;16382:340;;;;:::o;20300:552::-;20551:4;20567:19;20603:1;20589:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20567:38;;20615:19;20651:1;20637:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20615:38;;20671:2;20663;20666:1;20663:5;;;;;;;;;;;;;:10;;;;20691:2;20683;20686:1;20683:5;;;;;;;;;;;;;:10;;;;20711:2;20703;20706:1;20703:5;;;;;;;;;;;;;:10;;;;20731:2;20723;20726:1;20723:5;;;;;;;;;;;;;:10;;;;20751:2;20743;20746:1;20743:5;;;;;;;;;;;;;:10;;;;20771:2;20763;20766:1;20763:5;;;;;;;;;;;;;:10;;;;20791:2;20783;20786:1;20783:5;;;;;;;;;;;;;:10;;;;20811:2;20803;20806:1;20803:5;;;;;;;;;;;;;:10;;;;20830:15;20838:2;20842;20830:7;:15::i;:::-;20823:22;;;;20300:552;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11851:171:4:-;11950:1;11914:38;;:15;:24;11930:7;11914:24;;;;;;;;;;;;;;;;;;;;;:38;;;11910:106;;12003:1;11968:15;:24;11984:7;11968:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11910:106;11851:171;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40306:1020:6:-;40438:33;40483:16;40508:2;40483:28;;40521:16;40546:2;40521:28;;40559:16;40584:2;40559:28;;40597:16;40622:2;40597:28;;40635:16;40660:2;40635:28;;40673:19;40758:3;:10;40745:3;:10;40732:3;:10;40719:3;:10;40706:3;:10;:23;:36;:49;:62;40695:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40695:74:6;;;;40673:96;;40779:19;40807:5;40779:34;;40823:6;40832:1;40823:10;;40843:6;40852:1;40843:10;;40872:1;40868:5;;40863:78;40879:3;:10;40875:1;:14;40863:78;;;40924:3;40928:1;40924:6;;;;;;;;;;;;;;;;40910;40917:3;;;;;;40910:11;;;;;;;;;;;:20;;;;;;;;;;;40891:3;;;;;;;40863:78;;;40959:1;40955:5;;40950:78;40966:3;:10;40962:1;:14;40950:78;;;41011:3;41015:1;41011:6;;;;;;;;;;;;;;;;40997;41004:3;;;;;;40997:11;;;;;;;;;;;:20;;;;;;;;;;;40978:3;;;;;;;40950:78;;;41046:1;41042:5;;41037:78;41053:3;:10;41049:1;:14;41037:78;;;41098:3;41102:1;41098:6;;;;;;;;;;;;;;;;41084;41091:3;;;;;;41084:11;;;;;;;;;;;:20;;;;;;;;;;;41065:3;;;;;;;41037:78;;;41133:1;41129:5;;41124:78;41140:3;:10;41136:1;:14;41124:78;;;41185:3;41189:1;41185:6;;;;;;;;;;;;;;;;41171;41178:3;;;;;;41171:11;;;;;;;;;;;:20;;;;;;;;;;;41152:3;;;;;;;41124:78;;;41220:1;41216:5;;41211:78;41227:3;:10;41223:1;:14;41211:78;;;41272:3;41276:1;41272:6;;;;;;;;;;;;;;;;41258;41265:3;;;;;;41258:11;;;;;;;;;;;:20;;;;;;;;;;;41239:3;;;;;;;41211:78;;;41312:6;41298:21;;;;;;;;;;;40306:1020;;;;;;;:::o;18369:923:8:-;18451:4;18488:2;:9;18475:2;:9;:22;18467:31;;;;;;18508:13;18524:2;:9;18508:25;;18543:14;18571:1;18560:8;:12;18543:29;;18582:19;18615:9;18604:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18604:21:8;;;;18582:43;;18640:6;18649:1;18640:10;;18635:307;18656:8;18652:1;:12;18635:307;;;18712:2;18715:1;18712:5;;;;;;;;;;;;;;:7;;;18693:5;18707:1;18703;18699;:5;:9;18693:16;;;;;;;;;;;;;:26;;;;;18752:2;18755:1;18752:5;;;;;;;;;;;;;;:7;;;18733:5;18747:1;18743;18739;:5;:9;18733:16;;;;;;;;;;;;;:26;;;;;18792:2;18795:1;18792:5;;;;;;;;;;;;;;:7;;;18800:1;18792:10;;;;;;;;;;;18773:5;18787:1;18783;18779;:5;:9;18773:16;;;;;;;;;;;;;:29;;;;;18835:2;18838:1;18835:5;;;;;;;;;;;;;;:7;;;18843:1;18835:10;;;;;;;;;;;18816:5;18830:1;18826;18822;:5;:9;18816:16;;;;;;;;;;;;;:29;;;;;18878:2;18881:1;18878:5;;;;;;;;;;;;;;:7;;;18886:1;18878:10;;;;;;;;;;;18859:5;18873:1;18869;18865;:5;:9;18859:16;;;;;;;;;;;;;:29;;;;;18921:2;18924:1;18921:5;;;;;;;;;;;;;;:7;;;18929:1;18921:10;;;;;;;;;;;18902:5;18916:1;18912;18908;:5;:9;18902:16;;;;;;;;;;;;;:29;;;;;18666:3;;;;;;;18635:307;;;;18951:18;;:::i;:::-;18979:12;19112:4;19107:3;19100:4;19089:9;19085:20;19078:4;19071:5;19067:16;19064:1;19057:4;19050:5;19046:16;19035:82;19024:93;;19194:7;19207:1;19202:20;;;;19187:35;;19202:20;19211:9;19187:35;;19249:7;19241:16;;;;;;19284:1;19274:3;19278:1;19274:6;;;;;;;;;;;:11;;19267:18;;;;;;;18369:923;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;376:2112:7:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;376:2112:7;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;376:2112:7;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;376:2112:7;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;376:2112:7;;;;:::o;3502:158:4:-;3592:10;3577:25;;:11;:25;;;;;3569:34;;;;;;3649:4;3613:20;:33;3634:11;3613:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3502:158;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./Oraclize.sol\";\nimport \"./ERC721Mintable.sol\";\nimport \"./Verifier.sol\";\n\n\n//// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n//contract SquareVerifier is Verifier {\n//\n//}\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is Verifier, CustomERC721Token {\n\n    constructor() public {\n        solutionStruct.push(Solution(0, address(0), false));\n    }\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n          uint256 _index;\n          address _address;\n           bool _isMint;\n     }\n\n    // TODO define an array of the above struct\n    Solution[] solutionStruct;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => bool) public uniqueSolution;\n\n//Modifier\n  modifier onlyOwner(){\n        require(msg.sender == _owner,\"Not owner of the contract\");\n        _;\n    }\n\n\n    // TODO Create an event to emit when a solution is added\n    event addedSolution(uint256 index, address _address);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolutionArray(address _address, uint256 _index, uint[2] memory a, uint[2][2] memory b, uint[2] memory c, uint[2] memory input) public {\n        bytes32 key = keccak256(abi.encodePacked(a, b, c, input));\n        require(uniqueSolution[key] == false, \"Not a unique solution\");\n        bool txVerifyTrue = verifyTx(a, b, c, input);\n        require(txVerifyTrue, \"solutions could not be verified\");\n         Solution memory solution = Solution(_index, _address, false);\n         solutionStruct.push(solution);\n         uniqueSolution[key] = true;\n         emit addedSolution(_index, _address);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSupply\n    function mintTheNft( address _address, uint256 tokenId ) public onlyOwner returns(bool) {\n        require(solutionStruct[tokenId]._address == _address, \"Provided Address does not match the solution address\");\n        require(solutionStruct[tokenId]._isMint == false, \"Token has been minted\");\n         solutionStruct[tokenId]._isMint = true;\n         super.mint(_address, tokenId);\n         return true;\n    }\n\n}\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/jayc/Desktop/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7964
      ]
    },
    "id": 7965,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7774,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "absolutePath": "project:/contracts/Oraclize.sol",
        "file": "./Oraclize.sol",
        "id": 7775,
        "nodeType": "ImportDirective",
        "scope": 7965,
        "sourceUnit": 7773,
        "src": "34:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7776,
        "nodeType": "ImportDirective",
        "scope": 7965,
        "sourceUnit": 1448,
        "src": "59:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7777,
        "nodeType": "ImportDirective",
        "scope": 7965,
        "sourceUnit": 10515,
        "src": "90:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7778,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10514,
              "src": "407:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10514",
                "typeString": "contract Verifier"
              }
            },
            "id": 7779,
            "nodeType": "InheritanceSpecifier",
            "src": "407:8:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7780,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1447,
              "src": "417:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1447",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7781,
            "nodeType": "InheritanceSpecifier",
            "src": "417:17:7"
          }
        ],
        "contractDependencies": [
          408,
          467,
          513,
          1006,
          1304,
          1416,
          1447,
          7772,
          10514
        ],
        "contractKind": "contract",
        "documentation": "/ TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>",
        "fullyImplemented": true,
        "id": 7964,
        "linearizedBaseContracts": [
          7964,
          1447,
          1416,
          7772,
          1304,
          1006,
          513,
          467,
          408,
          10514
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7796,
              "nodeType": "Block",
              "src": "463:68:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 7788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "502:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "513:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 7789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "505:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 7791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "505:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 7792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "517:5:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 7787,
                          "name": "Solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7804,
                          "src": "493:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Solution_$7804_storage_ptr_$",
                            "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                          }
                        },
                        "id": 7793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "493:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7804_memory",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7804_memory",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7784,
                        "name": "solutionStruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7807,
                        "src": "473:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7804_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "473:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7804_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "473:51:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7795,
                  "nodeType": "ExpressionStatement",
                  "src": "473:51:7"
                }
              ]
            },
            "documentation": null,
            "id": 7797,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:2:7"
            },
            "returnParameters": {
              "id": 7783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:0:7"
            },
            "scope": 7964,
            "src": "442:89:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7804,
            "members": [
              {
                "constant": false,
                "id": 7799,
                "name": "_index",
                "nodeType": "VariableDeclaration",
                "scope": 7804,
                "src": "639:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7798,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "639:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7801,
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 7804,
                "src": "665:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7800,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "665:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7803,
                "name": "_isMint",
                "nodeType": "VariableDeclaration",
                "scope": 7804,
                "src": "694:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7802,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "694:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7964,
            "src": "611:103:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7807,
            "name": "solutionStruct",
            "nodeType": "VariableDeclaration",
            "scope": 7964,
            "src": "768:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7804_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7805,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7804,
                "src": "768:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7804_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7806,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "768:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7804_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7811,
            "name": "uniqueSolution",
            "nodeType": "VariableDeclaration",
            "scope": 7964,
            "src": "865:46:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7810,
              "keyType": {
                "id": 7808,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "873:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "865:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7809,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "884:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7822,
              "nodeType": "Block",
              "src": "947:85:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7814,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10529,
                            "src": "965:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "965:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7816,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "979:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "965:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f74206f776e6572206f662074686520636f6e7472616374",
                        "id": 7818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "986:27:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f976e4ccda09d0d302a6e69db25d90361144803b9850fee6ee4100a680ddad0",
                          "typeString": "literal_string \"Not owner of the contract\""
                        },
                        "value": "Not owner of the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f976e4ccda09d0d302a6e69db25d90361144803b9850fee6ee4100a680ddad0",
                          "typeString": "literal_string \"Not owner of the contract\""
                        }
                      ],
                      "id": 7813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10532,
                        10533
                      ],
                      "referencedDeclaration": 10533,
                      "src": "957:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:57:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7820,
                  "nodeType": "ExpressionStatement",
                  "src": "957:57:7"
                },
                {
                  "id": 7821,
                  "nodeType": "PlaceholderStatement",
                  "src": "1024:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 7823,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "945:2:7"
            },
            "src": "927:105:7",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7829,
            "name": "addedSolution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7825,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7829,
                  "src": "1120:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7827,
                  "indexed": false,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7829,
                  "src": "1135:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1119:33:7"
            },
            "src": "1100:53:7"
          },
          {
            "body": {
              "id": 7914,
              "nodeType": "Block",
              "src": "1388:461:7",
              "statements": [
                {
                  "assignments": [
                    7855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7855,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7914,
                      "src": "1398:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7854,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1398:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7865,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7859,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7837,
                            "src": "1439:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7860,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7843,
                            "src": "1442:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7861,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7847,
                            "src": "1445:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7862,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7851,
                            "src": "1448:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7857,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10516,
                            "src": "1422:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1422:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1422:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7856,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10523,
                      "src": "1412:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1398:57:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7867,
                            "name": "uniqueSolution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7811,
                            "src": "1473:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7869,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7868,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7855,
                            "src": "1488:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1473:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 7870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1496:5:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1473:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f74206120756e6971756520736f6c7574696f6e",
                        "id": 7872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1503:23:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d21790aaae0b0d310043f1c55bd4c10924b26bf343132dcd7376dddbbef6b7f",
                          "typeString": "literal_string \"Not a unique solution\""
                        },
                        "value": "Not a unique solution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d21790aaae0b0d310043f1c55bd4c10924b26bf343132dcd7376dddbbef6b7f",
                          "typeString": "literal_string \"Not a unique solution\""
                        }
                      ],
                      "id": 7866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10532,
                        10533
                      ],
                      "referencedDeclaration": 10533,
                      "src": "1465:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1465:62:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7874,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:62:7"
                },
                {
                  "assignments": [
                    7876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7876,
                      "name": "txVerifyTrue",
                      "nodeType": "VariableDeclaration",
                      "scope": 7914,
                      "src": "1537:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7875,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1537:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7883,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7878,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7837,
                        "src": "1566:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7879,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7843,
                        "src": "1569:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7880,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7847,
                        "src": "1572:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7881,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7851,
                        "src": "1575:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7877,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10513,
                      "src": "1557:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)"
                      }
                    },
                    "id": 7882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1557:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1537:44:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7885,
                        "name": "txVerifyTrue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7876,
                        "src": "1599:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f6c7574696f6e7320636f756c64206e6f74206265207665726966696564",
                        "id": 7886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1613:33:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16fcfa649ae4c0cb060d69eabc594384a4d28c629d1fab502c1afc3ce1f8ec45",
                          "typeString": "literal_string \"solutions could not be verified\""
                        },
                        "value": "solutions could not be verified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16fcfa649ae4c0cb060d69eabc594384a4d28c629d1fab502c1afc3ce1f8ec45",
                          "typeString": "literal_string \"solutions could not be verified\""
                        }
                      ],
                      "id": 7884,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10532,
                        10533
                      ],
                      "referencedDeclaration": 10533,
                      "src": "1591:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7888,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:56:7"
                },
                {
                  "assignments": [
                    7890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7890,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7914,
                      "src": "1658:24:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7804_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7889,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7804,
                        "src": "1658:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7804_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7896,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7892,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7833,
                        "src": "1694:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7893,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7831,
                        "src": "1702:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 7894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1712:5:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7891,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7804,
                      "src": "1685:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7804_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7804_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1658:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7900,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "1749:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7804_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7804_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7897,
                        "name": "solutionStruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7807,
                        "src": "1729:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7804_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1729:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7804_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7902,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:29:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7903,
                        "name": "uniqueSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7811,
                        "src": "1769:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7905,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7904,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7855,
                        "src": "1784:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1769:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1791:4:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1769:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7908,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:26:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7910,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7833,
                        "src": "1825:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7911,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7831,
                        "src": "1833:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7909,
                      "name": "addedSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7829,
                      "src": "1811:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7913,
                  "nodeType": "EmitStatement",
                  "src": "1806:36:7"
                }
              ]
            },
            "documentation": null,
            "id": 7915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolutionArray",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7831,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7915,
                  "src": "1268:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7833,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7915,
                  "src": "1286:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7837,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7915,
                  "src": "1302:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7834,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1302:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7836,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1307:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1302:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7843,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7915,
                  "src": "1320:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7838,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1320:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7840,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1325:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1320:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7842,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1328:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1320:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7847,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7915,
                  "src": "1341:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7844,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1341:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7846,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1346:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1341:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7851,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7915,
                  "src": "1359:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7848,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1359:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7850,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1364:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1359:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1267:113:7"
            },
            "returnParameters": {
              "id": 7853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1388:0:7"
            },
            "scope": 7964,
            "src": "1242:607:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7962,
              "nodeType": "Block",
              "src": "2164:321:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7927,
                              "name": "solutionStruct",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7807,
                              "src": "2182:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Solution_$7804_storage_$dyn_storage",
                                "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                              }
                            },
                            "id": 7929,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7928,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7919,
                              "src": "2197:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2182:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7804_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7930,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_address",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7801,
                          "src": "2182:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7931,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7917,
                          "src": "2218:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2182:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7669646564204164647265737320646f6573206e6f74206d617463682074686520736f6c7574696f6e2061646472657373",
                        "id": 7933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2228:54:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b8bc568503bfbd117c6df48fe4cd6eac82367c26ef4507d63ecc63a30d80a8d",
                          "typeString": "literal_string \"Provided Address does not match the solution address\""
                        },
                        "value": "Provided Address does not match the solution address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b8bc568503bfbd117c6df48fe4cd6eac82367c26ef4507d63ecc63a30d80a8d",
                          "typeString": "literal_string \"Provided Address does not match the solution address\""
                        }
                      ],
                      "id": 7926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10532,
                        10533
                      ],
                      "referencedDeclaration": 10533,
                      "src": "2174:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2174:109:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7935,
                  "nodeType": "ExpressionStatement",
                  "src": "2174:109:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7937,
                              "name": "solutionStruct",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7807,
                              "src": "2301:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Solution_$7804_storage_$dyn_storage",
                                "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                              }
                            },
                            "id": 7939,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7938,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7919,
                              "src": "2316:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2301:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7804_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7940,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_isMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7803,
                          "src": "2301:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 7941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2336:5:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2301:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20686173206265656e206d696e746564",
                        "id": 7943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2343:23:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fc437af15055e5b1884598de46933c434945be1e31d9b764f4d2a4da4c40e34",
                          "typeString": "literal_string \"Token has been minted\""
                        },
                        "value": "Token has been minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fc437af15055e5b1884598de46933c434945be1e31d9b764f4d2a4da4c40e34",
                          "typeString": "literal_string \"Token has been minted\""
                        }
                      ],
                      "id": 7936,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10532,
                        10533
                      ],
                      "referencedDeclaration": 10533,
                      "src": "2293:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:74:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7945,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:74:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7946,
                          "name": "solutionStruct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7807,
                          "src": "2378:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7804_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                          }
                        },
                        "id": 7948,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7947,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7919,
                          "src": "2393:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2378:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7804_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_isMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7803,
                      "src": "2378:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2412:4:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2378:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7952,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:38:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7956,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7917,
                        "src": "2438:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7957,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7919,
                        "src": "2448:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7953,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10586,
                        "src": "2427:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7964",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1446,
                      "src": "2427:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7959,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:29:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2474:4:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7925,
                  "id": 7961,
                  "nodeType": "Return",
                  "src": "2467:11:7"
                }
              ]
            },
            "documentation": null,
            "id": 7963,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7922,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7921,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7823,
                  "src": "2140:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2140:9:7"
              }
            ],
            "name": "mintTheNft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7917,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "2097:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7919,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "2115:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2095:37:7"
            },
            "returnParameters": {
              "id": 7925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7924,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "2158:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7923,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2157:6:7"
            },
            "scope": 7964,
            "src": "2076:409:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7965,
        "src": "376:2112:7"
      }
    ],
    "src": "0:2518:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7964
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7774,
        "name": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "attributes": {
          "SourceUnit": 7773,
          "absolutePath": "project:/contracts/Oraclize.sol",
          "file": "./Oraclize.sol",
          "scope": 7965,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7775,
        "name": "ImportDirective",
        "src": "34:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1448,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7965,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7776,
        "name": "ImportDirective",
        "src": "59:30:7"
      },
      {
        "attributes": {
          "SourceUnit": 10515,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7965,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7777,
        "name": "ImportDirective",
        "src": "90:24:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            408,
            467,
            513,
            1006,
            1304,
            1416,
            1447,
            7772,
            10514
          ],
          "contractKind": "contract",
          "documentation": "/ TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7964,
            1447,
            1416,
            7772,
            1304,
            1006,
            513,
            467,
            408,
            10514
          ],
          "name": "SolnSquareVerifier",
          "scope": 7965
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10514,
                  "type": "contract Verifier"
                },
                "id": 7778,
                "name": "UserDefinedTypeName",
                "src": "407:8:7"
              }
            ],
            "id": 7779,
            "name": "InheritanceSpecifier",
            "src": "407:8:7"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1447,
                  "type": "contract CustomERC721Token"
                },
                "id": 7780,
                "name": "UserDefinedTypeName",
                "src": "417:17:7"
              }
            ],
            "id": 7781,
            "name": "InheritanceSpecifier",
            "src": "417:17:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7964,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7782,
                "name": "ParameterList",
                "src": "453:2:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7783,
                "name": "ParameterList",
                "src": "463:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7804_memory",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7807,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutionStruct"
                                },
                                "id": 7784,
                                "name": "Identifier",
                                "src": "473:14:7"
                              }
                            ],
                            "id": 7786,
                            "name": "MemberAccess",
                            "src": "473:19:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7804,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7787,
                                "name": "Identifier",
                                "src": "493:8:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 7788,
                                "name": "Literal",
                                "src": "502:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7789,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "505:7:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7790,
                                    "name": "Literal",
                                    "src": "513:1:7"
                                  }
                                ],
                                "id": 7791,
                                "name": "FunctionCall",
                                "src": "505:10:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 7792,
                                "name": "Literal",
                                "src": "517:5:7"
                              }
                            ],
                            "id": 7793,
                            "name": "FunctionCall",
                            "src": "493:30:7"
                          }
                        ],
                        "id": 7794,
                        "name": "FunctionCall",
                        "src": "473:51:7"
                      }
                    ],
                    "id": 7795,
                    "name": "ExpressionStatement",
                    "src": "473:51:7"
                  }
                ],
                "id": 7796,
                "name": "Block",
                "src": "463:68:7"
              }
            ],
            "id": 7797,
            "name": "FunctionDefinition",
            "src": "442:89:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7964,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_index",
                  "scope": 7804,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7798,
                    "name": "ElementaryTypeName",
                    "src": "639:7:7"
                  }
                ],
                "id": 7799,
                "name": "VariableDeclaration",
                "src": "639:14:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_address",
                  "scope": 7804,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7800,
                    "name": "ElementaryTypeName",
                    "src": "665:7:7"
                  }
                ],
                "id": 7801,
                "name": "VariableDeclaration",
                "src": "665:16:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_isMint",
                  "scope": 7804,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7802,
                    "name": "ElementaryTypeName",
                    "src": "694:4:7"
                  }
                ],
                "id": 7803,
                "name": "VariableDeclaration",
                "src": "694:12:7"
              }
            ],
            "id": 7804,
            "name": "StructDefinition",
            "src": "611:103:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionStruct",
              "scope": 7964,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7804,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7805,
                    "name": "UserDefinedTypeName",
                    "src": "768:8:7"
                  }
                ],
                "id": 7806,
                "name": "ArrayTypeName",
                "src": "768:10:7"
              }
            ],
            "id": 7807,
            "name": "VariableDeclaration",
            "src": "768:25:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolution",
              "scope": 7964,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7808,
                    "name": "ElementaryTypeName",
                    "src": "873:7:7"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7809,
                    "name": "ElementaryTypeName",
                    "src": "884:4:7"
                  }
                ],
                "id": 7810,
                "name": "Mapping",
                "src": "865:24:7"
              }
            ],
            "id": 7811,
            "name": "VariableDeclaration",
            "src": "865:46:7"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyOwner",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7812,
                "name": "ParameterList",
                "src": "945:2:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3f976e4ccda09d0d302a6e69db25d90361144803b9850fee6ee4100a680ddad0",
                                  "typeString": "literal_string \"Not owner of the contract\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10532,
                                10533
                              ],
                              "referencedDeclaration": 10533,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7813,
                            "name": "Identifier",
                            "src": "957:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10529,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7814,
                                    "name": "Identifier",
                                    "src": "965:3:7"
                                  }
                                ],
                                "id": 7815,
                                "name": "MemberAccess",
                                "src": "965:10:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 335,
                                  "type": "address",
                                  "value": "_owner"
                                },
                                "id": 7816,
                                "name": "Identifier",
                                "src": "979:6:7"
                              }
                            ],
                            "id": 7817,
                            "name": "BinaryOperation",
                            "src": "965:20:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f74206f776e6572206f662074686520636f6e7472616374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Not owner of the contract\"",
                              "value": "Not owner of the contract"
                            },
                            "id": 7818,
                            "name": "Literal",
                            "src": "986:27:7"
                          }
                        ],
                        "id": 7819,
                        "name": "FunctionCall",
                        "src": "957:57:7"
                      }
                    ],
                    "id": 7820,
                    "name": "ExpressionStatement",
                    "src": "957:57:7"
                  },
                  {
                    "id": 7821,
                    "name": "PlaceholderStatement",
                    "src": "1024:1:7"
                  }
                ],
                "id": 7822,
                "name": "Block",
                "src": "947:85:7"
              }
            ],
            "id": 7823,
            "name": "ModifierDefinition",
            "src": "927:105:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "addedSolution"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7829,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7824,
                        "name": "ElementaryTypeName",
                        "src": "1120:7:7"
                      }
                    ],
                    "id": 7825,
                    "name": "VariableDeclaration",
                    "src": "1120:13:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_address",
                      "scope": 7829,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7826,
                        "name": "ElementaryTypeName",
                        "src": "1135:7:7"
                      }
                    ],
                    "id": 7827,
                    "name": "VariableDeclaration",
                    "src": "1135:16:7"
                  }
                ],
                "id": 7828,
                "name": "ParameterList",
                "src": "1119:33:7"
              }
            ],
            "id": 7829,
            "name": "EventDefinition",
            "src": "1100:53:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolutionArray",
              "scope": 7964,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 7915,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7830,
                        "name": "ElementaryTypeName",
                        "src": "1268:7:7"
                      }
                    ],
                    "id": 7831,
                    "name": "VariableDeclaration",
                    "src": "1268:16:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_index",
                      "scope": 7915,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7832,
                        "name": "ElementaryTypeName",
                        "src": "1286:7:7"
                      }
                    ],
                    "id": 7833,
                    "name": "VariableDeclaration",
                    "src": "1286:14:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7915,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7834,
                            "name": "ElementaryTypeName",
                            "src": "1302:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7835,
                            "name": "Literal",
                            "src": "1307:1:7"
                          }
                        ],
                        "id": 7836,
                        "name": "ArrayTypeName",
                        "src": "1302:7:7"
                      }
                    ],
                    "id": 7837,
                    "name": "VariableDeclaration",
                    "src": "1302:16:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7915,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7838,
                                "name": "ElementaryTypeName",
                                "src": "1320:4:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7839,
                                "name": "Literal",
                                "src": "1325:1:7"
                              }
                            ],
                            "id": 7840,
                            "name": "ArrayTypeName",
                            "src": "1320:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7841,
                            "name": "Literal",
                            "src": "1328:1:7"
                          }
                        ],
                        "id": 7842,
                        "name": "ArrayTypeName",
                        "src": "1320:10:7"
                      }
                    ],
                    "id": 7843,
                    "name": "VariableDeclaration",
                    "src": "1320:19:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7915,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7844,
                            "name": "ElementaryTypeName",
                            "src": "1341:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7845,
                            "name": "Literal",
                            "src": "1346:1:7"
                          }
                        ],
                        "id": 7846,
                        "name": "ArrayTypeName",
                        "src": "1341:7:7"
                      }
                    ],
                    "id": 7847,
                    "name": "VariableDeclaration",
                    "src": "1341:16:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7915,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7848,
                            "name": "ElementaryTypeName",
                            "src": "1359:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7849,
                            "name": "Literal",
                            "src": "1364:1:7"
                          }
                        ],
                        "id": 7850,
                        "name": "ArrayTypeName",
                        "src": "1359:7:7"
                      }
                    ],
                    "id": 7851,
                    "name": "VariableDeclaration",
                    "src": "1359:20:7"
                  }
                ],
                "id": 7852,
                "name": "ParameterList",
                "src": "1267:113:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7853,
                "name": "ParameterList",
                "src": "1388:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7855
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7914,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7854,
                            "name": "ElementaryTypeName",
                            "src": "1398:7:7"
                          }
                        ],
                        "id": 7855,
                        "name": "VariableDeclaration",
                        "src": "1398:11:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10523,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7856,
                            "name": "Identifier",
                            "src": "1412:9:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10516,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7857,
                                    "name": "Identifier",
                                    "src": "1422:3:7"
                                  }
                                ],
                                "id": 7858,
                                "name": "MemberAccess",
                                "src": "1422:16:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7837,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7859,
                                "name": "Identifier",
                                "src": "1439:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7843,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7860,
                                "name": "Identifier",
                                "src": "1442:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7847,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7861,
                                "name": "Identifier",
                                "src": "1445:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7851,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7862,
                                "name": "Identifier",
                                "src": "1448:5:7"
                              }
                            ],
                            "id": 7863,
                            "name": "FunctionCall",
                            "src": "1422:32:7"
                          }
                        ],
                        "id": 7864,
                        "name": "FunctionCall",
                        "src": "1412:43:7"
                      }
                    ],
                    "id": 7865,
                    "name": "VariableDeclarationStatement",
                    "src": "1398:57:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4d21790aaae0b0d310043f1c55bd4c10924b26bf343132dcd7376dddbbef6b7f",
                                  "typeString": "literal_string \"Not a unique solution\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10532,
                                10533
                              ],
                              "referencedDeclaration": 10533,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7866,
                            "name": "Identifier",
                            "src": "1465:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7811,
                                      "type": "mapping(bytes32 => bool)",
                                      "value": "uniqueSolution"
                                    },
                                    "id": 7867,
                                    "name": "Identifier",
                                    "src": "1473:14:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7855,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7868,
                                    "name": "Identifier",
                                    "src": "1488:3:7"
                                  }
                                ],
                                "id": 7869,
                                "name": "IndexAccess",
                                "src": "1473:19:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 7870,
                                "name": "Literal",
                                "src": "1496:5:7"
                              }
                            ],
                            "id": 7871,
                            "name": "BinaryOperation",
                            "src": "1473:28:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f74206120756e6971756520736f6c7574696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Not a unique solution\"",
                              "value": "Not a unique solution"
                            },
                            "id": 7872,
                            "name": "Literal",
                            "src": "1503:23:7"
                          }
                        ],
                        "id": 7873,
                        "name": "FunctionCall",
                        "src": "1465:62:7"
                      }
                    ],
                    "id": 7874,
                    "name": "ExpressionStatement",
                    "src": "1465:62:7"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7876
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "txVerifyTrue",
                          "scope": 7914,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7875,
                            "name": "ElementaryTypeName",
                            "src": "1537:4:7"
                          }
                        ],
                        "id": 7876,
                        "name": "VariableDeclaration",
                        "src": "1537:17:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                  "typeString": "uint256[2] memory[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10513,
                              "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)",
                              "value": "verifyTx"
                            },
                            "id": 7877,
                            "name": "Identifier",
                            "src": "1557:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7837,
                              "type": "uint256[2] memory",
                              "value": "a"
                            },
                            "id": 7878,
                            "name": "Identifier",
                            "src": "1566:1:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7843,
                              "type": "uint256[2] memory[2] memory",
                              "value": "b"
                            },
                            "id": 7879,
                            "name": "Identifier",
                            "src": "1569:1:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7847,
                              "type": "uint256[2] memory",
                              "value": "c"
                            },
                            "id": 7880,
                            "name": "Identifier",
                            "src": "1572:1:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7851,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7881,
                            "name": "Identifier",
                            "src": "1575:5:7"
                          }
                        ],
                        "id": 7882,
                        "name": "FunctionCall",
                        "src": "1557:24:7"
                      }
                    ],
                    "id": 7883,
                    "name": "VariableDeclarationStatement",
                    "src": "1537:44:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_16fcfa649ae4c0cb060d69eabc594384a4d28c629d1fab502c1afc3ce1f8ec45",
                                  "typeString": "literal_string \"solutions could not be verified\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10532,
                                10533
                              ],
                              "referencedDeclaration": 10533,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7884,
                            "name": "Identifier",
                            "src": "1591:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7876,
                              "type": "bool",
                              "value": "txVerifyTrue"
                            },
                            "id": 7885,
                            "name": "Identifier",
                            "src": "1599:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "736f6c7574696f6e7320636f756c64206e6f74206265207665726966696564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"solutions could not be verified\"",
                              "value": "solutions could not be verified"
                            },
                            "id": 7886,
                            "name": "Literal",
                            "src": "1613:33:7"
                          }
                        ],
                        "id": 7887,
                        "name": "FunctionCall",
                        "src": "1591:56:7"
                      }
                    ],
                    "id": 7888,
                    "name": "ExpressionStatement",
                    "src": "1591:56:7"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7890
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7914,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7804,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7889,
                            "name": "UserDefinedTypeName",
                            "src": "1658:8:7"
                          }
                        ],
                        "id": 7890,
                        "name": "VariableDeclaration",
                        "src": "1658:24:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7804,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7891,
                            "name": "Identifier",
                            "src": "1685:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7833,
                              "type": "uint256",
                              "value": "_index"
                            },
                            "id": 7892,
                            "name": "Identifier",
                            "src": "1694:6:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7831,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7893,
                            "name": "Identifier",
                            "src": "1702:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 7894,
                            "name": "Literal",
                            "src": "1712:5:7"
                          }
                        ],
                        "id": 7895,
                        "name": "FunctionCall",
                        "src": "1685:33:7"
                      }
                    ],
                    "id": 7896,
                    "name": "VariableDeclarationStatement",
                    "src": "1658:60:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7804_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7807,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutionStruct"
                                },
                                "id": 7897,
                                "name": "Identifier",
                                "src": "1729:14:7"
                              }
                            ],
                            "id": 7899,
                            "name": "MemberAccess",
                            "src": "1729:19:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7890,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7900,
                            "name": "Identifier",
                            "src": "1749:8:7"
                          }
                        ],
                        "id": 7901,
                        "name": "FunctionCall",
                        "src": "1729:29:7"
                      }
                    ],
                    "id": 7902,
                    "name": "ExpressionStatement",
                    "src": "1729:29:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7811,
                                  "type": "mapping(bytes32 => bool)",
                                  "value": "uniqueSolution"
                                },
                                "id": 7903,
                                "name": "Identifier",
                                "src": "1769:14:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7855,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7904,
                                "name": "Identifier",
                                "src": "1784:3:7"
                              }
                            ],
                            "id": 7905,
                            "name": "IndexAccess",
                            "src": "1769:19:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7906,
                            "name": "Literal",
                            "src": "1791:4:7"
                          }
                        ],
                        "id": 7907,
                        "name": "Assignment",
                        "src": "1769:26:7"
                      }
                    ],
                    "id": 7908,
                    "name": "ExpressionStatement",
                    "src": "1769:26:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7829,
                              "type": "function (uint256,address)",
                              "value": "addedSolution"
                            },
                            "id": 7909,
                            "name": "Identifier",
                            "src": "1811:13:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7833,
                              "type": "uint256",
                              "value": "_index"
                            },
                            "id": 7910,
                            "name": "Identifier",
                            "src": "1825:6:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7831,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7911,
                            "name": "Identifier",
                            "src": "1833:8:7"
                          }
                        ],
                        "id": 7912,
                        "name": "FunctionCall",
                        "src": "1811:31:7"
                      }
                    ],
                    "id": 7913,
                    "name": "EmitStatement",
                    "src": "1806:36:7"
                  }
                ],
                "id": 7914,
                "name": "Block",
                "src": "1388:461:7"
              }
            ],
            "id": 7915,
            "name": "FunctionDefinition",
            "src": "1242:607:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mintTheNft",
              "scope": 7964,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 7963,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7916,
                        "name": "ElementaryTypeName",
                        "src": "2097:7:7"
                      }
                    ],
                    "id": 7917,
                    "name": "VariableDeclaration",
                    "src": "2097:16:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7963,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7918,
                        "name": "ElementaryTypeName",
                        "src": "2115:7:7"
                      }
                    ],
                    "id": 7919,
                    "name": "VariableDeclaration",
                    "src": "2115:15:7"
                  }
                ],
                "id": 7920,
                "name": "ParameterList",
                "src": "2095:37:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7963,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7923,
                        "name": "ElementaryTypeName",
                        "src": "2158:4:7"
                      }
                    ],
                    "id": 7924,
                    "name": "VariableDeclaration",
                    "src": "2158:4:7"
                  }
                ],
                "id": 7925,
                "name": "ParameterList",
                "src": "2157:6:7"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7823,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 7921,
                    "name": "Identifier",
                    "src": "2140:9:7"
                  }
                ],
                "id": 7922,
                "name": "ModifierInvocation",
                "src": "2140:9:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3b8bc568503bfbd117c6df48fe4cd6eac82367c26ef4507d63ecc63a30d80a8d",
                                  "typeString": "literal_string \"Provided Address does not match the solution address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10532,
                                10533
                              ],
                              "referencedDeclaration": 10533,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7926,
                            "name": "Identifier",
                            "src": "2174:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_address",
                                  "referencedDeclaration": 7801,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7807,
                                          "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                          "value": "solutionStruct"
                                        },
                                        "id": 7927,
                                        "name": "Identifier",
                                        "src": "2182:14:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7919,
                                          "type": "uint256",
                                          "value": "tokenId"
                                        },
                                        "id": 7928,
                                        "name": "Identifier",
                                        "src": "2197:7:7"
                                      }
                                    ],
                                    "id": 7929,
                                    "name": "IndexAccess",
                                    "src": "2182:23:7"
                                  }
                                ],
                                "id": 7930,
                                "name": "MemberAccess",
                                "src": "2182:32:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7917,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 7931,
                                "name": "Identifier",
                                "src": "2218:8:7"
                              }
                            ],
                            "id": 7932,
                            "name": "BinaryOperation",
                            "src": "2182:44:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f7669646564204164647265737320646f6573206e6f74206d617463682074686520736f6c7574696f6e2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Provided Address does not match the solution address\"",
                              "value": "Provided Address does not match the solution address"
                            },
                            "id": 7933,
                            "name": "Literal",
                            "src": "2228:54:7"
                          }
                        ],
                        "id": 7934,
                        "name": "FunctionCall",
                        "src": "2174:109:7"
                      }
                    ],
                    "id": 7935,
                    "name": "ExpressionStatement",
                    "src": "2174:109:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1fc437af15055e5b1884598de46933c434945be1e31d9b764f4d2a4da4c40e34",
                                  "typeString": "literal_string \"Token has been minted\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10532,
                                10533
                              ],
                              "referencedDeclaration": 10533,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7936,
                            "name": "Identifier",
                            "src": "2293:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_isMint",
                                  "referencedDeclaration": 7803,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7807,
                                          "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                          "value": "solutionStruct"
                                        },
                                        "id": 7937,
                                        "name": "Identifier",
                                        "src": "2301:14:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7919,
                                          "type": "uint256",
                                          "value": "tokenId"
                                        },
                                        "id": 7938,
                                        "name": "Identifier",
                                        "src": "2316:7:7"
                                      }
                                    ],
                                    "id": 7939,
                                    "name": "IndexAccess",
                                    "src": "2301:23:7"
                                  }
                                ],
                                "id": 7940,
                                "name": "MemberAccess",
                                "src": "2301:31:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 7941,
                                "name": "Literal",
                                "src": "2336:5:7"
                              }
                            ],
                            "id": 7942,
                            "name": "BinaryOperation",
                            "src": "2301:40:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546f6b656e20686173206265656e206d696e746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Token has been minted\"",
                              "value": "Token has been minted"
                            },
                            "id": 7943,
                            "name": "Literal",
                            "src": "2343:23:7"
                          }
                        ],
                        "id": 7944,
                        "name": "FunctionCall",
                        "src": "2293:74:7"
                      }
                    ],
                    "id": 7945,
                    "name": "ExpressionStatement",
                    "src": "2293:74:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_isMint",
                              "referencedDeclaration": 7803,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7807,
                                      "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                      "value": "solutionStruct"
                                    },
                                    "id": 7946,
                                    "name": "Identifier",
                                    "src": "2378:14:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7919,
                                      "type": "uint256",
                                      "value": "tokenId"
                                    },
                                    "id": 7947,
                                    "name": "Identifier",
                                    "src": "2393:7:7"
                                  }
                                ],
                                "id": 7948,
                                "name": "IndexAccess",
                                "src": "2378:23:7"
                              }
                            ],
                            "id": 7949,
                            "name": "MemberAccess",
                            "src": "2378:31:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7950,
                            "name": "Literal",
                            "src": "2412:4:7"
                          }
                        ],
                        "id": 7951,
                        "name": "Assignment",
                        "src": "2378:38:7"
                      }
                    ],
                    "id": 7952,
                    "name": "ExpressionStatement",
                    "src": "2378:38:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1446,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10586,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7953,
                                "name": "Identifier",
                                "src": "2427:5:7"
                              }
                            ],
                            "id": 7955,
                            "name": "MemberAccess",
                            "src": "2427:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7917,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 7956,
                            "name": "Identifier",
                            "src": "2438:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7919,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7957,
                            "name": "Identifier",
                            "src": "2448:7:7"
                          }
                        ],
                        "id": 7958,
                        "name": "FunctionCall",
                        "src": "2427:29:7"
                      }
                    ],
                    "id": 7959,
                    "name": "ExpressionStatement",
                    "src": "2427:29:7"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7925
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 7960,
                        "name": "Literal",
                        "src": "2474:4:7"
                      }
                    ],
                    "id": 7961,
                    "name": "Return",
                    "src": "2467:11:7"
                  }
                ],
                "id": 7962,
                "name": "Block",
                "src": "2164:321:7"
              }
            ],
            "id": 7963,
            "name": "FunctionDefinition",
            "src": "2076:409:7"
          }
        ],
        "id": 7964,
        "name": "ContractDefinition",
        "src": "376:2112:7"
      }
    ],
    "id": 7965,
    "name": "SourceUnit",
    "src": "0:2518:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xfb7467e719Ea856e29d40bdfC3c33D5DE9b1d9C4",
      "transactionHash": "0xd23e65542296026f753b50e7b02dd7483f7c0d2d02550c4856f805850acd0a35"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xA50b9b520e0f9a5018AbE5751388Bc28201c419a",
      "transactionHash": "0xe5f05b74daa8050741260e391ade26beaebca8c68bc20e0b1add5418723b35c5"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-08-03T23:19:27.156Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "/ TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>"
  }
}